2025-05-27 21:40:09 | INFO     | __main__:<module>:791 - ==================================================
2025-05-27 21:40:09 | INFO     | __main__:<module>:792 - Starting Text-to-SQL Application
2025-05-27 21:40:09 | INFO     | __main__:<module>:793 - Start time: 2025-05-27T21:40:09.864142
2025-05-27 21:40:09 | INFO     | __main__:<module>:794 - ==================================================
2025-05-27 21:40:09 | INFO     | __main__:__init__:58 - Initializing Text-to-SQL Application
2025-05-27 21:40:09 | INFO     | __main__:__init__:60 - Session ID: 20250527_214009
2025-05-27 21:40:09 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.setup_page_config | args=(<__main__.TextToSQLApp object at 0x000002A94E57D990>,) | kwargs={}
2025-05-27 21:40:09 | DEBUG    | __main__:setup_page_config:75 - Setting up Streamlit page configuration
2025-05-27 21:40:09 | INFO     | __main__:setup_page_config:88 - Page configuration set: {'page_title': 'Text-to-SQL Assistant', 'page_icon': 'üîç'}
2025-05-27 21:40:09 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.setup_page_config | duration=0.003s
2025-05-27 21:40:09 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.initialize_database | args=(<__main__.TextToSQLApp object at 0x000002A94E57D990>,) | kwargs={}
2025-05-27 21:40:09 | INFO     | __main__:initialize_database:94 - Initializing database connection
2025-05-27 21:40:09 | DEBUG    | __main__:initialize_database:97 - Database path: chinook.db
2025-05-27 21:40:09 | INFO     | __main__:initialize_database:105 - Database file size: 884736 bytes
2025-05-27 21:40:09 | INFO     | __main__:initialize_database:113 - Database connection test successful. Tables found: [(13,)]
2025-05-27 21:40:09 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.log_database_schema | args=(<__main__.TextToSQLApp object at 0x000002A94E57D990>,) | kwargs={}
2025-05-27 21:40:09 | INFO     | __main__:log_database_schema:132 - Database tables: [('albums',), ('sqlite_sequence',), ('artists',), ('customers',), ('employees',), ('genres',), ('invoices',), ('invoice_items',), ('media_types',), ('playlists',), ('playlist_track',), ('tracks',), ('sqlite_stat1',)]
2025-05-27 21:40:09 | DEBUG    | __main__:log_database_schema:140 - Schema for table albums: [(0, 'AlbumId', 'INTEGER', 1, None, 1), (1, 'Title', 'NVARCHAR(160)', 1, None, 0), (2, 'ArtistId', 'INTEGER', 1, None, 0)]
2025-05-27 21:40:09 | DEBUG    | __main__:log_database_schema:140 - Schema for table sqlite_sequence: [(0, 'name', '', 0, None, 0), (1, 'seq', '', 0, None, 0)]
2025-05-27 21:40:09 | DEBUG    | __main__:log_database_schema:140 - Schema for table artists: [(0, 'ArtistId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(120)', 0, None, 0)]
2025-05-27 21:40:09 | DEBUG    | __main__:log_database_schema:140 - Schema for table customers: [(0, 'CustomerId', 'INTEGER', 1, None, 1), (1, 'FirstName', 'NVARCHAR(40)', 1, None, 0), (2, 'LastName', 'NVARCHAR(20)', 1, None, 0), (3, 'Company', 'NVARCHAR(80)', 0, None, 0), (4, 'Address', 'NVARCHAR(70)', 0, None, 0), (5, 'City', 'NVARCHAR(40)', 0, None, 0), (6, 'State', 'NVARCHAR(40)', 0, None, 0), (7, 'Country', 'NVARCHAR(40)', 0, None, 0), (8, 'PostalCode', 'NVARCHAR(10)', 0, None, 0), (9, 'Phone', 'NVARCHAR(24)', 0, None, 0), (10, 'Fax', 'NVARCHAR(24)', 0, None, 0), (11, 'Email', 'NVARCHAR(60)', 1, None, 0), (12, 'SupportRepId', 'INTEGER', 0, None, 0)]
2025-05-27 21:40:09 | DEBUG    | __main__:log_database_schema:140 - Schema for table employees: [(0, 'EmployeeId', 'INTEGER', 1, None, 1), (1, 'LastName', 'NVARCHAR(20)', 1, None, 0), (2, 'FirstName', 'NVARCHAR(20)', 1, None, 0), (3, 'Title', 'NVARCHAR(30)', 0, None, 0), (4, 'ReportsTo', 'INTEGER', 0, None, 0), (5, 'BirthDate', 'DATETIME', 0, None, 0), (6, 'HireDate', 'DATETIME', 0, None, 0), (7, 'Address', 'NVARCHAR(70)', 0, None, 0), (8, 'City', 'NVARCHAR(40)', 0, None, 0), (9, 'State', 'NVARCHAR(40)', 0, None, 0), (10, 'Country', 'NVARCHAR(40)', 0, None, 0), (11, 'PostalCode', 'NVARCHAR(10)', 0, None, 0), (12, 'Phone', 'NVARCHAR(24)', 0, None, 0), (13, 'Fax', 'NVARCHAR(24)', 0, None, 0), (14, 'Email', 'NVARCHAR(60)', 0, None, 0)]
2025-05-27 21:40:09 | DEBUG    | __main__:log_database_schema:140 - Schema for table genres: [(0, 'GenreId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(120)', 0, None, 0)]
2025-05-27 21:40:09 | DEBUG    | __main__:log_database_schema:140 - Schema for table invoices: [(0, 'InvoiceId', 'INTEGER', 1, None, 1), (1, 'CustomerId', 'INTEGER', 1, None, 0), (2, 'InvoiceDate', 'DATETIME', 1, None, 0), (3, 'BillingAddress', 'NVARCHAR(70)', 0, None, 0), (4, 'BillingCity', 'NVARCHAR(40)', 0, None, 0), (5, 'BillingState', 'NVARCHAR(40)', 0, None, 0), (6, 'BillingCountry', 'NVARCHAR(40)', 0, None, 0), (7, 'BillingPostalCode', 'NVARCHAR(10)', 0, None, 0), (8, 'Total', 'NUMERIC(10,2)', 1, None, 0)]
2025-05-27 21:40:09 | DEBUG    | __main__:log_database_schema:140 - Schema for table invoice_items: [(0, 'InvoiceLineId', 'INTEGER', 1, None, 1), (1, 'InvoiceId', 'INTEGER', 1, None, 0), (2, 'TrackId', 'INTEGER', 1, None, 0), (3, 'UnitPrice', 'NUMERIC(10,2)', 1, None, 0), (4, 'Quantity', 'INTEGER', 1, None, 0)]
2025-05-27 21:40:09 | DEBUG    | __main__:log_database_schema:140 - Schema for table media_types: [(0, 'MediaTypeId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(120)', 0, None, 0)]
2025-05-27 21:40:09 | DEBUG    | __main__:log_database_schema:140 - Schema for table playlists: [(0, 'PlaylistId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(120)', 0, None, 0)]
2025-05-27 21:40:09 | DEBUG    | __main__:log_database_schema:140 - Schema for table playlist_track: [(0, 'PlaylistId', 'INTEGER', 1, None, 1), (1, 'TrackId', 'INTEGER', 1, None, 2)]
2025-05-27 21:40:09 | DEBUG    | __main__:log_database_schema:140 - Schema for table tracks: [(0, 'TrackId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(200)', 1, None, 0), (2, 'AlbumId', 'INTEGER', 0, None, 0), (3, 'MediaTypeId', 'INTEGER', 1, None, 0), (4, 'GenreId', 'INTEGER', 0, None, 0), (5, 'Composer', 'NVARCHAR(220)', 0, None, 0), (6, 'Milliseconds', 'INTEGER', 1, None, 0), (7, 'Bytes', 'INTEGER', 0, None, 0), (8, 'UnitPrice', 'NUMERIC(10,2)', 1, None, 0)]
2025-05-27 21:40:09 | DEBUG    | __main__:log_database_schema:140 - Schema for table sqlite_stat1: [(0, 'tbl', '', 0, None, 0), (1, 'idx', '', 0, None, 0), (2, 'stat', '', 0, None, 0)]
2025-05-27 21:40:09 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.log_database_schema | duration=0.032s
2025-05-27 21:40:09 | SUCCESS  | __main__:initialize_database:119 - Database initialization completed
2025-05-27 21:40:09 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.initialize_database | duration=0.089s
2025-05-27 21:40:09 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.initialize_llm | args=(<__main__.TextToSQLApp object at 0x000002A94E57D990>,) | kwargs={}
2025-05-27 21:40:09 | INFO     | __main__:initialize_llm:151 - Initializing Groq LLM
2025-05-27 21:40:09 | DEBUG    | __main__:initialize_llm:161 - Using Groq API key: gsk_sBCV***Lnql
2025-05-27 21:40:11 | INFO     | __main__:initialize_llm:177 - LLM initialization successful in 1.344s
2025-05-27 21:40:11 | DEBUG    | __main__:initialize_llm:178 - LLM test response: content='OK' additional_kwargs={} response_metadata={'token_usage': {'completion_tokens': 2, 'prompt_tokens': 42, 'total_tokens': 44, 'completion_time': 0.016837608, 'prompt_time': 0.002268213, 'queue_time': 0.051617816000000004, 'total_time': 0.019105821}, 'model_name': 'llama-3.3-70b-versatile', 'system_fingerprint': 'fp_6507bcfb6f', 'finish_reason': 'stop', 'logprobs': None} id='run--2d7c22b9-3f71-4e42-ab2b-e09dd1384937-0' usage_metadata={'input_tokens': 42, 'output_tokens': 2, 'total_tokens': 44}
2025-05-27 21:40:11 | INFO     | __main__:initialize_llm:179 - Using model: llama-3.3-70b-versatile
2025-05-27 21:40:11 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.initialize_llm | duration=1.345s
2025-05-27 21:40:11 | INFO     | decorators:wrapper:37 - PERFORMANCE: __main__.TextToSQLApp.initialize_llm took 1.345s
2025-05-27 21:40:11 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.setup_sql_agent | args=(<__main__.TextToSQLApp object at 0x000002A94E57D990>,) | kwargs={}
2025-05-27 21:40:11 | INFO     | __main__:setup_sql_agent:190 - Setting up SQL agent
2025-05-27 21:40:11 | DEBUG    | __main__:setup_sql_agent:194 - SQL toolkit created successfully
2025-05-27 21:40:11 | DEBUG    | __main__:setup_sql_agent:224 - Creating SQL agent with custom prompt
2025-05-27 21:40:11 | SUCCESS  | __main__:setup_sql_agent:232 - SQL agent setup completed successfully
2025-05-27 21:40:11 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.setup_sql_agent | duration=0.000s
2025-05-27 21:40:11 | SUCCESS  | __main__:__init__:67 - Application initialized successfully
2025-05-27 21:40:11 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.run | args=(<__main__.TextToSQLApp object at 0x000002A94E57D990>,) | kwargs={}
2025-05-27 21:40:11 | INFO     | __main__:run:606 - Starting main application runner
2025-05-27 21:40:11 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.display_sample_queries | args=(<__main__.TextToSQLApp object at 0x000002A94E57D990>,) | kwargs={}
2025-05-27 21:40:11 | DEBUG    | __main__:display_sample_queries:553 - Displaying sample queries in sidebar
2025-05-27 21:40:11 | DEBUG    | __main__:display_sample_queries:570 - Displaying 10 sample queries
2025-05-27 21:40:11 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.display_sample_queries | duration=0.009s
2025-05-27 21:40:11 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.display_logs_sidebar | args=(<__main__.TextToSQLApp object at 0x000002A94E57D990>,) | kwargs={}
2025-05-27 21:40:11 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.display_logs_sidebar | duration=0.000s
2025-05-27 21:40:11 | INFO     | __main__:run:645 - Processing button clicked with query: 'What are the total sales by country?'
2025-05-27 21:40:11 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.process_natural_language_query | args=(<__main__.TextToSQLApp object at 0x000002A94E57D990>, 'What are the total sales by country?') | kwargs={}
2025-05-27 21:40:11 | INFO     | __main__:process_natural_language_query:450 - Processing natural language query: 'What are the total sales by country?'
2025-05-27 21:40:11 | INFO     | __main__:process_natural_language_query:455 - Query ID: query_1748362211
2025-05-27 21:40:11 | INFO     | __main__:process_natural_language_query:459 - Step 1: Converting natural language to SQL using LLM (with capture)
2025-05-27 21:40:18 | INFO     | __main__:process_natural_language_query:468 - LLM processing completed in 7.028s
2025-05-27 21:40:18 | SUCCESS  | __main__:process_natural_language_query:484 - Captured SQL query: SELECT i.Total, c.Country FROM invoices i JOIN customers c ON i.CustomerId = c.CustomerId GROUP BY c.Country ORDER BY SUM(i.Total) DESC LIMIT 10...
2025-05-27 21:40:18 | INFO     | __main__:process_natural_language_query:487 - Step 2: Executing SQL query
2025-05-27 21:40:18 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.execute_query | args=(<__main__.TextToSQLApp object at 0x000002A94E57D990>, 'SELECT i.Total, c.Country FROM invoices i JOIN customers c ON i.CustomerId = c.CustomerId GROUP BY c.Country ORDER BY SUM(i.Total) DESC LIMIT 10... | kwargs={}
2025-05-27 21:40:18 | INFO     | __main__:execute_query:393 - Executing SQL query: SELECT i.Total, c.Country FROM invoices i JOIN customers c ON i.CustomerId = c.CustomerId GROUP BY c...
2025-05-27 21:40:18 | DEBUG    | __main__:execute_query:400 - Query has 1 lines
2025-05-27 21:40:18 | DEBUG    | __main__:execute_query:405 - Query complexity score: 3
2025-05-27 21:40:18 | DEBUG    | __main__:execute_query:408 - Database connection established for query execution
2025-05-27 21:40:18 | SUCCESS  | __main__:execute_query:415 - Query executed successfully in 0.028s
2025-05-27 21:40:18 | INFO     | __main__:execute_query:416 - Query returned 10 rows and 2 columns
2025-05-27 21:40:18 | DEBUG    | __main__:execute_query:419 - Column names: ['Total', 'Country']
2025-05-27 21:40:18 | DEBUG    | __main__:execute_query:420 - Data types: {'Total': dtype('float64'), 'Country': dtype('O')}
2025-05-27 21:40:18 | DEBUG    | __main__:execute_query:425 - Sample row: {'Total': 0.99, 'Country': 'USA'}
2025-05-27 21:40:18 | INFO     | logger_config:log_performance:93 - PERFORMANCE: {"operation": "sql_query_execution", "duration_ms": 28.29, "timestamp": "2025-05-27T21:40:18.478166", "rows_returned": 10, "columns_returned": 2, "complexity_score": 3, "query_length": 144}
2025-05-27 21:40:18 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.execute_query | duration=0.037s
2025-05-27 21:40:18 | INFO     | __main__:process_natural_language_query:498 - Step 3: Determining chart generation requirements
2025-05-27 21:40:18 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.determine_chart_type | args=(<__main__.TextToSQLApp object at 0x000002A94E57D990>, 'What are the total sales by country?',    Total         Country
0   0.99             USA
1   3.98          Canada
2   1.98          France
3   3... | kwargs={}
2025-05-27 21:40:18 | INFO     | __main__:determine_chart_type:286 - Determining chart type for query: 'What are the total sales by country?...' with data shape: (10, 2)
2025-05-27 21:40:18 | DEBUG    | __main__:determine_chart_type:297 - Query lowercase: what are the total sales by country?
2025-05-27 21:40:18 | DEBUG    | __main__:determine_chart_type:309 - Query analysis - temporal: False, comparison: False, distribution: False
2025-05-27 21:40:18 | DEBUG    | __main__:determine_chart_type:315 - Data analysis - numeric columns: ['Total'], categorical columns: ['Country']
2025-05-27 21:40:18 | DEBUG    | __main__:determine_chart_type:324 - Selected columns - X: Country, Y: Total
2025-05-27 21:40:18 | INFO     | __main__:determine_chart_type:336 - Selected bar chart due to comparison context or categorical data
2025-05-27 21:40:18 | INFO     | __main__:determine_chart_type:344 - Chart decision: type=bar, x_col=Country, y_col=Total
2025-05-27 21:40:18 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.determine_chart_type | duration=0.007s
2025-05-27 21:40:18 | INFO     | __main__:process_natural_language_query:504 - Step 4: Creating bar chart
2025-05-27 21:40:18 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.create_chart | args=(<__main__.TextToSQLApp object at 0x000002A94E57D990>, 'bar',    Total         Country
0   0.99             USA
1   3.98          Canada
2   1.98          France
3   3.98          Brazil
4   1.98     ... | kwargs={}
2025-05-27 21:40:18 | INFO     | __main__:create_chart:351 - Creating bar chart with x_col='Country', y_col='Total'
2025-05-27 21:40:18 | DEBUG    | __main__:create_chart:357 - Creating bar chart
2025-05-27 21:40:19 | SUCCESS  | __main__:create_chart:373 - Bar chart created successfully in 0.464s
2025-05-27 21:40:19 | INFO     | logger_config:log_performance:93 - PERFORMANCE: {"operation": "create_bar_chart", "duration_ms": 463.72, "timestamp": "2025-05-27T21:40:19.026664", "data_rows": 10, "x_col": "Country", "y_col": "Total"}
2025-05-27 21:40:19 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.create_chart | duration=0.480s
2025-05-27 21:40:19 | INFO     | decorators:wrapper:37 - PERFORMANCE: __main__.TextToSQLApp.create_chart took 0.480s
2025-05-27 21:40:19 | SUCCESS  | __main__:process_natural_language_query:511 - Query processing completed successfully in 7.680s
2025-05-27 21:40:19 | INFO     | __main__:process_natural_language_query:512 - Results summary - Rows: 10, Columns: 2, Chart: bar
2025-05-27 21:40:19 | INFO     | logger_config:log_performance:93 - PERFORMANCE: {"operation": "full_query_processing", "duration_ms": 7680.2, "timestamp": "2025-05-27T21:40:19.026664", "query_id": "query_1748362211", "user_query_length": 36, "sql_query_length": 144, "result_rows": 10, "result_columns": 2, "chart_type": "bar", "llm_time": 7.028076171875}
2025-05-27 21:40:19 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.process_natural_language_query | duration=7.688s
2025-05-27 21:40:19 | INFO     | decorators:wrapper:37 - PERFORMANCE: __main__.TextToSQLApp.process_natural_language_query took 7.688s
2025-05-27 21:40:19 | INFO     | __main__:run:651 - Displaying successful results
2025-05-27 21:40:19 | DEBUG    | __main__:run:656 - SQL query displayed in UI
2025-05-27 21:40:19 | DEBUG    | __main__:run:665 - Results table displayed in UI
2025-05-27 21:40:19 | DEBUG    | __main__:run:673 - Chart displayed in UI: bar
2025-05-27 21:40:19 | INFO     | __main__:run:718 - Main application runner completed successfully
2025-05-27 21:40:19 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.run | duration=7.791s
2025-05-27 21:40:19 | INFO     | decorators:wrapper:37 - PERFORMANCE: __main__.TextToSQLApp.run took 7.791s
2025-05-27 21:40:19 | INFO     | __main__:<module>:799 - Application session completed successfully
2025-05-27 21:40:19 | INFO     | __main__:<module>:807 - Application shutdown
2025-05-27 21:40:56 | INFO     | __main__:<module>:791 - ==================================================
2025-05-27 21:40:56 | INFO     | __main__:<module>:792 - Starting Text-to-SQL Application
2025-05-27 21:40:56 | INFO     | __main__:<module>:793 - Start time: 2025-05-27T21:40:56.177114
2025-05-27 21:40:56 | INFO     | __main__:<module>:794 - ==================================================
2025-05-27 21:40:56 | INFO     | __main__:__init__:58 - Initializing Text-to-SQL Application
2025-05-27 21:40:56 | INFO     | __main__:__init__:60 - Session ID: 20250527_214056
2025-05-27 21:40:56 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.setup_page_config | args=(<__main__.TextToSQLApp object at 0x000002A94F794A10>,) | kwargs={}
2025-05-27 21:40:56 | DEBUG    | __main__:setup_page_config:75 - Setting up Streamlit page configuration
2025-05-27 21:40:56 | INFO     | __main__:setup_page_config:88 - Page configuration set: {'page_title': 'Text-to-SQL Assistant', 'page_icon': 'üîç'}
2025-05-27 21:40:56 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.setup_page_config | duration=0.004s
2025-05-27 21:40:56 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.initialize_database | args=(<__main__.TextToSQLApp object at 0x000002A94F794A10>,) | kwargs={}
2025-05-27 21:40:56 | INFO     | __main__:initialize_database:94 - Initializing database connection
2025-05-27 21:40:56 | DEBUG    | __main__:initialize_database:97 - Database path: chinook.db
2025-05-27 21:40:56 | INFO     | __main__:initialize_database:105 - Database file size: 884736 bytes
2025-05-27 21:40:56 | INFO     | __main__:initialize_database:113 - Database connection test successful. Tables found: [(13,)]
2025-05-27 21:40:56 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.log_database_schema | args=(<__main__.TextToSQLApp object at 0x000002A94F794A10>,) | kwargs={}
2025-05-27 21:40:56 | INFO     | __main__:log_database_schema:132 - Database tables: [('albums',), ('sqlite_sequence',), ('artists',), ('customers',), ('employees',), ('genres',), ('invoices',), ('invoice_items',), ('media_types',), ('playlists',), ('playlist_track',), ('tracks',), ('sqlite_stat1',)]
2025-05-27 21:40:56 | DEBUG    | __main__:log_database_schema:140 - Schema for table albums: [(0, 'AlbumId', 'INTEGER', 1, None, 1), (1, 'Title', 'NVARCHAR(160)', 1, None, 0), (2, 'ArtistId', 'INTEGER', 1, None, 0)]
2025-05-27 21:40:56 | DEBUG    | __main__:log_database_schema:140 - Schema for table sqlite_sequence: [(0, 'name', '', 0, None, 0), (1, 'seq', '', 0, None, 0)]
2025-05-27 21:40:56 | DEBUG    | __main__:log_database_schema:140 - Schema for table artists: [(0, 'ArtistId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(120)', 0, None, 0)]
2025-05-27 21:40:56 | DEBUG    | __main__:log_database_schema:140 - Schema for table customers: [(0, 'CustomerId', 'INTEGER', 1, None, 1), (1, 'FirstName', 'NVARCHAR(40)', 1, None, 0), (2, 'LastName', 'NVARCHAR(20)', 1, None, 0), (3, 'Company', 'NVARCHAR(80)', 0, None, 0), (4, 'Address', 'NVARCHAR(70)', 0, None, 0), (5, 'City', 'NVARCHAR(40)', 0, None, 0), (6, 'State', 'NVARCHAR(40)', 0, None, 0), (7, 'Country', 'NVARCHAR(40)', 0, None, 0), (8, 'PostalCode', 'NVARCHAR(10)', 0, None, 0), (9, 'Phone', 'NVARCHAR(24)', 0, None, 0), (10, 'Fax', 'NVARCHAR(24)', 0, None, 0), (11, 'Email', 'NVARCHAR(60)', 1, None, 0), (12, 'SupportRepId', 'INTEGER', 0, None, 0)]
2025-05-27 21:40:56 | DEBUG    | __main__:log_database_schema:140 - Schema for table employees: [(0, 'EmployeeId', 'INTEGER', 1, None, 1), (1, 'LastName', 'NVARCHAR(20)', 1, None, 0), (2, 'FirstName', 'NVARCHAR(20)', 1, None, 0), (3, 'Title', 'NVARCHAR(30)', 0, None, 0), (4, 'ReportsTo', 'INTEGER', 0, None, 0), (5, 'BirthDate', 'DATETIME', 0, None, 0), (6, 'HireDate', 'DATETIME', 0, None, 0), (7, 'Address', 'NVARCHAR(70)', 0, None, 0), (8, 'City', 'NVARCHAR(40)', 0, None, 0), (9, 'State', 'NVARCHAR(40)', 0, None, 0), (10, 'Country', 'NVARCHAR(40)', 0, None, 0), (11, 'PostalCode', 'NVARCHAR(10)', 0, None, 0), (12, 'Phone', 'NVARCHAR(24)', 0, None, 0), (13, 'Fax', 'NVARCHAR(24)', 0, None, 0), (14, 'Email', 'NVARCHAR(60)', 0, None, 0)]
2025-05-27 21:40:56 | DEBUG    | __main__:log_database_schema:140 - Schema for table genres: [(0, 'GenreId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(120)', 0, None, 0)]
2025-05-27 21:40:56 | DEBUG    | __main__:log_database_schema:140 - Schema for table invoices: [(0, 'InvoiceId', 'INTEGER', 1, None, 1), (1, 'CustomerId', 'INTEGER', 1, None, 0), (2, 'InvoiceDate', 'DATETIME', 1, None, 0), (3, 'BillingAddress', 'NVARCHAR(70)', 0, None, 0), (4, 'BillingCity', 'NVARCHAR(40)', 0, None, 0), (5, 'BillingState', 'NVARCHAR(40)', 0, None, 0), (6, 'BillingCountry', 'NVARCHAR(40)', 0, None, 0), (7, 'BillingPostalCode', 'NVARCHAR(10)', 0, None, 0), (8, 'Total', 'NUMERIC(10,2)', 1, None, 0)]
2025-05-27 21:40:56 | DEBUG    | __main__:log_database_schema:140 - Schema for table invoice_items: [(0, 'InvoiceLineId', 'INTEGER', 1, None, 1), (1, 'InvoiceId', 'INTEGER', 1, None, 0), (2, 'TrackId', 'INTEGER', 1, None, 0), (3, 'UnitPrice', 'NUMERIC(10,2)', 1, None, 0), (4, 'Quantity', 'INTEGER', 1, None, 0)]
2025-05-27 21:40:56 | DEBUG    | __main__:log_database_schema:140 - Schema for table media_types: [(0, 'MediaTypeId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(120)', 0, None, 0)]
2025-05-27 21:40:56 | DEBUG    | __main__:log_database_schema:140 - Schema for table playlists: [(0, 'PlaylistId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(120)', 0, None, 0)]
2025-05-27 21:40:56 | DEBUG    | __main__:log_database_schema:140 - Schema for table playlist_track: [(0, 'PlaylistId', 'INTEGER', 1, None, 1), (1, 'TrackId', 'INTEGER', 1, None, 2)]
2025-05-27 21:40:56 | DEBUG    | __main__:log_database_schema:140 - Schema for table tracks: [(0, 'TrackId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(200)', 1, None, 0), (2, 'AlbumId', 'INTEGER', 0, None, 0), (3, 'MediaTypeId', 'INTEGER', 1, None, 0), (4, 'GenreId', 'INTEGER', 0, None, 0), (5, 'Composer', 'NVARCHAR(220)', 0, None, 0), (6, 'Milliseconds', 'INTEGER', 1, None, 0), (7, 'Bytes', 'INTEGER', 0, None, 0), (8, 'UnitPrice', 'NUMERIC(10,2)', 1, None, 0)]
2025-05-27 21:40:56 | DEBUG    | __main__:log_database_schema:140 - Schema for table sqlite_stat1: [(0, 'tbl', '', 0, None, 0), (1, 'idx', '', 0, None, 0), (2, 'stat', '', 0, None, 0)]
2025-05-27 21:40:56 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.log_database_schema | duration=0.023s
2025-05-27 21:40:56 | SUCCESS  | __main__:initialize_database:119 - Database initialization completed
2025-05-27 21:40:56 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.initialize_database | duration=0.117s
2025-05-27 21:40:56 | INFO     | decorators:wrapper:37 - PERFORMANCE: __main__.TextToSQLApp.initialize_database took 0.117s
2025-05-27 21:40:56 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.initialize_llm | args=(<__main__.TextToSQLApp object at 0x000002A94F794A10>,) | kwargs={}
2025-05-27 21:40:56 | INFO     | __main__:initialize_llm:151 - Initializing Groq LLM
2025-05-27 21:40:56 | DEBUG    | __main__:initialize_llm:161 - Using Groq API key: gsk_sBCV***Lnql
2025-05-27 21:40:56 | INFO     | __main__:<module>:791 - ==================================================
2025-05-27 21:40:56 | INFO     | __main__:<module>:792 - Starting Text-to-SQL Application
2025-05-27 21:40:56 | INFO     | __main__:<module>:793 - Start time: 2025-05-27T21:40:56.377835
2025-05-27 21:40:56 | INFO     | __main__:<module>:794 - ==================================================
2025-05-27 21:40:56 | INFO     | __main__:__init__:58 - Initializing Text-to-SQL Application
2025-05-27 21:40:56 | INFO     | __main__:__init__:60 - Session ID: 20250527_214056
2025-05-27 21:40:56 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.setup_page_config | args=(<__main__.TextToSQLApp object at 0x000002A94E48E5D0>,) | kwargs={}
2025-05-27 21:40:56 | DEBUG    | __main__:setup_page_config:75 - Setting up Streamlit page configuration
2025-05-27 21:40:56 | INFO     | __main__:setup_page_config:88 - Page configuration set: {'page_title': 'Text-to-SQL Assistant', 'page_icon': 'üîç'}
2025-05-27 21:40:56 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.setup_page_config | duration=0.006s
2025-05-27 21:40:56 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.initialize_database | args=(<__main__.TextToSQLApp object at 0x000002A94E48E5D0>,) | kwargs={}
2025-05-27 21:40:56 | INFO     | __main__:initialize_database:94 - Initializing database connection
2025-05-27 21:40:56 | DEBUG    | __main__:initialize_database:97 - Database path: chinook.db
2025-05-27 21:40:56 | INFO     | __main__:initialize_database:105 - Database file size: 884736 bytes
2025-05-27 21:40:56 | INFO     | __main__:initialize_database:113 - Database connection test successful. Tables found: [(13,)]
2025-05-27 21:40:56 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.log_database_schema | args=(<__main__.TextToSQLApp object at 0x000002A94E48E5D0>,) | kwargs={}
2025-05-27 21:40:56 | INFO     | __main__:log_database_schema:132 - Database tables: [('albums',), ('sqlite_sequence',), ('artists',), ('customers',), ('employees',), ('genres',), ('invoices',), ('invoice_items',), ('media_types',), ('playlists',), ('playlist_track',), ('tracks',), ('sqlite_stat1',)]
2025-05-27 21:40:56 | DEBUG    | __main__:log_database_schema:140 - Schema for table albums: [(0, 'AlbumId', 'INTEGER', 1, None, 1), (1, 'Title', 'NVARCHAR(160)', 1, None, 0), (2, 'ArtistId', 'INTEGER', 1, None, 0)]
2025-05-27 21:40:56 | DEBUG    | __main__:log_database_schema:140 - Schema for table sqlite_sequence: [(0, 'name', '', 0, None, 0), (1, 'seq', '', 0, None, 0)]
2025-05-27 21:40:56 | DEBUG    | __main__:log_database_schema:140 - Schema for table artists: [(0, 'ArtistId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(120)', 0, None, 0)]
2025-05-27 21:40:56 | DEBUG    | __main__:log_database_schema:140 - Schema for table customers: [(0, 'CustomerId', 'INTEGER', 1, None, 1), (1, 'FirstName', 'NVARCHAR(40)', 1, None, 0), (2, 'LastName', 'NVARCHAR(20)', 1, None, 0), (3, 'Company', 'NVARCHAR(80)', 0, None, 0), (4, 'Address', 'NVARCHAR(70)', 0, None, 0), (5, 'City', 'NVARCHAR(40)', 0, None, 0), (6, 'State', 'NVARCHAR(40)', 0, None, 0), (7, 'Country', 'NVARCHAR(40)', 0, None, 0), (8, 'PostalCode', 'NVARCHAR(10)', 0, None, 0), (9, 'Phone', 'NVARCHAR(24)', 0, None, 0), (10, 'Fax', 'NVARCHAR(24)', 0, None, 0), (11, 'Email', 'NVARCHAR(60)', 1, None, 0), (12, 'SupportRepId', 'INTEGER', 0, None, 0)]
2025-05-27 21:40:56 | DEBUG    | __main__:log_database_schema:140 - Schema for table employees: [(0, 'EmployeeId', 'INTEGER', 1, None, 1), (1, 'LastName', 'NVARCHAR(20)', 1, None, 0), (2, 'FirstName', 'NVARCHAR(20)', 1, None, 0), (3, 'Title', 'NVARCHAR(30)', 0, None, 0), (4, 'ReportsTo', 'INTEGER', 0, None, 0), (5, 'BirthDate', 'DATETIME', 0, None, 0), (6, 'HireDate', 'DATETIME', 0, None, 0), (7, 'Address', 'NVARCHAR(70)', 0, None, 0), (8, 'City', 'NVARCHAR(40)', 0, None, 0), (9, 'State', 'NVARCHAR(40)', 0, None, 0), (10, 'Country', 'NVARCHAR(40)', 0, None, 0), (11, 'PostalCode', 'NVARCHAR(10)', 0, None, 0), (12, 'Phone', 'NVARCHAR(24)', 0, None, 0), (13, 'Fax', 'NVARCHAR(24)', 0, None, 0), (14, 'Email', 'NVARCHAR(60)', 0, None, 0)]
2025-05-27 21:40:56 | DEBUG    | __main__:log_database_schema:140 - Schema for table genres: [(0, 'GenreId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(120)', 0, None, 0)]
2025-05-27 21:40:56 | DEBUG    | __main__:log_database_schema:140 - Schema for table invoices: [(0, 'InvoiceId', 'INTEGER', 1, None, 1), (1, 'CustomerId', 'INTEGER', 1, None, 0), (2, 'InvoiceDate', 'DATETIME', 1, None, 0), (3, 'BillingAddress', 'NVARCHAR(70)', 0, None, 0), (4, 'BillingCity', 'NVARCHAR(40)', 0, None, 0), (5, 'BillingState', 'NVARCHAR(40)', 0, None, 0), (6, 'BillingCountry', 'NVARCHAR(40)', 0, None, 0), (7, 'BillingPostalCode', 'NVARCHAR(10)', 0, None, 0), (8, 'Total', 'NUMERIC(10,2)', 1, None, 0)]
2025-05-27 21:40:56 | DEBUG    | __main__:log_database_schema:140 - Schema for table invoice_items: [(0, 'InvoiceLineId', 'INTEGER', 1, None, 1), (1, 'InvoiceId', 'INTEGER', 1, None, 0), (2, 'TrackId', 'INTEGER', 1, None, 0), (3, 'UnitPrice', 'NUMERIC(10,2)', 1, None, 0), (4, 'Quantity', 'INTEGER', 1, None, 0)]
2025-05-27 21:40:56 | DEBUG    | __main__:log_database_schema:140 - Schema for table media_types: [(0, 'MediaTypeId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(120)', 0, None, 0)]
2025-05-27 21:40:56 | DEBUG    | __main__:log_database_schema:140 - Schema for table playlists: [(0, 'PlaylistId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(120)', 0, None, 0)]
2025-05-27 21:40:56 | DEBUG    | __main__:log_database_schema:140 - Schema for table playlist_track: [(0, 'PlaylistId', 'INTEGER', 1, None, 1), (1, 'TrackId', 'INTEGER', 1, None, 2)]
2025-05-27 21:40:56 | DEBUG    | __main__:log_database_schema:140 - Schema for table tracks: [(0, 'TrackId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(200)', 1, None, 0), (2, 'AlbumId', 'INTEGER', 0, None, 0), (3, 'MediaTypeId', 'INTEGER', 1, None, 0), (4, 'GenreId', 'INTEGER', 0, None, 0), (5, 'Composer', 'NVARCHAR(220)', 0, None, 0), (6, 'Milliseconds', 'INTEGER', 1, None, 0), (7, 'Bytes', 'INTEGER', 0, None, 0), (8, 'UnitPrice', 'NUMERIC(10,2)', 1, None, 0)]
2025-05-27 21:40:56 | DEBUG    | __main__:log_database_schema:140 - Schema for table sqlite_stat1: [(0, 'tbl', '', 0, None, 0), (1, 'idx', '', 0, None, 0), (2, 'stat', '', 0, None, 0)]
2025-05-27 21:40:56 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.log_database_schema | duration=0.017s
2025-05-27 21:40:56 | SUCCESS  | __main__:initialize_database:119 - Database initialization completed
2025-05-27 21:40:56 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.initialize_database | duration=0.143s
2025-05-27 21:40:56 | INFO     | decorators:wrapper:37 - PERFORMANCE: __main__.TextToSQLApp.initialize_database took 0.143s
2025-05-27 21:40:56 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.initialize_llm | args=(<__main__.TextToSQLApp object at 0x000002A94E48E5D0>,) | kwargs={}
2025-05-27 21:40:56 | INFO     | __main__:initialize_llm:151 - Initializing Groq LLM
2025-05-27 21:40:56 | DEBUG    | __main__:initialize_llm:161 - Using Groq API key: gsk_sBCV***Lnql
2025-05-27 21:40:57 | INFO     | __main__:initialize_llm:177 - LLM initialization successful in 1.337s
2025-05-27 21:40:57 | DEBUG    | __main__:initialize_llm:178 - LLM test response: content='OK' additional_kwargs={} response_metadata={'token_usage': {'completion_tokens': 2, 'prompt_tokens': 42, 'total_tokens': 44, 'completion_time': 0.00790226, 'prompt_time': 0.004459224, 'queue_time': 0.054171966, 'total_time': 0.012361484}, 'model_name': 'llama-3.3-70b-versatile', 'system_fingerprint': 'fp_2ddfbb0da0', 'finish_reason': 'stop', 'logprobs': None} id='run--79d1924d-799e-4cdd-942f-c3ab108a7e8a-0' usage_metadata={'input_tokens': 42, 'output_tokens': 2, 'total_tokens': 44}
2025-05-27 21:40:57 | INFO     | __main__:initialize_llm:179 - Using model: llama-3.3-70b-versatile
2025-05-27 21:40:57 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.initialize_llm | duration=1.349s
2025-05-27 21:40:57 | INFO     | decorators:wrapper:37 - PERFORMANCE: __main__.TextToSQLApp.initialize_llm took 1.349s
2025-05-27 21:40:57 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.setup_sql_agent | args=(<__main__.TextToSQLApp object at 0x000002A94F794A10>,) | kwargs={}
2025-05-27 21:40:57 | INFO     | __main__:setup_sql_agent:190 - Setting up SQL agent
2025-05-27 21:40:57 | DEBUG    | __main__:setup_sql_agent:194 - SQL toolkit created successfully
2025-05-27 21:40:57 | DEBUG    | __main__:setup_sql_agent:224 - Creating SQL agent with custom prompt
2025-05-27 21:40:57 | SUCCESS  | __main__:setup_sql_agent:232 - SQL agent setup completed successfully
2025-05-27 21:40:57 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.setup_sql_agent | duration=0.007s
2025-05-27 21:40:57 | SUCCESS  | __main__:__init__:67 - Application initialized successfully
2025-05-27 21:40:57 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.run | args=(<__main__.TextToSQLApp object at 0x000002A94F794A10>,) | kwargs={}
2025-05-27 21:40:57 | INFO     | __main__:run:606 - Starting main application runner
2025-05-27 21:40:57 | INFO     | __main__:<module>:807 - Application shutdown
2025-05-27 21:40:57 | INFO     | __main__:initialize_llm:177 - LLM initialization successful in 1.305s
2025-05-27 21:40:57 | DEBUG    | __main__:initialize_llm:178 - LLM test response: content='OK' additional_kwargs={} response_metadata={'token_usage': {'completion_tokens': 2, 'prompt_tokens': 42, 'total_tokens': 44, 'completion_time': 0.010117335, 'prompt_time': 0.002243683, 'queue_time': 0.054414256999999994, 'total_time': 0.012361018}, 'model_name': 'llama-3.3-70b-versatile', 'system_fingerprint': 'fp_6507bcfb6f', 'finish_reason': 'stop', 'logprobs': None} id='run--2a26d993-42f7-4009-8035-275df3ab3ad7-0' usage_metadata={'input_tokens': 42, 'output_tokens': 2, 'total_tokens': 44}
2025-05-27 21:40:57 | INFO     | __main__:initialize_llm:179 - Using model: llama-3.3-70b-versatile
2025-05-27 21:40:57 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.initialize_llm | duration=1.308s
2025-05-27 21:40:57 | INFO     | decorators:wrapper:37 - PERFORMANCE: __main__.TextToSQLApp.initialize_llm took 1.308s
2025-05-27 21:40:57 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.setup_sql_agent | args=(<__main__.TextToSQLApp object at 0x000002A94E48E5D0>,) | kwargs={}
2025-05-27 21:40:57 | INFO     | __main__:setup_sql_agent:190 - Setting up SQL agent
2025-05-27 21:40:57 | DEBUG    | __main__:setup_sql_agent:194 - SQL toolkit created successfully
2025-05-27 21:40:57 | DEBUG    | __main__:setup_sql_agent:224 - Creating SQL agent with custom prompt
2025-05-27 21:40:57 | SUCCESS  | __main__:setup_sql_agent:232 - SQL agent setup completed successfully
2025-05-27 21:40:57 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.setup_sql_agent | duration=0.007s
2025-05-27 21:40:57 | SUCCESS  | __main__:__init__:67 - Application initialized successfully
2025-05-27 21:40:57 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.run | args=(<__main__.TextToSQLApp object at 0x000002A94E48E5D0>,) | kwargs={}
2025-05-27 21:40:57 | INFO     | __main__:run:606 - Starting main application runner
2025-05-27 21:40:57 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.display_sample_queries | args=(<__main__.TextToSQLApp object at 0x000002A94E48E5D0>,) | kwargs={}
2025-05-27 21:40:57 | DEBUG    | __main__:display_sample_queries:553 - Displaying sample queries in sidebar
2025-05-27 21:40:57 | DEBUG    | __main__:display_sample_queries:570 - Displaying 10 sample queries
2025-05-27 21:40:57 | INFO     | __main__:display_sample_queries:574 - Sample query selected: List the top 5 customers by total purchases
2025-05-27 21:40:57 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.display_sample_queries | duration=0.025s
2025-05-27 21:40:57 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.display_logs_sidebar | args=(<__main__.TextToSQLApp object at 0x000002A94E48E5D0>,) | kwargs={}
2025-05-27 21:40:57 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.display_logs_sidebar | duration=0.000s
2025-05-27 21:40:57 | INFO     | __main__:run:628 - Using selected query: List the top 5 customers by total purchases
2025-05-27 21:40:57 | INFO     | __main__:run:718 - Main application runner completed successfully
2025-05-27 21:40:57 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.run | duration=0.051s
2025-05-27 21:40:57 | INFO     | __main__:<module>:799 - Application session completed successfully
2025-05-27 21:40:57 | INFO     | __main__:<module>:807 - Application shutdown
2025-05-27 21:40:59 | INFO     | __main__:<module>:791 - ==================================================
2025-05-27 21:40:59 | INFO     | __main__:<module>:792 - Starting Text-to-SQL Application
2025-05-27 21:40:59 | INFO     | __main__:<module>:793 - Start time: 2025-05-27T21:40:59.983910
2025-05-27 21:40:59 | INFO     | __main__:<module>:794 - ==================================================
2025-05-27 21:40:59 | INFO     | __main__:__init__:58 - Initializing Text-to-SQL Application
2025-05-27 21:40:59 | INFO     | __main__:__init__:60 - Session ID: 20250527_214059
2025-05-27 21:40:59 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.setup_page_config | args=(<__main__.TextToSQLApp object at 0x000002A94E22A810>,) | kwargs={}
2025-05-27 21:40:59 | DEBUG    | __main__:setup_page_config:75 - Setting up Streamlit page configuration
2025-05-27 21:40:59 | INFO     | __main__:setup_page_config:88 - Page configuration set: {'page_title': 'Text-to-SQL Assistant', 'page_icon': 'üîç'}
2025-05-27 21:40:59 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.setup_page_config | duration=0.004s
2025-05-27 21:40:59 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.initialize_database | args=(<__main__.TextToSQLApp object at 0x000002A94E22A810>,) | kwargs={}
2025-05-27 21:40:59 | INFO     | __main__:initialize_database:94 - Initializing database connection
2025-05-27 21:40:59 | DEBUG    | __main__:initialize_database:97 - Database path: chinook.db
2025-05-27 21:40:59 | INFO     | __main__:initialize_database:105 - Database file size: 884736 bytes
2025-05-27 21:41:00 | INFO     | __main__:initialize_database:113 - Database connection test successful. Tables found: [(13,)]
2025-05-27 21:41:00 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.log_database_schema | args=(<__main__.TextToSQLApp object at 0x000002A94E22A810>,) | kwargs={}
2025-05-27 21:41:00 | INFO     | __main__:log_database_schema:132 - Database tables: [('albums',), ('sqlite_sequence',), ('artists',), ('customers',), ('employees',), ('genres',), ('invoices',), ('invoice_items',), ('media_types',), ('playlists',), ('playlist_track',), ('tracks',), ('sqlite_stat1',)]
2025-05-27 21:41:00 | DEBUG    | __main__:log_database_schema:140 - Schema for table albums: [(0, 'AlbumId', 'INTEGER', 1, None, 1), (1, 'Title', 'NVARCHAR(160)', 1, None, 0), (2, 'ArtistId', 'INTEGER', 1, None, 0)]
2025-05-27 21:41:00 | DEBUG    | __main__:log_database_schema:140 - Schema for table sqlite_sequence: [(0, 'name', '', 0, None, 0), (1, 'seq', '', 0, None, 0)]
2025-05-27 21:41:00 | DEBUG    | __main__:log_database_schema:140 - Schema for table artists: [(0, 'ArtistId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(120)', 0, None, 0)]
2025-05-27 21:41:00 | DEBUG    | __main__:log_database_schema:140 - Schema for table customers: [(0, 'CustomerId', 'INTEGER', 1, None, 1), (1, 'FirstName', 'NVARCHAR(40)', 1, None, 0), (2, 'LastName', 'NVARCHAR(20)', 1, None, 0), (3, 'Company', 'NVARCHAR(80)', 0, None, 0), (4, 'Address', 'NVARCHAR(70)', 0, None, 0), (5, 'City', 'NVARCHAR(40)', 0, None, 0), (6, 'State', 'NVARCHAR(40)', 0, None, 0), (7, 'Country', 'NVARCHAR(40)', 0, None, 0), (8, 'PostalCode', 'NVARCHAR(10)', 0, None, 0), (9, 'Phone', 'NVARCHAR(24)', 0, None, 0), (10, 'Fax', 'NVARCHAR(24)', 0, None, 0), (11, 'Email', 'NVARCHAR(60)', 1, None, 0), (12, 'SupportRepId', 'INTEGER', 0, None, 0)]
2025-05-27 21:41:00 | DEBUG    | __main__:log_database_schema:140 - Schema for table employees: [(0, 'EmployeeId', 'INTEGER', 1, None, 1), (1, 'LastName', 'NVARCHAR(20)', 1, None, 0), (2, 'FirstName', 'NVARCHAR(20)', 1, None, 0), (3, 'Title', 'NVARCHAR(30)', 0, None, 0), (4, 'ReportsTo', 'INTEGER', 0, None, 0), (5, 'BirthDate', 'DATETIME', 0, None, 0), (6, 'HireDate', 'DATETIME', 0, None, 0), (7, 'Address', 'NVARCHAR(70)', 0, None, 0), (8, 'City', 'NVARCHAR(40)', 0, None, 0), (9, 'State', 'NVARCHAR(40)', 0, None, 0), (10, 'Country', 'NVARCHAR(40)', 0, None, 0), (11, 'PostalCode', 'NVARCHAR(10)', 0, None, 0), (12, 'Phone', 'NVARCHAR(24)', 0, None, 0), (13, 'Fax', 'NVARCHAR(24)', 0, None, 0), (14, 'Email', 'NVARCHAR(60)', 0, None, 0)]
2025-05-27 21:41:00 | DEBUG    | __main__:log_database_schema:140 - Schema for table genres: [(0, 'GenreId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(120)', 0, None, 0)]
2025-05-27 21:41:00 | DEBUG    | __main__:log_database_schema:140 - Schema for table invoices: [(0, 'InvoiceId', 'INTEGER', 1, None, 1), (1, 'CustomerId', 'INTEGER', 1, None, 0), (2, 'InvoiceDate', 'DATETIME', 1, None, 0), (3, 'BillingAddress', 'NVARCHAR(70)', 0, None, 0), (4, 'BillingCity', 'NVARCHAR(40)', 0, None, 0), (5, 'BillingState', 'NVARCHAR(40)', 0, None, 0), (6, 'BillingCountry', 'NVARCHAR(40)', 0, None, 0), (7, 'BillingPostalCode', 'NVARCHAR(10)', 0, None, 0), (8, 'Total', 'NUMERIC(10,2)', 1, None, 0)]
2025-05-27 21:41:00 | DEBUG    | __main__:log_database_schema:140 - Schema for table invoice_items: [(0, 'InvoiceLineId', 'INTEGER', 1, None, 1), (1, 'InvoiceId', 'INTEGER', 1, None, 0), (2, 'TrackId', 'INTEGER', 1, None, 0), (3, 'UnitPrice', 'NUMERIC(10,2)', 1, None, 0), (4, 'Quantity', 'INTEGER', 1, None, 0)]
2025-05-27 21:41:00 | DEBUG    | __main__:log_database_schema:140 - Schema for table media_types: [(0, 'MediaTypeId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(120)', 0, None, 0)]
2025-05-27 21:41:00 | DEBUG    | __main__:log_database_schema:140 - Schema for table playlists: [(0, 'PlaylistId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(120)', 0, None, 0)]
2025-05-27 21:41:00 | DEBUG    | __main__:log_database_schema:140 - Schema for table playlist_track: [(0, 'PlaylistId', 'INTEGER', 1, None, 1), (1, 'TrackId', 'INTEGER', 1, None, 2)]
2025-05-27 21:41:00 | DEBUG    | __main__:log_database_schema:140 - Schema for table tracks: [(0, 'TrackId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(200)', 1, None, 0), (2, 'AlbumId', 'INTEGER', 0, None, 0), (3, 'MediaTypeId', 'INTEGER', 1, None, 0), (4, 'GenreId', 'INTEGER', 0, None, 0), (5, 'Composer', 'NVARCHAR(220)', 0, None, 0), (6, 'Milliseconds', 'INTEGER', 1, None, 0), (7, 'Bytes', 'INTEGER', 0, None, 0), (8, 'UnitPrice', 'NUMERIC(10,2)', 1, None, 0)]
2025-05-27 21:41:00 | DEBUG    | __main__:log_database_schema:140 - Schema for table sqlite_stat1: [(0, 'tbl', '', 0, None, 0), (1, 'idx', '', 0, None, 0), (2, 'stat', '', 0, None, 0)]
2025-05-27 21:41:00 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.log_database_schema | duration=0.025s
2025-05-27 21:41:00 | SUCCESS  | __main__:initialize_database:119 - Database initialization completed
2025-05-27 21:41:00 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.initialize_database | duration=0.077s
2025-05-27 21:41:00 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.initialize_llm | args=(<__main__.TextToSQLApp object at 0x000002A94E22A810>,) | kwargs={}
2025-05-27 21:41:00 | INFO     | __main__:initialize_llm:151 - Initializing Groq LLM
2025-05-27 21:41:00 | DEBUG    | __main__:initialize_llm:161 - Using Groq API key: gsk_sBCV***Lnql
2025-05-27 21:41:01 | INFO     | __main__:initialize_llm:177 - LLM initialization successful in 1.120s
2025-05-27 21:41:01 | DEBUG    | __main__:initialize_llm:178 - LLM test response: content='OK' additional_kwargs={} response_metadata={'token_usage': {'completion_tokens': 2, 'prompt_tokens': 42, 'total_tokens': 44, 'completion_time': 0.009542313, 'prompt_time': 0.001997639, 'queue_time': 0.058637391, 'total_time': 0.011539952}, 'model_name': 'llama-3.3-70b-versatile', 'system_fingerprint': 'fp_2ddfbb0da0', 'finish_reason': 'stop', 'logprobs': None} id='run--259a922c-d4d9-4de0-92e4-fa8f08a11bbc-0' usage_metadata={'input_tokens': 42, 'output_tokens': 2, 'total_tokens': 44}
2025-05-27 21:41:01 | INFO     | __main__:initialize_llm:179 - Using model: llama-3.3-70b-versatile
2025-05-27 21:41:01 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.initialize_llm | duration=1.121s
2025-05-27 21:41:01 | INFO     | decorators:wrapper:37 - PERFORMANCE: __main__.TextToSQLApp.initialize_llm took 1.121s
2025-05-27 21:41:01 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.setup_sql_agent | args=(<__main__.TextToSQLApp object at 0x000002A94E22A810>,) | kwargs={}
2025-05-27 21:41:01 | INFO     | __main__:setup_sql_agent:190 - Setting up SQL agent
2025-05-27 21:41:01 | DEBUG    | __main__:setup_sql_agent:194 - SQL toolkit created successfully
2025-05-27 21:41:01 | DEBUG    | __main__:setup_sql_agent:224 - Creating SQL agent with custom prompt
2025-05-27 21:41:01 | SUCCESS  | __main__:setup_sql_agent:232 - SQL agent setup completed successfully
2025-05-27 21:41:01 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.setup_sql_agent | duration=0.000s
2025-05-27 21:41:01 | SUCCESS  | __main__:__init__:67 - Application initialized successfully
2025-05-27 21:41:01 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.run | args=(<__main__.TextToSQLApp object at 0x000002A94E22A810>,) | kwargs={}
2025-05-27 21:41:01 | INFO     | __main__:run:606 - Starting main application runner
2025-05-27 21:41:01 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.display_sample_queries | args=(<__main__.TextToSQLApp object at 0x000002A94E22A810>,) | kwargs={}
2025-05-27 21:41:01 | DEBUG    | __main__:display_sample_queries:553 - Displaying sample queries in sidebar
2025-05-27 21:41:01 | DEBUG    | __main__:display_sample_queries:570 - Displaying 10 sample queries
2025-05-27 21:41:01 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.display_sample_queries | duration=0.012s
2025-05-27 21:41:01 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.display_logs_sidebar | args=(<__main__.TextToSQLApp object at 0x000002A94E22A810>,) | kwargs={}
2025-05-27 21:41:01 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.display_logs_sidebar | duration=0.000s
2025-05-27 21:41:01 | WARNING  | __main__:run:694 - Process button clicked but no query provided
2025-05-27 21:41:01 | INFO     | __main__:run:718 - Main application runner completed successfully
2025-05-27 21:41:01 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.run | duration=0.036s
2025-05-27 21:41:01 | INFO     | __main__:<module>:799 - Application session completed successfully
2025-05-27 21:41:01 | INFO     | __main__:<module>:807 - Application shutdown
2025-05-27 21:41:27 | INFO     | __main__:<module>:791 - ==================================================
2025-05-27 21:41:27 | INFO     | __main__:<module>:792 - Starting Text-to-SQL Application
2025-05-27 21:41:27 | INFO     | __main__:<module>:793 - Start time: 2025-05-27T21:41:27.612106
2025-05-27 21:41:27 | INFO     | __main__:<module>:794 - ==================================================
2025-05-27 21:41:27 | INFO     | __main__:__init__:58 - Initializing Text-to-SQL Application
2025-05-27 21:41:27 | INFO     | __main__:__init__:60 - Session ID: 20250527_214127
2025-05-27 21:41:27 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.setup_page_config | args=(<__main__.TextToSQLApp object at 0x000002A94E516490>,) | kwargs={}
2025-05-27 21:41:27 | DEBUG    | __main__:setup_page_config:75 - Setting up Streamlit page configuration
2025-05-27 21:41:27 | INFO     | __main__:setup_page_config:88 - Page configuration set: {'page_title': 'Text-to-SQL Assistant', 'page_icon': 'üîç'}
2025-05-27 21:41:27 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.setup_page_config | duration=0.003s
2025-05-27 21:41:27 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.initialize_database | args=(<__main__.TextToSQLApp object at 0x000002A94E516490>,) | kwargs={}
2025-05-27 21:41:27 | INFO     | __main__:initialize_database:94 - Initializing database connection
2025-05-27 21:41:27 | DEBUG    | __main__:initialize_database:97 - Database path: chinook.db
2025-05-27 21:41:27 | INFO     | __main__:initialize_database:105 - Database file size: 884736 bytes
2025-05-27 21:41:27 | INFO     | __main__:initialize_database:113 - Database connection test successful. Tables found: [(13,)]
2025-05-27 21:41:27 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.log_database_schema | args=(<__main__.TextToSQLApp object at 0x000002A94E516490>,) | kwargs={}
2025-05-27 21:41:27 | INFO     | __main__:log_database_schema:132 - Database tables: [('albums',), ('sqlite_sequence',), ('artists',), ('customers',), ('employees',), ('genres',), ('invoices',), ('invoice_items',), ('media_types',), ('playlists',), ('playlist_track',), ('tracks',), ('sqlite_stat1',)]
2025-05-27 21:41:27 | DEBUG    | __main__:log_database_schema:140 - Schema for table albums: [(0, 'AlbumId', 'INTEGER', 1, None, 1), (1, 'Title', 'NVARCHAR(160)', 1, None, 0), (2, 'ArtistId', 'INTEGER', 1, None, 0)]
2025-05-27 21:41:27 | DEBUG    | __main__:log_database_schema:140 - Schema for table sqlite_sequence: [(0, 'name', '', 0, None, 0), (1, 'seq', '', 0, None, 0)]
2025-05-27 21:41:27 | DEBUG    | __main__:log_database_schema:140 - Schema for table artists: [(0, 'ArtistId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(120)', 0, None, 0)]
2025-05-27 21:41:27 | DEBUG    | __main__:log_database_schema:140 - Schema for table customers: [(0, 'CustomerId', 'INTEGER', 1, None, 1), (1, 'FirstName', 'NVARCHAR(40)', 1, None, 0), (2, 'LastName', 'NVARCHAR(20)', 1, None, 0), (3, 'Company', 'NVARCHAR(80)', 0, None, 0), (4, 'Address', 'NVARCHAR(70)', 0, None, 0), (5, 'City', 'NVARCHAR(40)', 0, None, 0), (6, 'State', 'NVARCHAR(40)', 0, None, 0), (7, 'Country', 'NVARCHAR(40)', 0, None, 0), (8, 'PostalCode', 'NVARCHAR(10)', 0, None, 0), (9, 'Phone', 'NVARCHAR(24)', 0, None, 0), (10, 'Fax', 'NVARCHAR(24)', 0, None, 0), (11, 'Email', 'NVARCHAR(60)', 1, None, 0), (12, 'SupportRepId', 'INTEGER', 0, None, 0)]
2025-05-27 21:41:27 | DEBUG    | __main__:log_database_schema:140 - Schema for table employees: [(0, 'EmployeeId', 'INTEGER', 1, None, 1), (1, 'LastName', 'NVARCHAR(20)', 1, None, 0), (2, 'FirstName', 'NVARCHAR(20)', 1, None, 0), (3, 'Title', 'NVARCHAR(30)', 0, None, 0), (4, 'ReportsTo', 'INTEGER', 0, None, 0), (5, 'BirthDate', 'DATETIME', 0, None, 0), (6, 'HireDate', 'DATETIME', 0, None, 0), (7, 'Address', 'NVARCHAR(70)', 0, None, 0), (8, 'City', 'NVARCHAR(40)', 0, None, 0), (9, 'State', 'NVARCHAR(40)', 0, None, 0), (10, 'Country', 'NVARCHAR(40)', 0, None, 0), (11, 'PostalCode', 'NVARCHAR(10)', 0, None, 0), (12, 'Phone', 'NVARCHAR(24)', 0, None, 0), (13, 'Fax', 'NVARCHAR(24)', 0, None, 0), (14, 'Email', 'NVARCHAR(60)', 0, None, 0)]
2025-05-27 21:41:27 | DEBUG    | __main__:log_database_schema:140 - Schema for table genres: [(0, 'GenreId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(120)', 0, None, 0)]
2025-05-27 21:41:27 | DEBUG    | __main__:log_database_schema:140 - Schema for table invoices: [(0, 'InvoiceId', 'INTEGER', 1, None, 1), (1, 'CustomerId', 'INTEGER', 1, None, 0), (2, 'InvoiceDate', 'DATETIME', 1, None, 0), (3, 'BillingAddress', 'NVARCHAR(70)', 0, None, 0), (4, 'BillingCity', 'NVARCHAR(40)', 0, None, 0), (5, 'BillingState', 'NVARCHAR(40)', 0, None, 0), (6, 'BillingCountry', 'NVARCHAR(40)', 0, None, 0), (7, 'BillingPostalCode', 'NVARCHAR(10)', 0, None, 0), (8, 'Total', 'NUMERIC(10,2)', 1, None, 0)]
2025-05-27 21:41:27 | DEBUG    | __main__:log_database_schema:140 - Schema for table invoice_items: [(0, 'InvoiceLineId', 'INTEGER', 1, None, 1), (1, 'InvoiceId', 'INTEGER', 1, None, 0), (2, 'TrackId', 'INTEGER', 1, None, 0), (3, 'UnitPrice', 'NUMERIC(10,2)', 1, None, 0), (4, 'Quantity', 'INTEGER', 1, None, 0)]
2025-05-27 21:41:27 | DEBUG    | __main__:log_database_schema:140 - Schema for table media_types: [(0, 'MediaTypeId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(120)', 0, None, 0)]
2025-05-27 21:41:27 | DEBUG    | __main__:log_database_schema:140 - Schema for table playlists: [(0, 'PlaylistId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(120)', 0, None, 0)]
2025-05-27 21:41:27 | DEBUG    | __main__:log_database_schema:140 - Schema for table playlist_track: [(0, 'PlaylistId', 'INTEGER', 1, None, 1), (1, 'TrackId', 'INTEGER', 1, None, 2)]
2025-05-27 21:41:27 | DEBUG    | __main__:log_database_schema:140 - Schema for table tracks: [(0, 'TrackId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(200)', 1, None, 0), (2, 'AlbumId', 'INTEGER', 0, None, 0), (3, 'MediaTypeId', 'INTEGER', 1, None, 0), (4, 'GenreId', 'INTEGER', 0, None, 0), (5, 'Composer', 'NVARCHAR(220)', 0, None, 0), (6, 'Milliseconds', 'INTEGER', 1, None, 0), (7, 'Bytes', 'INTEGER', 0, None, 0), (8, 'UnitPrice', 'NUMERIC(10,2)', 1, None, 0)]
2025-05-27 21:41:27 | DEBUG    | __main__:log_database_schema:140 - Schema for table sqlite_stat1: [(0, 'tbl', '', 0, None, 0), (1, 'idx', '', 0, None, 0), (2, 'stat', '', 0, None, 0)]
2025-05-27 21:41:27 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.log_database_schema | duration=0.022s
2025-05-27 21:41:27 | SUCCESS  | __main__:initialize_database:119 - Database initialization completed
2025-05-27 21:41:27 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.initialize_database | duration=0.074s
2025-05-27 21:41:27 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.initialize_llm | args=(<__main__.TextToSQLApp object at 0x000002A94E516490>,) | kwargs={}
2025-05-27 21:41:27 | INFO     | __main__:initialize_llm:151 - Initializing Groq LLM
2025-05-27 21:41:27 | DEBUG    | __main__:initialize_llm:161 - Using Groq API key: gsk_sBCV***Lnql
2025-05-27 21:41:27 | INFO     | __main__:<module>:791 - ==================================================
2025-05-27 21:41:27 | INFO     | __main__:<module>:792 - Starting Text-to-SQL Application
2025-05-27 21:41:27 | INFO     | __main__:<module>:793 - Start time: 2025-05-27T21:41:27.806645
2025-05-27 21:41:27 | INFO     | __main__:<module>:794 - ==================================================
2025-05-27 21:41:27 | INFO     | __main__:__init__:58 - Initializing Text-to-SQL Application
2025-05-27 21:41:27 | INFO     | __main__:__init__:60 - Session ID: 20250527_214127
2025-05-27 21:41:27 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.setup_page_config | args=(<__main__.TextToSQLApp object at 0x000002A94E56A250>,) | kwargs={}
2025-05-27 21:41:27 | DEBUG    | __main__:setup_page_config:75 - Setting up Streamlit page configuration
2025-05-27 21:41:27 | INFO     | __main__:setup_page_config:88 - Page configuration set: {'page_title': 'Text-to-SQL Assistant', 'page_icon': 'üîç'}
2025-05-27 21:41:27 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.setup_page_config | duration=0.003s
2025-05-27 21:41:27 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.initialize_database | args=(<__main__.TextToSQLApp object at 0x000002A94E56A250>,) | kwargs={}
2025-05-27 21:41:27 | INFO     | __main__:initialize_database:94 - Initializing database connection
2025-05-27 21:41:27 | DEBUG    | __main__:initialize_database:97 - Database path: chinook.db
2025-05-27 21:41:27 | INFO     | __main__:initialize_database:105 - Database file size: 884736 bytes
2025-05-27 21:41:27 | INFO     | __main__:initialize_database:113 - Database connection test successful. Tables found: [(13,)]
2025-05-27 21:41:27 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.log_database_schema | args=(<__main__.TextToSQLApp object at 0x000002A94E56A250>,) | kwargs={}
2025-05-27 21:41:27 | INFO     | __main__:log_database_schema:132 - Database tables: [('albums',), ('sqlite_sequence',), ('artists',), ('customers',), ('employees',), ('genres',), ('invoices',), ('invoice_items',), ('media_types',), ('playlists',), ('playlist_track',), ('tracks',), ('sqlite_stat1',)]
2025-05-27 21:41:27 | DEBUG    | __main__:log_database_schema:140 - Schema for table albums: [(0, 'AlbumId', 'INTEGER', 1, None, 1), (1, 'Title', 'NVARCHAR(160)', 1, None, 0), (2, 'ArtistId', 'INTEGER', 1, None, 0)]
2025-05-27 21:41:27 | DEBUG    | __main__:log_database_schema:140 - Schema for table sqlite_sequence: [(0, 'name', '', 0, None, 0), (1, 'seq', '', 0, None, 0)]
2025-05-27 21:41:27 | DEBUG    | __main__:log_database_schema:140 - Schema for table artists: [(0, 'ArtistId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(120)', 0, None, 0)]
2025-05-27 21:41:27 | DEBUG    | __main__:log_database_schema:140 - Schema for table customers: [(0, 'CustomerId', 'INTEGER', 1, None, 1), (1, 'FirstName', 'NVARCHAR(40)', 1, None, 0), (2, 'LastName', 'NVARCHAR(20)', 1, None, 0), (3, 'Company', 'NVARCHAR(80)', 0, None, 0), (4, 'Address', 'NVARCHAR(70)', 0, None, 0), (5, 'City', 'NVARCHAR(40)', 0, None, 0), (6, 'State', 'NVARCHAR(40)', 0, None, 0), (7, 'Country', 'NVARCHAR(40)', 0, None, 0), (8, 'PostalCode', 'NVARCHAR(10)', 0, None, 0), (9, 'Phone', 'NVARCHAR(24)', 0, None, 0), (10, 'Fax', 'NVARCHAR(24)', 0, None, 0), (11, 'Email', 'NVARCHAR(60)', 1, None, 0), (12, 'SupportRepId', 'INTEGER', 0, None, 0)]
2025-05-27 21:41:27 | DEBUG    | __main__:log_database_schema:140 - Schema for table employees: [(0, 'EmployeeId', 'INTEGER', 1, None, 1), (1, 'LastName', 'NVARCHAR(20)', 1, None, 0), (2, 'FirstName', 'NVARCHAR(20)', 1, None, 0), (3, 'Title', 'NVARCHAR(30)', 0, None, 0), (4, 'ReportsTo', 'INTEGER', 0, None, 0), (5, 'BirthDate', 'DATETIME', 0, None, 0), (6, 'HireDate', 'DATETIME', 0, None, 0), (7, 'Address', 'NVARCHAR(70)', 0, None, 0), (8, 'City', 'NVARCHAR(40)', 0, None, 0), (9, 'State', 'NVARCHAR(40)', 0, None, 0), (10, 'Country', 'NVARCHAR(40)', 0, None, 0), (11, 'PostalCode', 'NVARCHAR(10)', 0, None, 0), (12, 'Phone', 'NVARCHAR(24)', 0, None, 0), (13, 'Fax', 'NVARCHAR(24)', 0, None, 0), (14, 'Email', 'NVARCHAR(60)', 0, None, 0)]
2025-05-27 21:41:27 | DEBUG    | __main__:log_database_schema:140 - Schema for table genres: [(0, 'GenreId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(120)', 0, None, 0)]
2025-05-27 21:41:27 | DEBUG    | __main__:log_database_schema:140 - Schema for table invoices: [(0, 'InvoiceId', 'INTEGER', 1, None, 1), (1, 'CustomerId', 'INTEGER', 1, None, 0), (2, 'InvoiceDate', 'DATETIME', 1, None, 0), (3, 'BillingAddress', 'NVARCHAR(70)', 0, None, 0), (4, 'BillingCity', 'NVARCHAR(40)', 0, None, 0), (5, 'BillingState', 'NVARCHAR(40)', 0, None, 0), (6, 'BillingCountry', 'NVARCHAR(40)', 0, None, 0), (7, 'BillingPostalCode', 'NVARCHAR(10)', 0, None, 0), (8, 'Total', 'NUMERIC(10,2)', 1, None, 0)]
2025-05-27 21:41:27 | DEBUG    | __main__:log_database_schema:140 - Schema for table invoice_items: [(0, 'InvoiceLineId', 'INTEGER', 1, None, 1), (1, 'InvoiceId', 'INTEGER', 1, None, 0), (2, 'TrackId', 'INTEGER', 1, None, 0), (3, 'UnitPrice', 'NUMERIC(10,2)', 1, None, 0), (4, 'Quantity', 'INTEGER', 1, None, 0)]
2025-05-27 21:41:27 | DEBUG    | __main__:log_database_schema:140 - Schema for table media_types: [(0, 'MediaTypeId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(120)', 0, None, 0)]
2025-05-27 21:41:27 | DEBUG    | __main__:log_database_schema:140 - Schema for table playlists: [(0, 'PlaylistId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(120)', 0, None, 0)]
2025-05-27 21:41:27 | DEBUG    | __main__:log_database_schema:140 - Schema for table playlist_track: [(0, 'PlaylistId', 'INTEGER', 1, None, 1), (1, 'TrackId', 'INTEGER', 1, None, 2)]
2025-05-27 21:41:27 | DEBUG    | __main__:log_database_schema:140 - Schema for table tracks: [(0, 'TrackId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(200)', 1, None, 0), (2, 'AlbumId', 'INTEGER', 0, None, 0), (3, 'MediaTypeId', 'INTEGER', 1, None, 0), (4, 'GenreId', 'INTEGER', 0, None, 0), (5, 'Composer', 'NVARCHAR(220)', 0, None, 0), (6, 'Milliseconds', 'INTEGER', 1, None, 0), (7, 'Bytes', 'INTEGER', 0, None, 0), (8, 'UnitPrice', 'NUMERIC(10,2)', 1, None, 0)]
2025-05-27 21:41:27 | DEBUG    | __main__:log_database_schema:140 - Schema for table sqlite_stat1: [(0, 'tbl', '', 0, None, 0), (1, 'idx', '', 0, None, 0), (2, 'stat', '', 0, None, 0)]
2025-05-27 21:41:27 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.log_database_schema | duration=0.013s
2025-05-27 21:41:27 | SUCCESS  | __main__:initialize_database:119 - Database initialization completed
2025-05-27 21:41:27 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.initialize_database | duration=0.065s
2025-05-27 21:41:27 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.initialize_llm | args=(<__main__.TextToSQLApp object at 0x000002A94E56A250>,) | kwargs={}
2025-05-27 21:41:27 | INFO     | __main__:initialize_llm:151 - Initializing Groq LLM
2025-05-27 21:41:27 | DEBUG    | __main__:initialize_llm:161 - Using Groq API key: gsk_sBCV***Lnql
2025-05-27 21:41:28 | INFO     | __main__:initialize_llm:177 - LLM initialization successful in 1.243s
2025-05-27 21:41:28 | DEBUG    | __main__:initialize_llm:178 - LLM test response: content='OK' additional_kwargs={} response_metadata={'token_usage': {'completion_tokens': 2, 'prompt_tokens': 42, 'total_tokens': 44, 'completion_time': 0.00793891, 'prompt_time': 0.022542515, 'queue_time': 0.058585465, 'total_time': 0.030481425}, 'model_name': 'llama-3.3-70b-versatile', 'system_fingerprint': 'fp_3f3b593e33', 'finish_reason': 'stop', 'logprobs': None} id='run--49fdd8d5-9c08-4fc2-9ded-9ca3adfda224-0' usage_metadata={'input_tokens': 42, 'output_tokens': 2, 'total_tokens': 44}
2025-05-27 21:41:28 | INFO     | __main__:initialize_llm:179 - Using model: llama-3.3-70b-versatile
2025-05-27 21:41:28 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.initialize_llm | duration=1.244s
2025-05-27 21:41:28 | INFO     | decorators:wrapper:37 - PERFORMANCE: __main__.TextToSQLApp.initialize_llm took 1.244s
2025-05-27 21:41:28 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.setup_sql_agent | args=(<__main__.TextToSQLApp object at 0x000002A94E516490>,) | kwargs={}
2025-05-27 21:41:28 | INFO     | __main__:setup_sql_agent:190 - Setting up SQL agent
2025-05-27 21:41:28 | DEBUG    | __main__:setup_sql_agent:194 - SQL toolkit created successfully
2025-05-27 21:41:28 | DEBUG    | __main__:setup_sql_agent:224 - Creating SQL agent with custom prompt
2025-05-27 21:41:28 | SUCCESS  | __main__:setup_sql_agent:232 - SQL agent setup completed successfully
2025-05-27 21:41:28 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.setup_sql_agent | duration=0.000s
2025-05-27 21:41:28 | SUCCESS  | __main__:__init__:67 - Application initialized successfully
2025-05-27 21:41:28 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.run | args=(<__main__.TextToSQLApp object at 0x000002A94E516490>,) | kwargs={}
2025-05-27 21:41:28 | INFO     | __main__:run:606 - Starting main application runner
2025-05-27 21:41:28 | INFO     | __main__:<module>:807 - Application shutdown
2025-05-27 21:41:29 | INFO     | __main__:initialize_llm:177 - LLM initialization successful in 1.188s
2025-05-27 21:41:29 | DEBUG    | __main__:initialize_llm:178 - LLM test response: content='OK' additional_kwargs={} response_metadata={'token_usage': {'completion_tokens': 2, 'prompt_tokens': 42, 'total_tokens': 44, 'completion_time': 0.009634289, 'prompt_time': 0.002263701, 'queue_time': 0.053748848, 'total_time': 0.01189799}, 'model_name': 'llama-3.3-70b-versatile', 'system_fingerprint': 'fp_6507bcfb6f', 'finish_reason': 'stop', 'logprobs': None} id='run--7b6e1d83-fb5f-4c7d-9e01-c0eb53710345-0' usage_metadata={'input_tokens': 42, 'output_tokens': 2, 'total_tokens': 44}
2025-05-27 21:41:29 | INFO     | __main__:initialize_llm:179 - Using model: llama-3.3-70b-versatile
2025-05-27 21:41:29 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.initialize_llm | duration=1.288s
2025-05-27 21:41:29 | INFO     | decorators:wrapper:37 - PERFORMANCE: __main__.TextToSQLApp.initialize_llm took 1.288s
2025-05-27 21:41:29 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.setup_sql_agent | args=(<__main__.TextToSQLApp object at 0x000002A94E56A250>,) | kwargs={}
2025-05-27 21:41:29 | INFO     | __main__:setup_sql_agent:190 - Setting up SQL agent
2025-05-27 21:41:29 | DEBUG    | __main__:setup_sql_agent:194 - SQL toolkit created successfully
2025-05-27 21:41:29 | DEBUG    | __main__:setup_sql_agent:224 - Creating SQL agent with custom prompt
2025-05-27 21:41:29 | SUCCESS  | __main__:setup_sql_agent:232 - SQL agent setup completed successfully
2025-05-27 21:41:29 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.setup_sql_agent | duration=0.006s
2025-05-27 21:41:29 | SUCCESS  | __main__:__init__:67 - Application initialized successfully
2025-05-27 21:41:29 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.run | args=(<__main__.TextToSQLApp object at 0x000002A94E56A250>,) | kwargs={}
2025-05-27 21:41:29 | INFO     | __main__:run:606 - Starting main application runner
2025-05-27 21:41:29 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.display_sample_queries | args=(<__main__.TextToSQLApp object at 0x000002A94E56A250>,) | kwargs={}
2025-05-27 21:41:29 | DEBUG    | __main__:display_sample_queries:553 - Displaying sample queries in sidebar
2025-05-27 21:41:29 | DEBUG    | __main__:display_sample_queries:570 - Displaying 10 sample queries
2025-05-27 21:41:29 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.display_sample_queries | duration=0.013s
2025-05-27 21:41:29 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.display_logs_sidebar | args=(<__main__.TextToSQLApp object at 0x000002A94E56A250>,) | kwargs={}
2025-05-27 21:41:29 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.display_logs_sidebar | duration=0.001s
2025-05-27 21:41:29 | INFO     | __main__:run:645 - Processing button clicked with query: 'list all rock genre albums'
2025-05-27 21:41:29 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.process_natural_language_query | args=(<__main__.TextToSQLApp object at 0x000002A94E56A250>, 'list all rock genre albums') | kwargs={}
2025-05-27 21:41:29 | INFO     | __main__:process_natural_language_query:450 - Processing natural language query: 'list all rock genre albums'
2025-05-27 21:41:29 | INFO     | __main__:process_natural_language_query:455 - Query ID: query_1748362289
2025-05-27 21:41:29 | INFO     | __main__:process_natural_language_query:459 - Step 1: Converting natural language to SQL using LLM (with capture)
2025-05-27 21:41:37 | INFO     | __main__:process_natural_language_query:468 - LLM processing completed in 8.731s
2025-05-27 21:41:37 | SUCCESS  | __main__:process_natural_language_query:484 - Captured SQL query: SELECT a.Title FROM albums a JOIN tracks t ON a.AlbumId = t.AlbumId JOIN genres g ON t.GenreId = g.GenreId WHERE g.Name = 'Rock' LIMIT 10...
2025-05-27 21:41:37 | INFO     | __main__:process_natural_language_query:487 - Step 2: Executing SQL query
2025-05-27 21:41:37 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.execute_query | args=(<__main__.TextToSQLApp object at 0x000002A94E56A250>, "SELECT a.Title FROM albums a JOIN tracks t ON a.AlbumId = t.AlbumId JOIN genres g ON t.GenreId = g.GenreId WHERE g.Name = 'Rock' LIMIT 10") | kwargs={}
2025-05-27 21:41:37 | INFO     | __main__:execute_query:393 - Executing SQL query: SELECT a.Title FROM albums a JOIN tracks t ON a.AlbumId = t.AlbumId JOIN genres g ON t.GenreId = g.G...
2025-05-27 21:41:37 | DEBUG    | __main__:execute_query:400 - Query has 1 lines
2025-05-27 21:41:37 | DEBUG    | __main__:execute_query:405 - Query complexity score: 1
2025-05-27 21:41:37 | DEBUG    | __main__:execute_query:408 - Database connection established for query execution
2025-05-27 21:41:37 | SUCCESS  | __main__:execute_query:415 - Query executed successfully in 0.005s
2025-05-27 21:41:37 | INFO     | __main__:execute_query:416 - Query returned 10 rows and 1 columns
2025-05-27 21:41:37 | DEBUG    | __main__:execute_query:419 - Column names: ['Title']
2025-05-27 21:41:37 | DEBUG    | __main__:execute_query:420 - Data types: {'Title': dtype('O')}
2025-05-27 21:41:37 | DEBUG    | __main__:execute_query:425 - Sample row: {'Title': 'For Those About To Rock We Salute You'}
2025-05-27 21:41:37 | INFO     | logger_config:log_performance:93 - PERFORMANCE: {"operation": "sql_query_execution", "duration_ms": 5.18, "timestamp": "2025-05-27T21:41:37.980437", "rows_returned": 10, "columns_returned": 1, "complexity_score": 1, "query_length": 137}
2025-05-27 21:41:37 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.execute_query | duration=0.010s
2025-05-27 21:41:37 | INFO     | __main__:process_natural_language_query:498 - Step 3: Determining chart generation requirements
2025-05-27 21:41:37 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.determine_chart_type | args=(<__main__.TextToSQLApp object at 0x000002A94E56A250>, 'list all rock genre albums',                                    Title
0  For Those About To Rock We Salute You
1                      Balls to t... | kwargs={}
2025-05-27 21:41:37 | INFO     | __main__:determine_chart_type:286 - Determining chart type for query: 'list all rock genre albums...' with data shape: (10, 1)
2025-05-27 21:41:37 | WARNING  | __main__:determine_chart_type:293 - Data has only 1 columns, need at least 2 for charting
2025-05-27 21:41:37 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.determine_chart_type | duration=0.002s
2025-05-27 21:41:37 | INFO     | __main__:process_natural_language_query:508 - Step 4: No chart generation required
2025-05-27 21:41:37 | SUCCESS  | __main__:process_natural_language_query:511 - Query processing completed successfully in 8.775s
2025-05-27 21:41:37 | INFO     | __main__:process_natural_language_query:512 - Results summary - Rows: 10, Columns: 1, Chart: None
2025-05-27 21:41:37 | INFO     | logger_config:log_performance:93 - PERFORMANCE: {"operation": "full_query_processing", "duration_ms": 8774.88, "timestamp": "2025-05-27T21:41:37.997349", "query_id": "query_1748362289", "user_query_length": 26, "sql_query_length": 137, "result_rows": 10, "result_columns": 1, "chart_type": "none", "llm_time": 8.731301307678223}
2025-05-27 21:41:37 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.process_natural_language_query | duration=8.778s
2025-05-27 21:41:37 | INFO     | decorators:wrapper:37 - PERFORMANCE: __main__.TextToSQLApp.process_natural_language_query took 8.778s
2025-05-27 21:41:37 | INFO     | __main__:run:651 - Displaying successful results
2025-05-27 21:41:38 | DEBUG    | __main__:run:656 - SQL query displayed in UI
2025-05-27 21:41:38 | ERROR    | __main__:run:686 - Unexpected error in query processing: not enough values to unpack (expected 2, got 1)
2025-05-27 21:41:38 | INFO     | __main__:run:718 - Main application runner completed successfully
2025-05-27 21:41:38 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.run | duration=8.830s
2025-05-27 21:41:38 | INFO     | decorators:wrapper:37 - PERFORMANCE: __main__.TextToSQLApp.run took 8.830s
2025-05-27 21:41:38 | INFO     | __main__:<module>:799 - Application session completed successfully
2025-05-27 21:41:38 | INFO     | __main__:<module>:807 - Application shutdown







2025-05-27 22:13:42 | INFO     | logger_config:setup_logger:65 - Logger initialized successfully
2025-05-27 22:13:42 | INFO     | __main__:<module>:792 - ==================================================
2025-05-27 22:13:42 | INFO     | __main__:<module>:793 - Starting Text-to-SQL Application
2025-05-27 22:13:42 | INFO     | __main__:<module>:794 - Start time: 2025-05-27T22:13:42.050149
2025-05-27 22:13:42 | INFO     | __main__:<module>:795 - ==================================================
2025-05-27 22:13:42 | INFO     | __main__:__init__:58 - Initializing Text-to-SQL Application
2025-05-27 22:13:42 | INFO     | __main__:__init__:60 - Session ID: 20250527_221342
2025-05-27 22:13:42 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.setup_page_config | args=(<__main__.TextToSQLApp object at 0x000002A94E1D3590>,) | kwargs={}
2025-05-27 22:13:42 | DEBUG    | __main__:setup_page_config:75 - Setting up Streamlit page configuration
2025-05-27 22:13:42 | INFO     | __main__:setup_page_config:88 - Page configuration set: {'page_title': 'Text-to-SQL Assistant', 'page_icon': 'üîç'}
2025-05-27 22:13:42 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.setup_page_config | duration=0.002s
2025-05-27 22:13:42 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.initialize_database | args=(<__main__.TextToSQLApp object at 0x000002A94E1D3590>,) | kwargs={}
2025-05-27 22:13:42 | INFO     | __main__:initialize_database:94 - Initializing database connection
2025-05-27 22:13:42 | DEBUG    | __main__:initialize_database:97 - Database path: chinook.db
2025-05-27 22:13:42 | INFO     | __main__:initialize_database:105 - Database file size: 884736 bytes
2025-05-27 22:13:42 | INFO     | __main__:initialize_database:113 - Database connection test successful. Tables found: [(13,)]
2025-05-27 22:13:42 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.log_database_schema | args=(<__main__.TextToSQLApp object at 0x000002A94E1D3590>,) | kwargs={}
2025-05-27 22:13:42 | INFO     | __main__:log_database_schema:132 - Database tables: [('albums',), ('sqlite_sequence',), ('artists',), ('customers',), ('employees',), ('genres',), ('invoices',), ('invoice_items',), ('media_types',), ('playlists',), ('playlist_track',), ('tracks',), ('sqlite_stat1',)]
2025-05-27 22:13:42 | DEBUG    | __main__:log_database_schema:140 - Schema for table albums: [(0, 'AlbumId', 'INTEGER', 1, None, 1), (1, 'Title', 'NVARCHAR(160)', 1, None, 0), (2, 'ArtistId', 'INTEGER', 1, None, 0)]
2025-05-27 22:13:42 | DEBUG    | __main__:log_database_schema:140 - Schema for table sqlite_sequence: [(0, 'name', '', 0, None, 0), (1, 'seq', '', 0, None, 0)]
2025-05-27 22:13:42 | DEBUG    | __main__:log_database_schema:140 - Schema for table artists: [(0, 'ArtistId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(120)', 0, None, 0)]
2025-05-27 22:13:42 | DEBUG    | __main__:log_database_schema:140 - Schema for table customers: [(0, 'CustomerId', 'INTEGER', 1, None, 1), (1, 'FirstName', 'NVARCHAR(40)', 1, None, 0), (2, 'LastName', 'NVARCHAR(20)', 1, None, 0), (3, 'Company', 'NVARCHAR(80)', 0, None, 0), (4, 'Address', 'NVARCHAR(70)', 0, None, 0), (5, 'City', 'NVARCHAR(40)', 0, None, 0), (6, 'State', 'NVARCHAR(40)', 0, None, 0), (7, 'Country', 'NVARCHAR(40)', 0, None, 0), (8, 'PostalCode', 'NVARCHAR(10)', 0, None, 0), (9, 'Phone', 'NVARCHAR(24)', 0, None, 0), (10, 'Fax', 'NVARCHAR(24)', 0, None, 0), (11, 'Email', 'NVARCHAR(60)', 1, None, 0), (12, 'SupportRepId', 'INTEGER', 0, None, 0)]
2025-05-27 22:13:42 | DEBUG    | __main__:log_database_schema:140 - Schema for table employees: [(0, 'EmployeeId', 'INTEGER', 1, None, 1), (1, 'LastName', 'NVARCHAR(20)', 1, None, 0), (2, 'FirstName', 'NVARCHAR(20)', 1, None, 0), (3, 'Title', 'NVARCHAR(30)', 0, None, 0), (4, 'ReportsTo', 'INTEGER', 0, None, 0), (5, 'BirthDate', 'DATETIME', 0, None, 0), (6, 'HireDate', 'DATETIME', 0, None, 0), (7, 'Address', 'NVARCHAR(70)', 0, None, 0), (8, 'City', 'NVARCHAR(40)', 0, None, 0), (9, 'State', 'NVARCHAR(40)', 0, None, 0), (10, 'Country', 'NVARCHAR(40)', 0, None, 0), (11, 'PostalCode', 'NVARCHAR(10)', 0, None, 0), (12, 'Phone', 'NVARCHAR(24)', 0, None, 0), (13, 'Fax', 'NVARCHAR(24)', 0, None, 0), (14, 'Email', 'NVARCHAR(60)', 0, None, 0)]
2025-05-27 22:13:42 | DEBUG    | __main__:log_database_schema:140 - Schema for table genres: [(0, 'GenreId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(120)', 0, None, 0)]
2025-05-27 22:13:42 | DEBUG    | __main__:log_database_schema:140 - Schema for table invoices: [(0, 'InvoiceId', 'INTEGER', 1, None, 1), (1, 'CustomerId', 'INTEGER', 1, None, 0), (2, 'InvoiceDate', 'DATETIME', 1, None, 0), (3, 'BillingAddress', 'NVARCHAR(70)', 0, None, 0), (4, 'BillingCity', 'NVARCHAR(40)', 0, None, 0), (5, 'BillingState', 'NVARCHAR(40)', 0, None, 0), (6, 'BillingCountry', 'NVARCHAR(40)', 0, None, 0), (7, 'BillingPostalCode', 'NVARCHAR(10)', 0, None, 0), (8, 'Total', 'NUMERIC(10,2)', 1, None, 0)]
2025-05-27 22:13:42 | DEBUG    | __main__:log_database_schema:140 - Schema for table invoice_items: [(0, 'InvoiceLineId', 'INTEGER', 1, None, 1), (1, 'InvoiceId', 'INTEGER', 1, None, 0), (2, 'TrackId', 'INTEGER', 1, None, 0), (3, 'UnitPrice', 'NUMERIC(10,2)', 1, None, 0), (4, 'Quantity', 'INTEGER', 1, None, 0)]
2025-05-27 22:13:42 | DEBUG    | __main__:log_database_schema:140 - Schema for table media_types: [(0, 'MediaTypeId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(120)', 0, None, 0)]
2025-05-27 22:13:42 | DEBUG    | __main__:log_database_schema:140 - Schema for table playlists: [(0, 'PlaylistId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(120)', 0, None, 0)]
2025-05-27 22:13:42 | DEBUG    | __main__:log_database_schema:140 - Schema for table playlist_track: [(0, 'PlaylistId', 'INTEGER', 1, None, 1), (1, 'TrackId', 'INTEGER', 1, None, 2)]
2025-05-27 22:13:42 | DEBUG    | __main__:log_database_schema:140 - Schema for table tracks: [(0, 'TrackId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(200)', 1, None, 0), (2, 'AlbumId', 'INTEGER', 0, None, 0), (3, 'MediaTypeId', 'INTEGER', 1, None, 0), (4, 'GenreId', 'INTEGER', 0, None, 0), (5, 'Composer', 'NVARCHAR(220)', 0, None, 0), (6, 'Milliseconds', 'INTEGER', 1, None, 0), (7, 'Bytes', 'INTEGER', 0, None, 0), (8, 'UnitPrice', 'NUMERIC(10,2)', 1, None, 0)]
2025-05-27 22:13:42 | DEBUG    | __main__:log_database_schema:140 - Schema for table sqlite_stat1: [(0, 'tbl', '', 0, None, 0), (1, 'idx', '', 0, None, 0), (2, 'stat', '', 0, None, 0)]
2025-05-27 22:13:42 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.log_database_schema | duration=0.024s
2025-05-27 22:13:42 | SUCCESS  | __main__:initialize_database:119 - Database initialization completed
2025-05-27 22:13:42 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.initialize_database | duration=0.084s
2025-05-27 22:13:42 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.initialize_llm | args=(<__main__.TextToSQLApp object at 0x000002A94E1D3590>,) | kwargs={}
2025-05-27 22:13:42 | INFO     | __main__:initialize_llm:151 - Initializing Groq LLM
2025-05-27 22:13:42 | DEBUG    | __main__:initialize_llm:161 - Using Groq API key: gsk_sBCV***Lnql
2025-05-27 22:13:43 | INFO     | __main__:initialize_llm:177 - LLM initialization successful in 1.472s
2025-05-27 22:13:43 | DEBUG    | __main__:initialize_llm:178 - LLM test response: content='OK' additional_kwargs={} response_metadata={'token_usage': {'completion_tokens': 2, 'prompt_tokens': 42, 'total_tokens': 44, 'completion_time': 0.00791785, 'prompt_time': 0.007081261, 'queue_time': 0.055295548, 'total_time': 0.014999111}, 'model_name': 'llama-3.3-70b-versatile', 'system_fingerprint': 'fp_2ddfbb0da0', 'finish_reason': 'stop', 'logprobs': None} id='run--bb79ea6a-37df-43ef-b780-4ce8bb2eb1bc-0' usage_metadata={'input_tokens': 42, 'output_tokens': 2, 'total_tokens': 44}
2025-05-27 22:13:43 | INFO     | __main__:initialize_llm:179 - Using model: llama-3.3-70b-versatile
2025-05-27 22:13:43 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.initialize_llm | duration=1.479s
2025-05-27 22:13:43 | INFO     | decorators:wrapper:37 - PERFORMANCE: __main__.TextToSQLApp.initialize_llm took 1.479s
2025-05-27 22:13:43 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.setup_sql_agent | args=(<__main__.TextToSQLApp object at 0x000002A94E1D3590>,) | kwargs={}
2025-05-27 22:13:43 | INFO     | __main__:setup_sql_agent:190 - Setting up SQL agent
2025-05-27 22:13:43 | DEBUG    | __main__:setup_sql_agent:194 - SQL toolkit created successfully
2025-05-27 22:13:43 | DEBUG    | __main__:setup_sql_agent:224 - Creating SQL agent with custom prompt
2025-05-27 22:13:43 | SUCCESS  | __main__:setup_sql_agent:232 - SQL agent setup completed successfully
2025-05-27 22:13:43 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.setup_sql_agent | duration=0.005s
2025-05-27 22:13:43 | SUCCESS  | __main__:__init__:67 - Application initialized successfully
2025-05-27 22:13:43 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.run | args=(<__main__.TextToSQLApp object at 0x000002A94E1D3590>,) | kwargs={}
2025-05-27 22:13:43 | INFO     | __main__:run:606 - Starting main application runner
2025-05-27 22:13:43 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.display_sample_queries | args=(<__main__.TextToSQLApp object at 0x000002A94E1D3590>,) | kwargs={}
2025-05-27 22:13:43 | DEBUG    | __main__:display_sample_queries:553 - Displaying sample queries in sidebar
2025-05-27 22:13:43 | DEBUG    | __main__:display_sample_queries:570 - Displaying 10 sample queries
2025-05-27 22:13:43 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.display_sample_queries | duration=0.012s
2025-05-27 22:13:43 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.display_logs_sidebar | args=(<__main__.TextToSQLApp object at 0x000002A94E1D3590>,) | kwargs={}
2025-05-27 22:13:43 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.display_logs_sidebar | duration=0.001s
2025-05-27 22:13:43 | INFO     | __main__:run:719 - Main application runner completed successfully
2025-05-27 22:13:43 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.run | duration=0.023s
2025-05-27 22:13:43 | INFO     | __main__:<module>:800 - Application session completed successfully
2025-05-27 22:13:43 | INFO     | __main__:<module>:808 - Application shutdown
2025-05-27 22:13:47 | INFO     | __main__:<module>:792 - ==================================================
2025-05-27 22:13:47 | INFO     | __main__:<module>:793 - Starting Text-to-SQL Application
2025-05-27 22:13:47 | INFO     | __main__:<module>:794 - Start time: 2025-05-27T22:13:47.936368
2025-05-27 22:13:47 | INFO     | __main__:<module>:795 - ==================================================
2025-05-27 22:13:47 | INFO     | __main__:__init__:58 - Initializing Text-to-SQL Application
2025-05-27 22:13:47 | INFO     | __main__:__init__:60 - Session ID: 20250527_221347
2025-05-27 22:13:47 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.setup_page_config | args=(<__main__.TextToSQLApp object at 0x000002A94BF9A310>,) | kwargs={}
2025-05-27 22:13:47 | DEBUG    | __main__:setup_page_config:75 - Setting up Streamlit page configuration
2025-05-27 22:13:47 | INFO     | __main__:setup_page_config:88 - Page configuration set: {'page_title': 'Text-to-SQL Assistant', 'page_icon': 'üîç'}
2025-05-27 22:13:47 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.setup_page_config | duration=0.003s
2025-05-27 22:13:47 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.initialize_database | args=(<__main__.TextToSQLApp object at 0x000002A94BF9A310>,) | kwargs={}
2025-05-27 22:13:47 | INFO     | __main__:initialize_database:94 - Initializing database connection
2025-05-27 22:13:47 | DEBUG    | __main__:initialize_database:97 - Database path: chinook.db
2025-05-27 22:13:47 | INFO     | __main__:initialize_database:105 - Database file size: 884736 bytes
2025-05-27 22:13:48 | INFO     | __main__:initialize_database:113 - Database connection test successful. Tables found: [(13,)]
2025-05-27 22:13:48 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.log_database_schema | args=(<__main__.TextToSQLApp object at 0x000002A94BF9A310>,) | kwargs={}
2025-05-27 22:13:48 | INFO     | __main__:log_database_schema:132 - Database tables: [('albums',), ('sqlite_sequence',), ('artists',), ('customers',), ('employees',), ('genres',), ('invoices',), ('invoice_items',), ('media_types',), ('playlists',), ('playlist_track',), ('tracks',), ('sqlite_stat1',)]
2025-05-27 22:13:48 | DEBUG    | __main__:log_database_schema:140 - Schema for table albums: [(0, 'AlbumId', 'INTEGER', 1, None, 1), (1, 'Title', 'NVARCHAR(160)', 1, None, 0), (2, 'ArtistId', 'INTEGER', 1, None, 0)]
2025-05-27 22:13:48 | DEBUG    | __main__:log_database_schema:140 - Schema for table sqlite_sequence: [(0, 'name', '', 0, None, 0), (1, 'seq', '', 0, None, 0)]
2025-05-27 22:13:48 | DEBUG    | __main__:log_database_schema:140 - Schema for table artists: [(0, 'ArtistId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(120)', 0, None, 0)]
2025-05-27 22:13:48 | DEBUG    | __main__:log_database_schema:140 - Schema for table customers: [(0, 'CustomerId', 'INTEGER', 1, None, 1), (1, 'FirstName', 'NVARCHAR(40)', 1, None, 0), (2, 'LastName', 'NVARCHAR(20)', 1, None, 0), (3, 'Company', 'NVARCHAR(80)', 0, None, 0), (4, 'Address', 'NVARCHAR(70)', 0, None, 0), (5, 'City', 'NVARCHAR(40)', 0, None, 0), (6, 'State', 'NVARCHAR(40)', 0, None, 0), (7, 'Country', 'NVARCHAR(40)', 0, None, 0), (8, 'PostalCode', 'NVARCHAR(10)', 0, None, 0), (9, 'Phone', 'NVARCHAR(24)', 0, None, 0), (10, 'Fax', 'NVARCHAR(24)', 0, None, 0), (11, 'Email', 'NVARCHAR(60)', 1, None, 0), (12, 'SupportRepId', 'INTEGER', 0, None, 0)]
2025-05-27 22:13:48 | DEBUG    | __main__:log_database_schema:140 - Schema for table employees: [(0, 'EmployeeId', 'INTEGER', 1, None, 1), (1, 'LastName', 'NVARCHAR(20)', 1, None, 0), (2, 'FirstName', 'NVARCHAR(20)', 1, None, 0), (3, 'Title', 'NVARCHAR(30)', 0, None, 0), (4, 'ReportsTo', 'INTEGER', 0, None, 0), (5, 'BirthDate', 'DATETIME', 0, None, 0), (6, 'HireDate', 'DATETIME', 0, None, 0), (7, 'Address', 'NVARCHAR(70)', 0, None, 0), (8, 'City', 'NVARCHAR(40)', 0, None, 0), (9, 'State', 'NVARCHAR(40)', 0, None, 0), (10, 'Country', 'NVARCHAR(40)', 0, None, 0), (11, 'PostalCode', 'NVARCHAR(10)', 0, None, 0), (12, 'Phone', 'NVARCHAR(24)', 0, None, 0), (13, 'Fax', 'NVARCHAR(24)', 0, None, 0), (14, 'Email', 'NVARCHAR(60)', 0, None, 0)]
2025-05-27 22:13:48 | DEBUG    | __main__:log_database_schema:140 - Schema for table genres: [(0, 'GenreId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(120)', 0, None, 0)]
2025-05-27 22:13:48 | DEBUG    | __main__:log_database_schema:140 - Schema for table invoices: [(0, 'InvoiceId', 'INTEGER', 1, None, 1), (1, 'CustomerId', 'INTEGER', 1, None, 0), (2, 'InvoiceDate', 'DATETIME', 1, None, 0), (3, 'BillingAddress', 'NVARCHAR(70)', 0, None, 0), (4, 'BillingCity', 'NVARCHAR(40)', 0, None, 0), (5, 'BillingState', 'NVARCHAR(40)', 0, None, 0), (6, 'BillingCountry', 'NVARCHAR(40)', 0, None, 0), (7, 'BillingPostalCode', 'NVARCHAR(10)', 0, None, 0), (8, 'Total', 'NUMERIC(10,2)', 1, None, 0)]
2025-05-27 22:13:48 | DEBUG    | __main__:log_database_schema:140 - Schema for table invoice_items: [(0, 'InvoiceLineId', 'INTEGER', 1, None, 1), (1, 'InvoiceId', 'INTEGER', 1, None, 0), (2, 'TrackId', 'INTEGER', 1, None, 0), (3, 'UnitPrice', 'NUMERIC(10,2)', 1, None, 0), (4, 'Quantity', 'INTEGER', 1, None, 0)]
2025-05-27 22:13:48 | DEBUG    | __main__:log_database_schema:140 - Schema for table media_types: [(0, 'MediaTypeId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(120)', 0, None, 0)]
2025-05-27 22:13:48 | DEBUG    | __main__:log_database_schema:140 - Schema for table playlists: [(0, 'PlaylistId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(120)', 0, None, 0)]
2025-05-27 22:13:48 | DEBUG    | __main__:log_database_schema:140 - Schema for table playlist_track: [(0, 'PlaylistId', 'INTEGER', 1, None, 1), (1, 'TrackId', 'INTEGER', 1, None, 2)]
2025-05-27 22:13:48 | DEBUG    | __main__:log_database_schema:140 - Schema for table tracks: [(0, 'TrackId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(200)', 1, None, 0), (2, 'AlbumId', 'INTEGER', 0, None, 0), (3, 'MediaTypeId', 'INTEGER', 1, None, 0), (4, 'GenreId', 'INTEGER', 0, None, 0), (5, 'Composer', 'NVARCHAR(220)', 0, None, 0), (6, 'Milliseconds', 'INTEGER', 1, None, 0), (7, 'Bytes', 'INTEGER', 0, None, 0), (8, 'UnitPrice', 'NUMERIC(10,2)', 1, None, 0)]
2025-05-27 22:13:48 | DEBUG    | __main__:log_database_schema:140 - Schema for table sqlite_stat1: [(0, 'tbl', '', 0, None, 0), (1, 'idx', '', 0, None, 0), (2, 'stat', '', 0, None, 0)]
2025-05-27 22:13:48 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.log_database_schema | duration=0.012s
2025-05-27 22:13:48 | SUCCESS  | __main__:initialize_database:119 - Database initialization completed
2025-05-27 22:13:48 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.initialize_database | duration=0.069s
2025-05-27 22:13:48 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.initialize_llm | args=(<__main__.TextToSQLApp object at 0x000002A94BF9A310>,) | kwargs={}
2025-05-27 22:13:48 | INFO     | __main__:initialize_llm:151 - Initializing Groq LLM
2025-05-27 22:13:48 | DEBUG    | __main__:initialize_llm:161 - Using Groq API key: gsk_sBCV***Lnql
2025-05-27 22:13:49 | INFO     | __main__:initialize_llm:177 - LLM initialization successful in 0.977s
2025-05-27 22:13:49 | DEBUG    | __main__:initialize_llm:178 - LLM test response: content='OK' additional_kwargs={} response_metadata={'token_usage': {'completion_tokens': 2, 'prompt_tokens': 42, 'total_tokens': 44, 'completion_time': 0.009143772, 'prompt_time': 0.002613619, 'queue_time': 0.057899591, 'total_time': 0.011757391}, 'model_name': 'llama-3.3-70b-versatile', 'system_fingerprint': 'fp_6507bcfb6f', 'finish_reason': 'stop', 'logprobs': None} id='run--f11ee7ca-98a4-414b-8a95-5a6858689cdc-0' usage_metadata={'input_tokens': 42, 'output_tokens': 2, 'total_tokens': 44}
2025-05-27 22:13:49 | INFO     | __main__:initialize_llm:179 - Using model: llama-3.3-70b-versatile
2025-05-27 22:13:49 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.initialize_llm | duration=0.978s
2025-05-27 22:13:49 | INFO     | decorators:wrapper:37 - PERFORMANCE: __main__.TextToSQLApp.initialize_llm took 0.978s
2025-05-27 22:13:49 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.setup_sql_agent | args=(<__main__.TextToSQLApp object at 0x000002A94BF9A310>,) | kwargs={}
2025-05-27 22:13:49 | INFO     | __main__:setup_sql_agent:190 - Setting up SQL agent
2025-05-27 22:13:49 | DEBUG    | __main__:setup_sql_agent:194 - SQL toolkit created successfully
2025-05-27 22:13:49 | DEBUG    | __main__:setup_sql_agent:224 - Creating SQL agent with custom prompt
2025-05-27 22:13:49 | SUCCESS  | __main__:setup_sql_agent:232 - SQL agent setup completed successfully
2025-05-27 22:13:49 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.setup_sql_agent | duration=0.000s
2025-05-27 22:13:49 | SUCCESS  | __main__:__init__:67 - Application initialized successfully
2025-05-27 22:13:49 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.run | args=(<__main__.TextToSQLApp object at 0x000002A94BF9A310>,) | kwargs={}
2025-05-27 22:13:49 | INFO     | __main__:run:606 - Starting main application runner
2025-05-27 22:13:49 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.display_sample_queries | args=(<__main__.TextToSQLApp object at 0x000002A94BF9A310>,) | kwargs={}
2025-05-27 22:13:49 | DEBUG    | __main__:display_sample_queries:553 - Displaying sample queries in sidebar
2025-05-27 22:13:49 | DEBUG    | __main__:display_sample_queries:570 - Displaying 10 sample queries
2025-05-27 22:13:49 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.display_sample_queries | duration=0.012s
2025-05-27 22:13:49 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.display_logs_sidebar | args=(<__main__.TextToSQLApp object at 0x000002A94BF9A310>,) | kwargs={}
2025-05-27 22:13:49 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.display_logs_sidebar | duration=0.002s
2025-05-27 22:13:49 | INFO     | __main__:run:645 - Processing button clicked with query: 'list all rock genre albums'
2025-05-27 22:13:49 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.process_natural_language_query | args=(<__main__.TextToSQLApp object at 0x000002A94BF9A310>, 'list all rock genre albums') | kwargs={}
2025-05-27 22:13:49 | INFO     | __main__:process_natural_language_query:450 - Processing natural language query: 'list all rock genre albums'
2025-05-27 22:13:49 | INFO     | __main__:process_natural_language_query:455 - Query ID: query_1748364229
2025-05-27 22:13:49 | INFO     | __main__:process_natural_language_query:459 - Step 1: Converting natural language to SQL using LLM (with capture)
2025-05-27 22:14:06 | INFO     | __main__:process_natural_language_query:468 - LLM processing completed in 16.988s
2025-05-27 22:14:06 | SUCCESS  | __main__:process_natural_language_query:484 - Captured SQL query: SELECT a.Title FROM albums a JOIN tracks t ON a.AlbumId = t.AlbumId JOIN genres g ON t.GenreId = g.GenreId WHERE g.Name = 'Rock' LIMIT 10...
2025-05-27 22:14:06 | INFO     | __main__:process_natural_language_query:487 - Step 2: Executing SQL query
2025-05-27 22:14:06 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.execute_query | args=(<__main__.TextToSQLApp object at 0x000002A94BF9A310>, "SELECT a.Title FROM albums a JOIN tracks t ON a.AlbumId = t.AlbumId JOIN genres g ON t.GenreId = g.GenreId WHERE g.Name = 'Rock' LIMIT 10") | kwargs={}
2025-05-27 22:14:06 | INFO     | __main__:execute_query:393 - Executing SQL query: SELECT a.Title FROM albums a JOIN tracks t ON a.AlbumId = t.AlbumId JOIN genres g ON t.GenreId = g.G...
2025-05-27 22:14:06 | DEBUG    | __main__:execute_query:400 - Query has 1 lines
2025-05-27 22:14:06 | DEBUG    | __main__:execute_query:405 - Query complexity score: 1
2025-05-27 22:14:06 | DEBUG    | __main__:execute_query:408 - Database connection established for query execution
2025-05-27 22:14:06 | SUCCESS  | __main__:execute_query:415 - Query executed successfully in 0.012s
2025-05-27 22:14:06 | INFO     | __main__:execute_query:416 - Query returned 10 rows and 1 columns
2025-05-27 22:14:06 | DEBUG    | __main__:execute_query:419 - Column names: ['Title']
2025-05-27 22:14:06 | DEBUG    | __main__:execute_query:420 - Data types: {'Title': dtype('O')}
2025-05-27 22:14:06 | DEBUG    | __main__:execute_query:425 - Sample row: {'Title': 'For Those About To Rock We Salute You'}
2025-05-27 22:14:06 | INFO     | logger_config:log_performance:93 - PERFORMANCE: {"operation": "sql_query_execution", "duration_ms": 12.35, "timestamp": "2025-05-27T22:14:06.046791", "rows_returned": 10, "columns_returned": 1, "complexity_score": 1, "query_length": 137}
2025-05-27 22:14:06 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.execute_query | duration=0.016s
2025-05-27 22:14:06 | INFO     | __main__:process_natural_language_query:498 - Step 3: Determining chart generation requirements
2025-05-27 22:14:06 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.determine_chart_type | args=(<__main__.TextToSQLApp object at 0x000002A94BF9A310>, 'list all rock genre albums',                                    Title
0  For Those About To Rock We Salute You
1                      Balls to t... | kwargs={}
2025-05-27 22:14:06 | INFO     | __main__:determine_chart_type:286 - Determining chart type for query: 'list all rock genre albums...' with data shape: (10, 1)
2025-05-27 22:14:06 | WARNING  | __main__:determine_chart_type:293 - Data has only 1 columns, need at least 2 for charting
2025-05-27 22:14:06 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.determine_chart_type | duration=0.001s
2025-05-27 22:14:06 | INFO     | __main__:process_natural_language_query:508 - Step 4: No chart generation required
2025-05-27 22:14:06 | SUCCESS  | __main__:process_natural_language_query:511 - Query processing completed successfully in 17.021s
2025-05-27 22:14:06 | INFO     | __main__:process_natural_language_query:512 - Results summary - Rows: 10, Columns: 1, Chart: None
2025-05-27 22:14:06 | INFO     | logger_config:log_performance:93 - PERFORMANCE: {"operation": "full_query_processing", "duration_ms": 17021.4, "timestamp": "2025-05-27T22:14:06.063792", "query_id": "query_1748364229", "user_query_length": 26, "sql_query_length": 137, "result_rows": 10, "result_columns": 1, "chart_type": "none", "llm_time": 16.98804259300232}
2025-05-27 22:14:06 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.process_natural_language_query | duration=17.025s
2025-05-27 22:14:06 | INFO     | decorators:wrapper:37 - PERFORMANCE: __main__.TextToSQLApp.process_natural_language_query took 17.025s
2025-05-27 22:14:06 | INFO     | __main__:run:649 - Natural language Query processing completed: SQL query : SELECT a.Title FROM albums a JOIN tracks t ON a.AlbumId = t.AlbumId JOIN genres g ON t.GenreId = g.GenreId WHERE g.Name = 'Rock' LIMIT 10, DataFrame                                    Title
0  For Those About To Rock We Salute You
1                      Balls to the Wall
2                      Restless and Wild
3                      Restless and Wild
4                      Restless and Wild
5  For Those About To Rock We Salute You
6  For Those About To Rock We Salute You
7  For Those About To Rock We Salute You
8  For Those About To Rock We Salute You
9  For Those About To Rock We Salute You, Chart info: None, Chart type: None, Chart columns: None
2025-05-27 22:14:06 | INFO     | __main__:run:652 - Displaying successful results
2025-05-27 22:14:06 | DEBUG    | __main__:run:657 - SQL query displayed in UI
2025-05-27 22:14:06 | ERROR    | __main__:run:687 - Unexpected error in query processing: not enough values to unpack (expected 2, got 1)
2025-05-27 22:14:06 | INFO     | __main__:run:719 - Main application runner completed successfully
2025-05-27 22:14:06 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.run | duration=17.089s
2025-05-27 22:14:06 | INFO     | decorators:wrapper:37 - PERFORMANCE: __main__.TextToSQLApp.run took 17.089s
2025-05-27 22:14:06 | INFO     | __main__:<module>:800 - Application session completed successfully
2025-05-27 22:14:06 | INFO     | __main__:<module>:808 - Application shutdown
2025-05-27 22:20:35 | INFO     | logger_config:setup_logger:65 - Logger initialized successfully
2025-05-27 22:20:35 | INFO     | __main__:<module>:794 - ==================================================
2025-05-27 22:20:35 | INFO     | __main__:<module>:795 - Starting Text-to-SQL Application
2025-05-27 22:20:35 | INFO     | __main__:<module>:796 - Start time: 2025-05-27T22:20:35.751613
2025-05-27 22:20:35 | INFO     | __main__:<module>:797 - ==================================================
2025-05-27 22:20:35 | INFO     | __main__:__init__:58 - Initializing Text-to-SQL Application
2025-05-27 22:20:35 | INFO     | __main__:__init__:60 - Session ID: 20250527_222035
2025-05-27 22:20:35 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.setup_page_config | args=(<__main__.TextToSQLApp object at 0x000002A94E48E5D0>,) | kwargs={}
2025-05-27 22:20:35 | DEBUG    | __main__:setup_page_config:75 - Setting up Streamlit page configuration
2025-05-27 22:20:35 | INFO     | __main__:setup_page_config:88 - Page configuration set: {'page_title': 'Text-to-SQL Assistant', 'page_icon': 'üîç'}
2025-05-27 22:20:35 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.setup_page_config | duration=0.003s
2025-05-27 22:20:35 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.initialize_database | args=(<__main__.TextToSQLApp object at 0x000002A94E48E5D0>,) | kwargs={}
2025-05-27 22:20:35 | INFO     | __main__:initialize_database:94 - Initializing database connection
2025-05-27 22:20:35 | DEBUG    | __main__:initialize_database:97 - Database path: chinook.db
2025-05-27 22:20:35 | INFO     | __main__:initialize_database:105 - Database file size: 884736 bytes
2025-05-27 22:20:35 | INFO     | __main__:initialize_database:113 - Database connection test successful. Tables found: [(13,)]
2025-05-27 22:20:35 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.log_database_schema | args=(<__main__.TextToSQLApp object at 0x000002A94E48E5D0>,) | kwargs={}
2025-05-27 22:20:35 | INFO     | __main__:log_database_schema:132 - Database tables: [('albums',), ('sqlite_sequence',), ('artists',), ('customers',), ('employees',), ('genres',), ('invoices',), ('invoice_items',), ('media_types',), ('playlists',), ('playlist_track',), ('tracks',), ('sqlite_stat1',)]
2025-05-27 22:20:35 | DEBUG    | __main__:log_database_schema:140 - Schema for table albums: [(0, 'AlbumId', 'INTEGER', 1, None, 1), (1, 'Title', 'NVARCHAR(160)', 1, None, 0), (2, 'ArtistId', 'INTEGER', 1, None, 0)]
2025-05-27 22:20:35 | DEBUG    | __main__:log_database_schema:140 - Schema for table sqlite_sequence: [(0, 'name', '', 0, None, 0), (1, 'seq', '', 0, None, 0)]
2025-05-27 22:20:35 | DEBUG    | __main__:log_database_schema:140 - Schema for table artists: [(0, 'ArtistId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(120)', 0, None, 0)]
2025-05-27 22:20:35 | DEBUG    | __main__:log_database_schema:140 - Schema for table customers: [(0, 'CustomerId', 'INTEGER', 1, None, 1), (1, 'FirstName', 'NVARCHAR(40)', 1, None, 0), (2, 'LastName', 'NVARCHAR(20)', 1, None, 0), (3, 'Company', 'NVARCHAR(80)', 0, None, 0), (4, 'Address', 'NVARCHAR(70)', 0, None, 0), (5, 'City', 'NVARCHAR(40)', 0, None, 0), (6, 'State', 'NVARCHAR(40)', 0, None, 0), (7, 'Country', 'NVARCHAR(40)', 0, None, 0), (8, 'PostalCode', 'NVARCHAR(10)', 0, None, 0), (9, 'Phone', 'NVARCHAR(24)', 0, None, 0), (10, 'Fax', 'NVARCHAR(24)', 0, None, 0), (11, 'Email', 'NVARCHAR(60)', 1, None, 0), (12, 'SupportRepId', 'INTEGER', 0, None, 0)]
2025-05-27 22:20:35 | DEBUG    | __main__:log_database_schema:140 - Schema for table employees: [(0, 'EmployeeId', 'INTEGER', 1, None, 1), (1, 'LastName', 'NVARCHAR(20)', 1, None, 0), (2, 'FirstName', 'NVARCHAR(20)', 1, None, 0), (3, 'Title', 'NVARCHAR(30)', 0, None, 0), (4, 'ReportsTo', 'INTEGER', 0, None, 0), (5, 'BirthDate', 'DATETIME', 0, None, 0), (6, 'HireDate', 'DATETIME', 0, None, 0), (7, 'Address', 'NVARCHAR(70)', 0, None, 0), (8, 'City', 'NVARCHAR(40)', 0, None, 0), (9, 'State', 'NVARCHAR(40)', 0, None, 0), (10, 'Country', 'NVARCHAR(40)', 0, None, 0), (11, 'PostalCode', 'NVARCHAR(10)', 0, None, 0), (12, 'Phone', 'NVARCHAR(24)', 0, None, 0), (13, 'Fax', 'NVARCHAR(24)', 0, None, 0), (14, 'Email', 'NVARCHAR(60)', 0, None, 0)]
2025-05-27 22:20:35 | DEBUG    | __main__:log_database_schema:140 - Schema for table genres: [(0, 'GenreId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(120)', 0, None, 0)]
2025-05-27 22:20:35 | DEBUG    | __main__:log_database_schema:140 - Schema for table invoices: [(0, 'InvoiceId', 'INTEGER', 1, None, 1), (1, 'CustomerId', 'INTEGER', 1, None, 0), (2, 'InvoiceDate', 'DATETIME', 1, None, 0), (3, 'BillingAddress', 'NVARCHAR(70)', 0, None, 0), (4, 'BillingCity', 'NVARCHAR(40)', 0, None, 0), (5, 'BillingState', 'NVARCHAR(40)', 0, None, 0), (6, 'BillingCountry', 'NVARCHAR(40)', 0, None, 0), (7, 'BillingPostalCode', 'NVARCHAR(10)', 0, None, 0), (8, 'Total', 'NUMERIC(10,2)', 1, None, 0)]
2025-05-27 22:20:35 | DEBUG    | __main__:log_database_schema:140 - Schema for table invoice_items: [(0, 'InvoiceLineId', 'INTEGER', 1, None, 1), (1, 'InvoiceId', 'INTEGER', 1, None, 0), (2, 'TrackId', 'INTEGER', 1, None, 0), (3, 'UnitPrice', 'NUMERIC(10,2)', 1, None, 0), (4, 'Quantity', 'INTEGER', 1, None, 0)]
2025-05-27 22:20:35 | DEBUG    | __main__:log_database_schema:140 - Schema for table media_types: [(0, 'MediaTypeId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(120)', 0, None, 0)]
2025-05-27 22:20:35 | DEBUG    | __main__:log_database_schema:140 - Schema for table playlists: [(0, 'PlaylistId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(120)', 0, None, 0)]
2025-05-27 22:20:35 | DEBUG    | __main__:log_database_schema:140 - Schema for table playlist_track: [(0, 'PlaylistId', 'INTEGER', 1, None, 1), (1, 'TrackId', 'INTEGER', 1, None, 2)]
2025-05-27 22:20:35 | DEBUG    | __main__:log_database_schema:140 - Schema for table tracks: [(0, 'TrackId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(200)', 1, None, 0), (2, 'AlbumId', 'INTEGER', 0, None, 0), (3, 'MediaTypeId', 'INTEGER', 1, None, 0), (4, 'GenreId', 'INTEGER', 0, None, 0), (5, 'Composer', 'NVARCHAR(220)', 0, None, 0), (6, 'Milliseconds', 'INTEGER', 1, None, 0), (7, 'Bytes', 'INTEGER', 0, None, 0), (8, 'UnitPrice', 'NUMERIC(10,2)', 1, None, 0)]
2025-05-27 22:20:35 | DEBUG    | __main__:log_database_schema:140 - Schema for table sqlite_stat1: [(0, 'tbl', '', 0, None, 0), (1, 'idx', '', 0, None, 0), (2, 'stat', '', 0, None, 0)]
2025-05-27 22:20:35 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.log_database_schema | duration=0.019s
2025-05-27 22:20:35 | SUCCESS  | __main__:initialize_database:119 - Database initialization completed
2025-05-27 22:20:35 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.initialize_database | duration=0.085s
2025-05-27 22:20:35 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.initialize_llm | args=(<__main__.TextToSQLApp object at 0x000002A94E48E5D0>,) | kwargs={}
2025-05-27 22:20:35 | INFO     | __main__:initialize_llm:151 - Initializing Groq LLM
2025-05-27 22:20:35 | DEBUG    | __main__:initialize_llm:161 - Using Groq API key: gsk_sBCV***Lnql
2025-05-27 22:20:37 | INFO     | __main__:initialize_llm:177 - LLM initialization successful in 1.226s
2025-05-27 22:20:37 | DEBUG    | __main__:initialize_llm:178 - LLM test response: content='OK' additional_kwargs={} response_metadata={'token_usage': {'completion_tokens': 2, 'prompt_tokens': 42, 'total_tokens': 44, 'completion_time': 0.010193165, 'prompt_time': 0.002277075, 'queue_time': 0.054306625, 'total_time': 0.01247024}, 'model_name': 'llama-3.3-70b-versatile', 'system_fingerprint': 'fp_3f3b593e33', 'finish_reason': 'stop', 'logprobs': None} id='run--35ec8b69-e36b-4513-808c-25d580067d2e-0' usage_metadata={'input_tokens': 42, 'output_tokens': 2, 'total_tokens': 44}
2025-05-27 22:20:37 | INFO     | __main__:initialize_llm:179 - Using model: llama-3.3-70b-versatile
2025-05-27 22:20:37 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.initialize_llm | duration=1.229s
2025-05-27 22:20:37 | INFO     | decorators:wrapper:37 - PERFORMANCE: __main__.TextToSQLApp.initialize_llm took 1.229s
2025-05-27 22:20:37 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.setup_sql_agent | args=(<__main__.TextToSQLApp object at 0x000002A94E48E5D0>,) | kwargs={}
2025-05-27 22:20:37 | INFO     | __main__:setup_sql_agent:190 - Setting up SQL agent
2025-05-27 22:20:37 | DEBUG    | __main__:setup_sql_agent:194 - SQL toolkit created successfully
2025-05-27 22:20:37 | DEBUG    | __main__:setup_sql_agent:224 - Creating SQL agent with custom prompt
2025-05-27 22:20:37 | SUCCESS  | __main__:setup_sql_agent:232 - SQL agent setup completed successfully
2025-05-27 22:20:37 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.setup_sql_agent | duration=0.000s
2025-05-27 22:20:37 | SUCCESS  | __main__:__init__:67 - Application initialized successfully
2025-05-27 22:20:37 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.run | args=(<__main__.TextToSQLApp object at 0x000002A94E48E5D0>,) | kwargs={}
2025-05-27 22:20:37 | INFO     | __main__:run:606 - Starting main application runner
2025-05-27 22:20:37 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.display_sample_queries | args=(<__main__.TextToSQLApp object at 0x000002A94E48E5D0>,) | kwargs={}
2025-05-27 22:20:37 | DEBUG    | __main__:display_sample_queries:553 - Displaying sample queries in sidebar
2025-05-27 22:20:37 | DEBUG    | __main__:display_sample_queries:570 - Displaying 10 sample queries
2025-05-27 22:20:37 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.display_sample_queries | duration=0.011s
2025-05-27 22:20:37 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.display_logs_sidebar | args=(<__main__.TextToSQLApp object at 0x000002A94E48E5D0>,) | kwargs={}
2025-05-27 22:20:37 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.display_logs_sidebar | duration=0.001s
2025-05-27 22:20:37 | INFO     | __main__:run:721 - Main application runner completed successfully
2025-05-27 22:20:37 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.run | duration=0.030s
2025-05-27 22:20:37 | INFO     | __main__:<module>:802 - Application session completed successfully
2025-05-27 22:20:37 | INFO     | __main__:<module>:810 - Application shutdown
2025-05-27 22:20:41 | INFO     | __main__:<module>:794 - ==================================================
2025-05-27 22:20:41 | INFO     | __main__:<module>:795 - Starting Text-to-SQL Application
2025-05-27 22:20:41 | INFO     | __main__:<module>:796 - Start time: 2025-05-27T22:20:41.157602
2025-05-27 22:20:41 | INFO     | __main__:<module>:797 - ==================================================
2025-05-27 22:20:41 | INFO     | __main__:__init__:58 - Initializing Text-to-SQL Application
2025-05-27 22:20:41 | INFO     | __main__:__init__:60 - Session ID: 20250527_222041
2025-05-27 22:20:41 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.setup_page_config | args=(<__main__.TextToSQLApp object at 0x000002A94C14B5D0>,) | kwargs={}
2025-05-27 22:20:41 | DEBUG    | __main__:setup_page_config:75 - Setting up Streamlit page configuration
2025-05-27 22:20:41 | INFO     | __main__:setup_page_config:88 - Page configuration set: {'page_title': 'Text-to-SQL Assistant', 'page_icon': 'üîç'}
2025-05-27 22:20:41 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.setup_page_config | duration=0.003s
2025-05-27 22:20:41 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.initialize_database | args=(<__main__.TextToSQLApp object at 0x000002A94C14B5D0>,) | kwargs={}
2025-05-27 22:20:41 | INFO     | __main__:initialize_database:94 - Initializing database connection
2025-05-27 22:20:41 | DEBUG    | __main__:initialize_database:97 - Database path: chinook.db
2025-05-27 22:20:41 | INFO     | __main__:initialize_database:105 - Database file size: 884736 bytes
2025-05-27 22:20:41 | INFO     | __main__:initialize_database:113 - Database connection test successful. Tables found: [(13,)]
2025-05-27 22:20:41 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.log_database_schema | args=(<__main__.TextToSQLApp object at 0x000002A94C14B5D0>,) | kwargs={}
2025-05-27 22:20:41 | INFO     | __main__:log_database_schema:132 - Database tables: [('albums',), ('sqlite_sequence',), ('artists',), ('customers',), ('employees',), ('genres',), ('invoices',), ('invoice_items',), ('media_types',), ('playlists',), ('playlist_track',), ('tracks',), ('sqlite_stat1',)]
2025-05-27 22:20:41 | DEBUG    | __main__:log_database_schema:140 - Schema for table albums: [(0, 'AlbumId', 'INTEGER', 1, None, 1), (1, 'Title', 'NVARCHAR(160)', 1, None, 0), (2, 'ArtistId', 'INTEGER', 1, None, 0)]
2025-05-27 22:20:41 | DEBUG    | __main__:log_database_schema:140 - Schema for table sqlite_sequence: [(0, 'name', '', 0, None, 0), (1, 'seq', '', 0, None, 0)]
2025-05-27 22:20:41 | DEBUG    | __main__:log_database_schema:140 - Schema for table artists: [(0, 'ArtistId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(120)', 0, None, 0)]
2025-05-27 22:20:41 | DEBUG    | __main__:log_database_schema:140 - Schema for table customers: [(0, 'CustomerId', 'INTEGER', 1, None, 1), (1, 'FirstName', 'NVARCHAR(40)', 1, None, 0), (2, 'LastName', 'NVARCHAR(20)', 1, None, 0), (3, 'Company', 'NVARCHAR(80)', 0, None, 0), (4, 'Address', 'NVARCHAR(70)', 0, None, 0), (5, 'City', 'NVARCHAR(40)', 0, None, 0), (6, 'State', 'NVARCHAR(40)', 0, None, 0), (7, 'Country', 'NVARCHAR(40)', 0, None, 0), (8, 'PostalCode', 'NVARCHAR(10)', 0, None, 0), (9, 'Phone', 'NVARCHAR(24)', 0, None, 0), (10, 'Fax', 'NVARCHAR(24)', 0, None, 0), (11, 'Email', 'NVARCHAR(60)', 1, None, 0), (12, 'SupportRepId', 'INTEGER', 0, None, 0)]
2025-05-27 22:20:41 | DEBUG    | __main__:log_database_schema:140 - Schema for table employees: [(0, 'EmployeeId', 'INTEGER', 1, None, 1), (1, 'LastName', 'NVARCHAR(20)', 1, None, 0), (2, 'FirstName', 'NVARCHAR(20)', 1, None, 0), (3, 'Title', 'NVARCHAR(30)', 0, None, 0), (4, 'ReportsTo', 'INTEGER', 0, None, 0), (5, 'BirthDate', 'DATETIME', 0, None, 0), (6, 'HireDate', 'DATETIME', 0, None, 0), (7, 'Address', 'NVARCHAR(70)', 0, None, 0), (8, 'City', 'NVARCHAR(40)', 0, None, 0), (9, 'State', 'NVARCHAR(40)', 0, None, 0), (10, 'Country', 'NVARCHAR(40)', 0, None, 0), (11, 'PostalCode', 'NVARCHAR(10)', 0, None, 0), (12, 'Phone', 'NVARCHAR(24)', 0, None, 0), (13, 'Fax', 'NVARCHAR(24)', 0, None, 0), (14, 'Email', 'NVARCHAR(60)', 0, None, 0)]
2025-05-27 22:20:41 | DEBUG    | __main__:log_database_schema:140 - Schema for table genres: [(0, 'GenreId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(120)', 0, None, 0)]
2025-05-27 22:20:41 | DEBUG    | __main__:log_database_schema:140 - Schema for table invoices: [(0, 'InvoiceId', 'INTEGER', 1, None, 1), (1, 'CustomerId', 'INTEGER', 1, None, 0), (2, 'InvoiceDate', 'DATETIME', 1, None, 0), (3, 'BillingAddress', 'NVARCHAR(70)', 0, None, 0), (4, 'BillingCity', 'NVARCHAR(40)', 0, None, 0), (5, 'BillingState', 'NVARCHAR(40)', 0, None, 0), (6, 'BillingCountry', 'NVARCHAR(40)', 0, None, 0), (7, 'BillingPostalCode', 'NVARCHAR(10)', 0, None, 0), (8, 'Total', 'NUMERIC(10,2)', 1, None, 0)]
2025-05-27 22:20:41 | DEBUG    | __main__:log_database_schema:140 - Schema for table invoice_items: [(0, 'InvoiceLineId', 'INTEGER', 1, None, 1), (1, 'InvoiceId', 'INTEGER', 1, None, 0), (2, 'TrackId', 'INTEGER', 1, None, 0), (3, 'UnitPrice', 'NUMERIC(10,2)', 1, None, 0), (4, 'Quantity', 'INTEGER', 1, None, 0)]
2025-05-27 22:20:41 | DEBUG    | __main__:log_database_schema:140 - Schema for table media_types: [(0, 'MediaTypeId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(120)', 0, None, 0)]
2025-05-27 22:20:41 | DEBUG    | __main__:log_database_schema:140 - Schema for table playlists: [(0, 'PlaylistId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(120)', 0, None, 0)]
2025-05-27 22:20:41 | DEBUG    | __main__:log_database_schema:140 - Schema for table playlist_track: [(0, 'PlaylistId', 'INTEGER', 1, None, 1), (1, 'TrackId', 'INTEGER', 1, None, 2)]
2025-05-27 22:20:41 | DEBUG    | __main__:log_database_schema:140 - Schema for table tracks: [(0, 'TrackId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(200)', 1, None, 0), (2, 'AlbumId', 'INTEGER', 0, None, 0), (3, 'MediaTypeId', 'INTEGER', 1, None, 0), (4, 'GenreId', 'INTEGER', 0, None, 0), (5, 'Composer', 'NVARCHAR(220)', 0, None, 0), (6, 'Milliseconds', 'INTEGER', 1, None, 0), (7, 'Bytes', 'INTEGER', 0, None, 0), (8, 'UnitPrice', 'NUMERIC(10,2)', 1, None, 0)]
2025-05-27 22:20:41 | DEBUG    | __main__:log_database_schema:140 - Schema for table sqlite_stat1: [(0, 'tbl', '', 0, None, 0), (1, 'idx', '', 0, None, 0), (2, 'stat', '', 0, None, 0)]
2025-05-27 22:20:41 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.log_database_schema | duration=0.012s
2025-05-27 22:20:41 | SUCCESS  | __main__:initialize_database:119 - Database initialization completed
2025-05-27 22:20:41 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.initialize_database | duration=0.073s
2025-05-27 22:20:41 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.initialize_llm | args=(<__main__.TextToSQLApp object at 0x000002A94C14B5D0>,) | kwargs={}
2025-05-27 22:20:41 | INFO     | __main__:initialize_llm:151 - Initializing Groq LLM
2025-05-27 22:20:41 | DEBUG    | __main__:initialize_llm:161 - Using Groq API key: gsk_sBCV***Lnql
2025-05-27 22:20:42 | INFO     | __main__:initialize_llm:177 - LLM initialization successful in 1.078s
2025-05-27 22:20:42 | DEBUG    | __main__:initialize_llm:178 - LLM test response: content='OK' additional_kwargs={} response_metadata={'token_usage': {'completion_tokens': 2, 'prompt_tokens': 42, 'total_tokens': 44, 'completion_time': 0.008027006, 'prompt_time': 0.003574754, 'queue_time': 0.056688426, 'total_time': 0.01160176}, 'model_name': 'llama-3.3-70b-versatile', 'system_fingerprint': 'fp_3f3b593e33', 'finish_reason': 'stop', 'logprobs': None} id='run--fdf1cbb0-8697-4f70-ba5f-deb1d1c51b0f-0' usage_metadata={'input_tokens': 42, 'output_tokens': 2, 'total_tokens': 44}
2025-05-27 22:20:42 | INFO     | __main__:initialize_llm:179 - Using model: llama-3.3-70b-versatile
2025-05-27 22:20:42 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.initialize_llm | duration=1.079s
2025-05-27 22:20:42 | INFO     | decorators:wrapper:37 - PERFORMANCE: __main__.TextToSQLApp.initialize_llm took 1.079s
2025-05-27 22:20:42 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.setup_sql_agent | args=(<__main__.TextToSQLApp object at 0x000002A94C14B5D0>,) | kwargs={}
2025-05-27 22:20:42 | INFO     | __main__:setup_sql_agent:190 - Setting up SQL agent
2025-05-27 22:20:42 | DEBUG    | __main__:setup_sql_agent:194 - SQL toolkit created successfully
2025-05-27 22:20:42 | DEBUG    | __main__:setup_sql_agent:224 - Creating SQL agent with custom prompt
2025-05-27 22:20:42 | SUCCESS  | __main__:setup_sql_agent:232 - SQL agent setup completed successfully
2025-05-27 22:20:42 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.setup_sql_agent | duration=0.000s
2025-05-27 22:20:42 | SUCCESS  | __main__:__init__:67 - Application initialized successfully
2025-05-27 22:20:42 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.run | args=(<__main__.TextToSQLApp object at 0x000002A94C14B5D0>,) | kwargs={}
2025-05-27 22:20:42 | INFO     | __main__:run:606 - Starting main application runner
2025-05-27 22:20:42 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.display_sample_queries | args=(<__main__.TextToSQLApp object at 0x000002A94C14B5D0>,) | kwargs={}
2025-05-27 22:20:42 | DEBUG    | __main__:display_sample_queries:553 - Displaying sample queries in sidebar
2025-05-27 22:20:42 | DEBUG    | __main__:display_sample_queries:570 - Displaying 10 sample queries
2025-05-27 22:20:42 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.display_sample_queries | duration=0.008s
2025-05-27 22:20:42 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.display_logs_sidebar | args=(<__main__.TextToSQLApp object at 0x000002A94C14B5D0>,) | kwargs={}
2025-05-27 22:20:42 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.display_logs_sidebar | duration=0.001s
2025-05-27 22:20:42 | INFO     | __main__:run:645 - Processing button clicked with query: 'list all rock genre albums'
2025-05-27 22:20:42 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.process_natural_language_query | args=(<__main__.TextToSQLApp object at 0x000002A94C14B5D0>, 'list all rock genre albums') | kwargs={}
2025-05-27 22:20:42 | INFO     | __main__:process_natural_language_query:450 - Processing natural language query: 'list all rock genre albums'
2025-05-27 22:20:42 | INFO     | __main__:process_natural_language_query:455 - Query ID: query_1748364642
2025-05-27 22:20:42 | INFO     | __main__:process_natural_language_query:459 - Step 1: Converting natural language to SQL using LLM (with capture)
2025-05-27 22:20:56 | INFO     | __main__:process_natural_language_query:468 - LLM processing completed in 13.983s
2025-05-27 22:20:56 | SUCCESS  | __main__:process_natural_language_query:484 - Captured SQL query: SELECT T2.Title FROM genres AS T1 INNER JOIN tracks AS T3 ON T1.GenreId = T3.GenreId INNER JOIN albums AS T2 ON T3.AlbumId = T2.AlbumId WHERE T1.Name = 'Rock' LIMIT 10...
2025-05-27 22:20:56 | INFO     | __main__:process_natural_language_query:487 - Step 2: Executing SQL query
2025-05-27 22:20:56 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.execute_query | args=(<__main__.TextToSQLApp object at 0x000002A94C14B5D0>, "SELECT T2.Title FROM genres AS T1 INNER JOIN tracks AS T3 ON T1.GenreId = T3.GenreId INNER JOIN albums AS T2 ON T3.AlbumId = T2.AlbumId WHERE T1... | kwargs={}
2025-05-27 22:20:56 | INFO     | __main__:execute_query:393 - Executing SQL query: SELECT T2.Title FROM genres AS T1 INNER JOIN tracks AS T3 ON T1.GenreId = T3.GenreId INNER JOIN albu...
2025-05-27 22:20:56 | DEBUG    | __main__:execute_query:400 - Query has 1 lines
2025-05-27 22:20:56 | DEBUG    | __main__:execute_query:405 - Query complexity score: 1
2025-05-27 22:20:56 | DEBUG    | __main__:execute_query:408 - Database connection established for query execution
2025-05-27 22:20:56 | SUCCESS  | __main__:execute_query:415 - Query executed successfully in 0.006s
2025-05-27 22:20:56 | INFO     | __main__:execute_query:416 - Query returned 10 rows and 1 columns
2025-05-27 22:20:56 | DEBUG    | __main__:execute_query:419 - Column names: ['Title']
2025-05-27 22:20:56 | DEBUG    | __main__:execute_query:420 - Data types: {'Title': dtype('O')}
2025-05-27 22:20:56 | DEBUG    | __main__:execute_query:425 - Sample row: {'Title': 'For Those About To Rock We Salute You'}
2025-05-27 22:20:56 | INFO     | logger_config:log_performance:93 - PERFORMANCE: {"operation": "sql_query_execution", "duration_ms": 6.46, "timestamp": "2025-05-27T22:20:56.371937", "rows_returned": 10, "columns_returned": 1, "complexity_score": 1, "query_length": 167}
2025-05-27 22:20:56 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.execute_query | duration=0.016s
2025-05-27 22:20:56 | INFO     | __main__:process_natural_language_query:498 - Step 3: Determining chart generation requirements
2025-05-27 22:20:56 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.determine_chart_type | args=(<__main__.TextToSQLApp object at 0x000002A94C14B5D0>, 'list all rock genre albums',                                    Title
0  For Those About To Rock We Salute You
1                      Balls to t... | kwargs={}
2025-05-27 22:20:56 | INFO     | __main__:determine_chart_type:286 - Determining chart type for query: 'list all rock genre albums...' with data shape: (10, 1)
2025-05-27 22:20:56 | WARNING  | __main__:determine_chart_type:293 - Data has only 1 columns, need at least 2 for charting
2025-05-27 22:20:56 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.determine_chart_type | duration=0.001s
2025-05-27 22:20:56 | INFO     | __main__:process_natural_language_query:508 - Step 4: No chart generation required
2025-05-27 22:20:56 | SUCCESS  | __main__:process_natural_language_query:511 - Query processing completed successfully in 14.029s
2025-05-27 22:20:56 | INFO     | __main__:process_natural_language_query:512 - Results summary - Rows: 10, Columns: 1, Chart: None
2025-05-27 22:20:56 | INFO     | logger_config:log_performance:93 - PERFORMANCE: {"operation": "full_query_processing", "duration_ms": 14028.93, "timestamp": "2025-05-27T22:20:56.385045", "query_id": "query_1748364642", "user_query_length": 26, "sql_query_length": 167, "result_rows": 10, "result_columns": 1, "chart_type": "none", "llm_time": 13.98318362236023}
2025-05-27 22:20:56 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.process_natural_language_query | duration=14.035s
2025-05-27 22:20:56 | INFO     | decorators:wrapper:37 - PERFORMANCE: __main__.TextToSQLApp.process_natural_language_query took 14.035s
2025-05-27 22:20:56 | INFO     | __main__:run:649 - Natural language Query processing completed: SQL query : SELECT T2.Title FROM genres AS T1 INNER JOIN tracks AS T3 ON T1.GenreId = T3.GenreId INNER JOIN albums AS T2 ON T3.AlbumId = T2.AlbumId WHERE T1.Name = 'Rock' LIMIT 10, DataFrame:                                    Title
0  For Those About To Rock We Salute You
1                      Balls to the Wall
2                      Restless and Wild
3                      Restless and Wild
4                      Restless and Wild
5  For Those About To Rock We Salute You
6  For Those About To Rock We Salute You
7  For Those About To Rock We Salute You
8  For Those About To Rock We Salute You
9  For Those About To Rock We Salute You, Chart info: None, Chart type: None, Chart columns: None
2025-05-27 22:20:56 | INFO     | __main__:run:652 - Displaying successful results
2025-05-27 22:20:56 | DEBUG    | __main__:run:657 - SQL query displayed in UI
2025-05-27 22:20:56 | DEBUG    | __main__:run:668 - Results table displayed in UI
2025-05-27 22:20:56 | INFO     | __main__:run:721 - Main application runner completed successfully
2025-05-27 22:20:56 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.run | duration=14.090s
2025-05-27 22:20:56 | INFO     | decorators:wrapper:37 - PERFORMANCE: __main__.TextToSQLApp.run took 14.090s
2025-05-27 22:20:56 | INFO     | __main__:<module>:802 - Application session completed successfully
2025-05-27 22:20:56 | INFO     | __main__:<module>:810 - Application shutdown




2025-05-27 23:01:22 | INFO     | logger_config:setup_logger:65 - Logger initialized successfully
2025-05-27 23:01:22 | INFO     | __main__:<module>:795 - ==================================================
2025-05-27 23:01:22 | INFO     | __main__:<module>:796 - Starting Text-to-SQL Application
2025-05-27 23:01:22 | INFO     | __main__:<module>:797 - Start time: 2025-05-27T23:01:22.471706
2025-05-27 23:01:22 | INFO     | __main__:<module>:798 - ==================================================
2025-05-27 23:01:22 | INFO     | __main__:__init__:58 - Initializing Text-to-SQL Application
2025-05-27 23:01:22 | INFO     | __main__:__init__:60 - Session ID: 20250527_230122
2025-05-27 23:01:22 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.setup_page_config | args=(<__main__.TextToSQLApp object at 0x000002A94E531C50>,) | kwargs={}
2025-05-27 23:01:22 | DEBUG    | __main__:setup_page_config:75 - Setting up Streamlit page configuration
2025-05-27 23:01:22 | INFO     | __main__:setup_page_config:88 - Page configuration set: {'page_title': 'Text-to-SQL Assistant', 'page_icon': 'üîç'}
2025-05-27 23:01:22 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.setup_page_config | duration=0.001s
2025-05-27 23:01:22 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.initialize_database | args=(<__main__.TextToSQLApp object at 0x000002A94E531C50>,) | kwargs={}
2025-05-27 23:01:22 | INFO     | __main__:initialize_database:94 - Initializing database connection
2025-05-27 23:01:22 | DEBUG    | __main__:initialize_database:97 - Database path: chinook.db
2025-05-27 23:01:22 | INFO     | __main__:initialize_database:105 - Database file size: 884736 bytes
2025-05-27 23:01:22 | INFO     | __main__:initialize_database:113 - Database connection test successful. Tables found: [(13,)]
2025-05-27 23:01:22 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.log_database_schema | args=(<__main__.TextToSQLApp object at 0x000002A94E531C50>,) | kwargs={}
2025-05-27 23:01:22 | INFO     | __main__:log_database_schema:132 - Database tables: [('albums',), ('sqlite_sequence',), ('artists',), ('customers',), ('employees',), ('genres',), ('invoices',), ('invoice_items',), ('media_types',), ('playlists',), ('playlist_track',), ('tracks',), ('sqlite_stat1',)]
2025-05-27 23:01:22 | DEBUG    | __main__:log_database_schema:140 - Schema for table albums: [(0, 'AlbumId', 'INTEGER', 1, None, 1), (1, 'Title', 'NVARCHAR(160)', 1, None, 0), (2, 'ArtistId', 'INTEGER', 1, None, 0)]
2025-05-27 23:01:22 | DEBUG    | __main__:log_database_schema:140 - Schema for table sqlite_sequence: [(0, 'name', '', 0, None, 0), (1, 'seq', '', 0, None, 0)]
2025-05-27 23:01:22 | DEBUG    | __main__:log_database_schema:140 - Schema for table artists: [(0, 'ArtistId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(120)', 0, None, 0)]
2025-05-27 23:01:22 | DEBUG    | __main__:log_database_schema:140 - Schema for table customers: [(0, 'CustomerId', 'INTEGER', 1, None, 1), (1, 'FirstName', 'NVARCHAR(40)', 1, None, 0), (2, 'LastName', 'NVARCHAR(20)', 1, None, 0), (3, 'Company', 'NVARCHAR(80)', 0, None, 0), (4, 'Address', 'NVARCHAR(70)', 0, None, 0), (5, 'City', 'NVARCHAR(40)', 0, None, 0), (6, 'State', 'NVARCHAR(40)', 0, None, 0), (7, 'Country', 'NVARCHAR(40)', 0, None, 0), (8, 'PostalCode', 'NVARCHAR(10)', 0, None, 0), (9, 'Phone', 'NVARCHAR(24)', 0, None, 0), (10, 'Fax', 'NVARCHAR(24)', 0, None, 0), (11, 'Email', 'NVARCHAR(60)', 1, None, 0), (12, 'SupportRepId', 'INTEGER', 0, None, 0)]
2025-05-27 23:01:22 | DEBUG    | __main__:log_database_schema:140 - Schema for table employees: [(0, 'EmployeeId', 'INTEGER', 1, None, 1), (1, 'LastName', 'NVARCHAR(20)', 1, None, 0), (2, 'FirstName', 'NVARCHAR(20)', 1, None, 0), (3, 'Title', 'NVARCHAR(30)', 0, None, 0), (4, 'ReportsTo', 'INTEGER', 0, None, 0), (5, 'BirthDate', 'DATETIME', 0, None, 0), (6, 'HireDate', 'DATETIME', 0, None, 0), (7, 'Address', 'NVARCHAR(70)', 0, None, 0), (8, 'City', 'NVARCHAR(40)', 0, None, 0), (9, 'State', 'NVARCHAR(40)', 0, None, 0), (10, 'Country', 'NVARCHAR(40)', 0, None, 0), (11, 'PostalCode', 'NVARCHAR(10)', 0, None, 0), (12, 'Phone', 'NVARCHAR(24)', 0, None, 0), (13, 'Fax', 'NVARCHAR(24)', 0, None, 0), (14, 'Email', 'NVARCHAR(60)', 0, None, 0)]
2025-05-27 23:01:22 | DEBUG    | __main__:log_database_schema:140 - Schema for table genres: [(0, 'GenreId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(120)', 0, None, 0)]
2025-05-27 23:01:22 | DEBUG    | __main__:log_database_schema:140 - Schema for table invoices: [(0, 'InvoiceId', 'INTEGER', 1, None, 1), (1, 'CustomerId', 'INTEGER', 1, None, 0), (2, 'InvoiceDate', 'DATETIME', 1, None, 0), (3, 'BillingAddress', 'NVARCHAR(70)', 0, None, 0), (4, 'BillingCity', 'NVARCHAR(40)', 0, None, 0), (5, 'BillingState', 'NVARCHAR(40)', 0, None, 0), (6, 'BillingCountry', 'NVARCHAR(40)', 0, None, 0), (7, 'BillingPostalCode', 'NVARCHAR(10)', 0, None, 0), (8, 'Total', 'NUMERIC(10,2)', 1, None, 0)]
2025-05-27 23:01:22 | DEBUG    | __main__:log_database_schema:140 - Schema for table invoice_items: [(0, 'InvoiceLineId', 'INTEGER', 1, None, 1), (1, 'InvoiceId', 'INTEGER', 1, None, 0), (2, 'TrackId', 'INTEGER', 1, None, 0), (3, 'UnitPrice', 'NUMERIC(10,2)', 1, None, 0), (4, 'Quantity', 'INTEGER', 1, None, 0)]
2025-05-27 23:01:22 | DEBUG    | __main__:log_database_schema:140 - Schema for table media_types: [(0, 'MediaTypeId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(120)', 0, None, 0)]
2025-05-27 23:01:22 | DEBUG    | __main__:log_database_schema:140 - Schema for table playlists: [(0, 'PlaylistId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(120)', 0, None, 0)]
2025-05-27 23:01:22 | DEBUG    | __main__:log_database_schema:140 - Schema for table playlist_track: [(0, 'PlaylistId', 'INTEGER', 1, None, 1), (1, 'TrackId', 'INTEGER', 1, None, 2)]
2025-05-27 23:01:22 | DEBUG    | __main__:log_database_schema:140 - Schema for table tracks: [(0, 'TrackId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(200)', 1, None, 0), (2, 'AlbumId', 'INTEGER', 0, None, 0), (3, 'MediaTypeId', 'INTEGER', 1, None, 0), (4, 'GenreId', 'INTEGER', 0, None, 0), (5, 'Composer', 'NVARCHAR(220)', 0, None, 0), (6, 'Milliseconds', 'INTEGER', 1, None, 0), (7, 'Bytes', 'INTEGER', 0, None, 0), (8, 'UnitPrice', 'NUMERIC(10,2)', 1, None, 0)]
2025-05-27 23:01:22 | DEBUG    | __main__:log_database_schema:140 - Schema for table sqlite_stat1: [(0, 'tbl', '', 0, None, 0), (1, 'idx', '', 0, None, 0), (2, 'stat', '', 0, None, 0)]
2025-05-27 23:01:22 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.log_database_schema | duration=0.017s
2025-05-27 23:01:22 | SUCCESS  | __main__:initialize_database:119 - Database initialization completed
2025-05-27 23:01:22 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.initialize_database | duration=0.159s
2025-05-27 23:01:22 | INFO     | decorators:wrapper:37 - PERFORMANCE: __main__.TextToSQLApp.initialize_database took 0.159s
2025-05-27 23:01:22 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.initialize_llm | args=(<__main__.TextToSQLApp object at 0x000002A94E531C50>,) | kwargs={}
2025-05-27 23:01:22 | INFO     | __main__:initialize_llm:151 - Initializing Groq LLM
2025-05-27 23:01:22 | DEBUG    | __main__:initialize_llm:161 - Using Groq API key: gsk_sBCV***Lnql
2025-05-27 23:01:26 | INFO     | __main__:initialize_llm:177 - LLM initialization successful in 4.035s
2025-05-27 23:01:26 | DEBUG    | __main__:initialize_llm:178 - LLM test response: content='OK' additional_kwargs={} response_metadata={'token_usage': {'completion_tokens': 2, 'prompt_tokens': 42, 'total_tokens': 44, 'completion_time': 0.007925556, 'prompt_time': 1.534357062, 'queue_time': 0.745384023, 'total_time': 1.542282618}, 'model_name': 'llama-3.3-70b-versatile', 'system_fingerprint': 'fp_2ddfbb0da0', 'finish_reason': 'stop', 'logprobs': None} id='run--54162168-0d9e-40d6-82c7-d591f9978abc-0' usage_metadata={'input_tokens': 42, 'output_tokens': 2, 'total_tokens': 44}
2025-05-27 23:01:26 | INFO     | __main__:initialize_llm:179 - Using model: llama-3.3-70b-versatile
2025-05-27 23:01:26 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.initialize_llm | duration=4.035s
2025-05-27 23:01:26 | INFO     | decorators:wrapper:37 - PERFORMANCE: __main__.TextToSQLApp.initialize_llm took 4.035s
2025-05-27 23:01:26 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.setup_sql_agent | args=(<__main__.TextToSQLApp object at 0x000002A94E531C50>,) | kwargs={}
2025-05-27 23:01:26 | INFO     | __main__:setup_sql_agent:190 - Setting up SQL agent
2025-05-27 23:01:26 | DEBUG    | __main__:setup_sql_agent:194 - SQL toolkit created successfully
2025-05-27 23:01:26 | DEBUG    | __main__:setup_sql_agent:224 - Creating SQL agent with custom prompt
2025-05-27 23:01:26 | SUCCESS  | __main__:setup_sql_agent:232 - SQL agent setup completed successfully
2025-05-27 23:01:26 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.setup_sql_agent | duration=0.022s
2025-05-27 23:01:26 | SUCCESS  | __main__:__init__:67 - Application initialized successfully
2025-05-27 23:01:26 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.run | args=(<__main__.TextToSQLApp object at 0x000002A94E531C50>,) | kwargs={}
2025-05-27 23:01:26 | INFO     | __main__:run:607 - Starting main application runner
2025-05-27 23:01:26 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.display_sample_queries | args=(<__main__.TextToSQLApp object at 0x000002A94E531C50>,) | kwargs={}
2025-05-27 23:01:26 | DEBUG    | __main__:display_sample_queries:554 - Displaying sample queries in sidebar
2025-05-27 23:01:26 | DEBUG    | __main__:display_sample_queries:571 - Displaying 10 sample queries
2025-05-27 23:01:26 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.display_sample_queries | duration=0.013s
2025-05-27 23:01:26 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.display_logs_sidebar | args=(<__main__.TextToSQLApp object at 0x000002A94E531C50>,) | kwargs={}
2025-05-27 23:01:26 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.display_logs_sidebar | duration=0.001s
2025-05-27 23:01:26 | INFO     | __main__:run:722 - Main application runner completed successfully
2025-05-27 23:01:26 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.run | duration=0.028s
2025-05-27 23:01:26 | INFO     | __main__:<module>:803 - Application session completed successfully
2025-05-27 23:01:26 | INFO     | __main__:<module>:811 - Application shutdown
2025-05-27 23:01:31 | INFO     | __main__:<module>:795 - ==================================================
2025-05-27 23:01:31 | INFO     | __main__:<module>:796 - Starting Text-to-SQL Application
2025-05-27 23:01:31 | INFO     | __main__:<module>:797 - Start time: 2025-05-27T23:01:31.123872
2025-05-27 23:01:31 | INFO     | __main__:<module>:798 - ==================================================
2025-05-27 23:01:31 | INFO     | __main__:__init__:58 - Initializing Text-to-SQL Application
2025-05-27 23:01:31 | INFO     | __main__:__init__:60 - Session ID: 20250527_230131
2025-05-27 23:01:31 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.setup_page_config | args=(<__main__.TextToSQLApp object at 0x000002A94BA4BB50>,) | kwargs={}
2025-05-27 23:01:31 | DEBUG    | __main__:setup_page_config:75 - Setting up Streamlit page configuration
2025-05-27 23:01:31 | INFO     | __main__:setup_page_config:88 - Page configuration set: {'page_title': 'Text-to-SQL Assistant', 'page_icon': 'üîç'}
2025-05-27 23:01:31 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.setup_page_config | duration=0.002s
2025-05-27 23:01:31 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.initialize_database | args=(<__main__.TextToSQLApp object at 0x000002A94BA4BB50>,) | kwargs={}
2025-05-27 23:01:31 | INFO     | __main__:initialize_database:94 - Initializing database connection
2025-05-27 23:01:31 | DEBUG    | __main__:initialize_database:97 - Database path: chinook.db
2025-05-27 23:01:31 | INFO     | __main__:initialize_database:105 - Database file size: 884736 bytes
2025-05-27 23:01:31 | INFO     | __main__:initialize_database:113 - Database connection test successful. Tables found: [(13,)]
2025-05-27 23:01:31 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.log_database_schema | args=(<__main__.TextToSQLApp object at 0x000002A94BA4BB50>,) | kwargs={}
2025-05-27 23:01:31 | INFO     | __main__:log_database_schema:132 - Database tables: [('albums',), ('sqlite_sequence',), ('artists',), ('customers',), ('employees',), ('genres',), ('invoices',), ('invoice_items',), ('media_types',), ('playlists',), ('playlist_track',), ('tracks',), ('sqlite_stat1',)]
2025-05-27 23:01:31 | DEBUG    | __main__:log_database_schema:140 - Schema for table albums: [(0, 'AlbumId', 'INTEGER', 1, None, 1), (1, 'Title', 'NVARCHAR(160)', 1, None, 0), (2, 'ArtistId', 'INTEGER', 1, None, 0)]
2025-05-27 23:01:31 | DEBUG    | __main__:log_database_schema:140 - Schema for table sqlite_sequence: [(0, 'name', '', 0, None, 0), (1, 'seq', '', 0, None, 0)]
2025-05-27 23:01:31 | DEBUG    | __main__:log_database_schema:140 - Schema for table artists: [(0, 'ArtistId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(120)', 0, None, 0)]
2025-05-27 23:01:31 | DEBUG    | __main__:log_database_schema:140 - Schema for table customers: [(0, 'CustomerId', 'INTEGER', 1, None, 1), (1, 'FirstName', 'NVARCHAR(40)', 1, None, 0), (2, 'LastName', 'NVARCHAR(20)', 1, None, 0), (3, 'Company', 'NVARCHAR(80)', 0, None, 0), (4, 'Address', 'NVARCHAR(70)', 0, None, 0), (5, 'City', 'NVARCHAR(40)', 0, None, 0), (6, 'State', 'NVARCHAR(40)', 0, None, 0), (7, 'Country', 'NVARCHAR(40)', 0, None, 0), (8, 'PostalCode', 'NVARCHAR(10)', 0, None, 0), (9, 'Phone', 'NVARCHAR(24)', 0, None, 0), (10, 'Fax', 'NVARCHAR(24)', 0, None, 0), (11, 'Email', 'NVARCHAR(60)', 1, None, 0), (12, 'SupportRepId', 'INTEGER', 0, None, 0)]
2025-05-27 23:01:31 | DEBUG    | __main__:log_database_schema:140 - Schema for table employees: [(0, 'EmployeeId', 'INTEGER', 1, None, 1), (1, 'LastName', 'NVARCHAR(20)', 1, None, 0), (2, 'FirstName', 'NVARCHAR(20)', 1, None, 0), (3, 'Title', 'NVARCHAR(30)', 0, None, 0), (4, 'ReportsTo', 'INTEGER', 0, None, 0), (5, 'BirthDate', 'DATETIME', 0, None, 0), (6, 'HireDate', 'DATETIME', 0, None, 0), (7, 'Address', 'NVARCHAR(70)', 0, None, 0), (8, 'City', 'NVARCHAR(40)', 0, None, 0), (9, 'State', 'NVARCHAR(40)', 0, None, 0), (10, 'Country', 'NVARCHAR(40)', 0, None, 0), (11, 'PostalCode', 'NVARCHAR(10)', 0, None, 0), (12, 'Phone', 'NVARCHAR(24)', 0, None, 0), (13, 'Fax', 'NVARCHAR(24)', 0, None, 0), (14, 'Email', 'NVARCHAR(60)', 0, None, 0)]
2025-05-27 23:01:31 | DEBUG    | __main__:log_database_schema:140 - Schema for table genres: [(0, 'GenreId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(120)', 0, None, 0)]
2025-05-27 23:01:31 | DEBUG    | __main__:log_database_schema:140 - Schema for table invoices: [(0, 'InvoiceId', 'INTEGER', 1, None, 1), (1, 'CustomerId', 'INTEGER', 1, None, 0), (2, 'InvoiceDate', 'DATETIME', 1, None, 0), (3, 'BillingAddress', 'NVARCHAR(70)', 0, None, 0), (4, 'BillingCity', 'NVARCHAR(40)', 0, None, 0), (5, 'BillingState', 'NVARCHAR(40)', 0, None, 0), (6, 'BillingCountry', 'NVARCHAR(40)', 0, None, 0), (7, 'BillingPostalCode', 'NVARCHAR(10)', 0, None, 0), (8, 'Total', 'NUMERIC(10,2)', 1, None, 0)]
2025-05-27 23:01:31 | DEBUG    | __main__:log_database_schema:140 - Schema for table invoice_items: [(0, 'InvoiceLineId', 'INTEGER', 1, None, 1), (1, 'InvoiceId', 'INTEGER', 1, None, 0), (2, 'TrackId', 'INTEGER', 1, None, 0), (3, 'UnitPrice', 'NUMERIC(10,2)', 1, None, 0), (4, 'Quantity', 'INTEGER', 1, None, 0)]
2025-05-27 23:01:31 | DEBUG    | __main__:log_database_schema:140 - Schema for table media_types: [(0, 'MediaTypeId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(120)', 0, None, 0)]
2025-05-27 23:01:31 | DEBUG    | __main__:log_database_schema:140 - Schema for table playlists: [(0, 'PlaylistId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(120)', 0, None, 0)]
2025-05-27 23:01:31 | DEBUG    | __main__:log_database_schema:140 - Schema for table playlist_track: [(0, 'PlaylistId', 'INTEGER', 1, None, 1), (1, 'TrackId', 'INTEGER', 1, None, 2)]
2025-05-27 23:01:31 | DEBUG    | __main__:log_database_schema:140 - Schema for table tracks: [(0, 'TrackId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(200)', 1, None, 0), (2, 'AlbumId', 'INTEGER', 0, None, 0), (3, 'MediaTypeId', 'INTEGER', 1, None, 0), (4, 'GenreId', 'INTEGER', 0, None, 0), (5, 'Composer', 'NVARCHAR(220)', 0, None, 0), (6, 'Milliseconds', 'INTEGER', 1, None, 0), (7, 'Bytes', 'INTEGER', 0, None, 0), (8, 'UnitPrice', 'NUMERIC(10,2)', 1, None, 0)]
2025-05-27 23:01:31 | DEBUG    | __main__:log_database_schema:140 - Schema for table sqlite_stat1: [(0, 'tbl', '', 0, None, 0), (1, 'idx', '', 0, None, 0), (2, 'stat', '', 0, None, 0)]
2025-05-27 23:01:31 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.log_database_schema | duration=0.022s
2025-05-27 23:01:31 | SUCCESS  | __main__:initialize_database:119 - Database initialization completed
2025-05-27 23:01:31 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.initialize_database | duration=0.066s
2025-05-27 23:01:31 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.initialize_llm | args=(<__main__.TextToSQLApp object at 0x000002A94BA4BB50>,) | kwargs={}
2025-05-27 23:01:31 | INFO     | __main__:initialize_llm:151 - Initializing Groq LLM
2025-05-27 23:01:31 | DEBUG    | __main__:initialize_llm:161 - Using Groq API key: gsk_sBCV***Lnql
2025-05-27 23:01:32 | INFO     | __main__:initialize_llm:177 - LLM initialization successful in 1.011s
2025-05-27 23:01:32 | DEBUG    | __main__:initialize_llm:178 - LLM test response: content='OK' additional_kwargs={} response_metadata={'token_usage': {'completion_tokens': 2, 'prompt_tokens': 42, 'total_tokens': 44, 'completion_time': 0.009649835, 'prompt_time': 0.002280298, 'queue_time': 0.055553662, 'total_time': 0.011930133}, 'model_name': 'llama-3.3-70b-versatile', 'system_fingerprint': 'fp_3f3b593e33', 'finish_reason': 'stop', 'logprobs': None} id='run--1bf6035c-98d5-4d7f-86a4-157b8d69b877-0' usage_metadata={'input_tokens': 42, 'output_tokens': 2, 'total_tokens': 44}
2025-05-27 23:01:32 | INFO     | __main__:initialize_llm:179 - Using model: llama-3.3-70b-versatile
2025-05-27 23:01:32 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.initialize_llm | duration=1.015s
2025-05-27 23:01:32 | INFO     | decorators:wrapper:37 - PERFORMANCE: __main__.TextToSQLApp.initialize_llm took 1.015s
2025-05-27 23:01:32 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.setup_sql_agent | args=(<__main__.TextToSQLApp object at 0x000002A94BA4BB50>,) | kwargs={}
2025-05-27 23:01:32 | INFO     | __main__:setup_sql_agent:190 - Setting up SQL agent
2025-05-27 23:01:32 | DEBUG    | __main__:setup_sql_agent:194 - SQL toolkit created successfully
2025-05-27 23:01:32 | DEBUG    | __main__:setup_sql_agent:224 - Creating SQL agent with custom prompt
2025-05-27 23:01:32 | SUCCESS  | __main__:setup_sql_agent:232 - SQL agent setup completed successfully
2025-05-27 23:01:32 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.setup_sql_agent | duration=0.000s
2025-05-27 23:01:32 | SUCCESS  | __main__:__init__:67 - Application initialized successfully
2025-05-27 23:01:32 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.run | args=(<__main__.TextToSQLApp object at 0x000002A94BA4BB50>,) | kwargs={}
2025-05-27 23:01:32 | INFO     | __main__:run:607 - Starting main application runner
2025-05-27 23:01:32 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.display_sample_queries | args=(<__main__.TextToSQLApp object at 0x000002A94BA4BB50>,) | kwargs={}
2025-05-27 23:01:32 | DEBUG    | __main__:display_sample_queries:554 - Displaying sample queries in sidebar
2025-05-27 23:01:32 | DEBUG    | __main__:display_sample_queries:571 - Displaying 10 sample queries
2025-05-27 23:01:32 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.display_sample_queries | duration=0.007s
2025-05-27 23:01:32 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.display_logs_sidebar | args=(<__main__.TextToSQLApp object at 0x000002A94BA4BB50>,) | kwargs={}
2025-05-27 23:01:32 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.display_logs_sidebar | duration=0.001s
2025-05-27 23:01:32 | INFO     | __main__:run:646 - Processing button clicked with query: 'list all rock genre albums'
2025-05-27 23:01:32 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.process_natural_language_query | args=(<__main__.TextToSQLApp object at 0x000002A94BA4BB50>, 'list all rock genre albums') | kwargs={}
2025-05-27 23:01:32 | INFO     | __main__:process_natural_language_query:450 - Processing natural language query: 'list all rock genre albums'
2025-05-27 23:01:32 | INFO     | __main__:process_natural_language_query:455 - Query ID: query_1748367092
2025-05-27 23:01:32 | INFO     | __main__:process_natural_language_query:459 - Step 1: Converting natural language to SQL using LLM (with capture)
2025-05-27 23:01:43 | INFO     | __main__:process_natural_language_query:468 - LLM processing completed in 11.524s
2025-05-27 23:01:43 | INFO     | __main__:process_natural_language_query:478 - Agent output: For Those About To Rock We Salute You, Balls to the Wall, Restless and Wild...
2025-05-27 23:01:43 | SUCCESS  | __main__:process_natural_language_query:485 - Captured SQL query: SELECT a.Title FROM albums a JOIN tracks t ON a.AlbumId = t.AlbumId JOIN genres g ON t.GenreId = g.GenreId WHERE g.Name = 'Rock' LIMIT 10...
2025-05-27 23:01:43 | INFO     | __main__:process_natural_language_query:488 - Step 2: Executing SQL query
2025-05-27 23:01:43 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.execute_query | args=(<__main__.TextToSQLApp object at 0x000002A94BA4BB50>, "SELECT a.Title FROM albums a JOIN tracks t ON a.AlbumId = t.AlbumId JOIN genres g ON t.GenreId = g.GenreId WHERE g.Name = 'Rock' LIMIT 10") | kwargs={}
2025-05-27 23:01:43 | INFO     | __main__:execute_query:393 - Executing SQL query: SELECT a.Title FROM albums a JOIN tracks t ON a.AlbumId = t.AlbumId JOIN genres g ON t.GenreId = g.G...
2025-05-27 23:01:43 | DEBUG    | __main__:execute_query:400 - Query has 1 lines
2025-05-27 23:01:43 | DEBUG    | __main__:execute_query:405 - Query complexity score: 1
2025-05-27 23:01:43 | DEBUG    | __main__:execute_query:408 - Database connection established for query execution
2025-05-27 23:01:43 | SUCCESS  | __main__:execute_query:415 - Query executed successfully in 0.014s
2025-05-27 23:01:43 | INFO     | __main__:execute_query:416 - Query returned 10 rows and 1 columns
2025-05-27 23:01:43 | DEBUG    | __main__:execute_query:419 - Column names: ['Title']
2025-05-27 23:01:43 | DEBUG    | __main__:execute_query:420 - Data types: {'Title': dtype('O')}
2025-05-27 23:01:43 | DEBUG    | __main__:execute_query:425 - Sample row: {'Title': 'For Those About To Rock We Salute You'}
2025-05-27 23:01:43 | INFO     | logger_config:log_performance:93 - PERFORMANCE: {"operation": "sql_query_execution", "duration_ms": 14.39, "timestamp": "2025-05-27T23:01:43.789792", "rows_returned": 10, "columns_returned": 1, "complexity_score": 1, "query_length": 137}
2025-05-27 23:01:43 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.execute_query | duration=0.019s
2025-05-27 23:01:43 | INFO     | __main__:process_natural_language_query:499 - Step 3: Determining chart generation requirements
2025-05-27 23:01:43 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.determine_chart_type | args=(<__main__.TextToSQLApp object at 0x000002A94BA4BB50>, 'list all rock genre albums',                                    Title
0  For Those About To Rock We Salute You
1                      Balls to t... | kwargs={}
2025-05-27 23:01:43 | INFO     | __main__:determine_chart_type:286 - Determining chart type for query: 'list all rock genre albums...' with data shape: (10, 1)
2025-05-27 23:01:43 | WARNING  | __main__:determine_chart_type:293 - Data has only 1 columns, need at least 2 for charting
2025-05-27 23:01:43 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.determine_chart_type | duration=0.001s
2025-05-27 23:01:43 | INFO     | __main__:process_natural_language_query:509 - Step 4: No chart generation required
2025-05-27 23:01:43 | SUCCESS  | __main__:process_natural_language_query:512 - Query processing completed successfully in 11.561s
2025-05-27 23:01:43 | INFO     | __main__:process_natural_language_query:513 - Results summary - Rows: 10, Columns: 1, Chart: None
2025-05-27 23:01:43 | INFO     | logger_config:log_performance:93 - PERFORMANCE: {"operation": "full_query_processing", "duration_ms": 11561.38, "timestamp": "2025-05-27T23:01:43.809196", "query_id": "query_1748367092", "user_query_length": 26, "sql_query_length": 137, "result_rows": 10, "result_columns": 1, "chart_type": "none", "llm_time": 11.523788928985596}
2025-05-27 23:01:43 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.process_natural_language_query | duration=11.564s
2025-05-27 23:01:43 | INFO     | decorators:wrapper:37 - PERFORMANCE: __main__.TextToSQLApp.process_natural_language_query took 11.564s
2025-05-27 23:01:43 | INFO     | __main__:run:650 - Natural language Query processing completed: SQL query : SELECT a.Title FROM albums a JOIN tracks t ON a.AlbumId = t.AlbumId JOIN genres g ON t.GenreId = g.GenreId WHERE g.Name = 'Rock' LIMIT 10, DataFrame:                                    Title
0  For Those About To Rock We Salute You
1                      Balls to the Wall
2                      Restless and Wild
3                      Restless and Wild
4                      Restless and Wild
5  For Those About To Rock We Salute You
6  For Those About To Rock We Salute You
7  For Those About To Rock We Salute You
8  For Those About To Rock We Salute You
9  For Those About To Rock We Salute You, Chart info: None, Chart type: None, Chart columns: None
2025-05-27 23:01:43 | INFO     | __main__:run:653 - Displaying successful results
2025-05-27 23:01:43 | DEBUG    | __main__:run:658 - SQL query displayed in UI
2025-05-27 23:01:43 | DEBUG    | __main__:run:669 - Results table displayed in UI
2025-05-27 23:01:43 | INFO     | __main__:run:722 - Main application runner completed successfully
2025-05-27 23:01:43 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.run | duration=11.619s
2025-05-27 23:01:43 | INFO     | decorators:wrapper:37 - PERFORMANCE: __main__.TextToSQLApp.run took 11.619s
2025-05-27 23:01:43 | INFO     | __main__:<module>:803 - Application session completed successfully
2025-05-27 23:01:43 | INFO     | __main__:<module>:811 - Application shutdown





2025-05-27 23:11:11 | INFO     | logger_config:setup_logger:65 - Logger initialized successfully
2025-05-27 23:11:11 | INFO     | __main__:<module>:799 - ==================================================
2025-05-27 23:11:11 | INFO     | __main__:<module>:800 - Starting Text-to-SQL Application
2025-05-27 23:11:11 | INFO     | __main__:<module>:801 - Start time: 2025-05-27T23:11:11.267947
2025-05-27 23:11:11 | INFO     | __main__:<module>:802 - ==================================================
2025-05-27 23:11:11 | INFO     | __main__:__init__:58 - Initializing Text-to-SQL Application
2025-05-27 23:11:11 | INFO     | __main__:__init__:60 - Session ID: 20250527_231111
2025-05-27 23:11:11 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.setup_page_config | args=(<__main__.TextToSQLApp object at 0x000002A94B8D1290>,) | kwargs={}
2025-05-27 23:11:11 | DEBUG    | __main__:setup_page_config:75 - Setting up Streamlit page configuration
2025-05-27 23:11:11 | INFO     | __main__:setup_page_config:88 - Page configuration set: {'page_title': 'Text-to-SQL Assistant', 'page_icon': 'üîç'}
2025-05-27 23:11:11 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.setup_page_config | duration=0.004s
2025-05-27 23:11:11 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.initialize_database | args=(<__main__.TextToSQLApp object at 0x000002A94B8D1290>,) | kwargs={}
2025-05-27 23:11:11 | INFO     | __main__:initialize_database:94 - Initializing database connection
2025-05-27 23:11:11 | DEBUG    | __main__:initialize_database:97 - Database path: chinook.db
2025-05-27 23:11:11 | INFO     | __main__:initialize_database:105 - Database file size: 884736 bytes
2025-05-27 23:11:11 | INFO     | __main__:initialize_database:113 - Database connection test successful. Tables found: [(13,)]
2025-05-27 23:11:11 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.log_database_schema | args=(<__main__.TextToSQLApp object at 0x000002A94B8D1290>,) | kwargs={}
2025-05-27 23:11:11 | INFO     | __main__:log_database_schema:132 - Database tables: [('albums',), ('sqlite_sequence',), ('artists',), ('customers',), ('employees',), ('genres',), ('invoices',), ('invoice_items',), ('media_types',), ('playlists',), ('playlist_track',), ('tracks',), ('sqlite_stat1',)]
2025-05-27 23:11:11 | DEBUG    | __main__:log_database_schema:140 - Schema for table albums: [(0, 'AlbumId', 'INTEGER', 1, None, 1), (1, 'Title', 'NVARCHAR(160)', 1, None, 0), (2, 'ArtistId', 'INTEGER', 1, None, 0)]
2025-05-27 23:11:11 | DEBUG    | __main__:log_database_schema:140 - Schema for table sqlite_sequence: [(0, 'name', '', 0, None, 0), (1, 'seq', '', 0, None, 0)]
2025-05-27 23:11:11 | DEBUG    | __main__:log_database_schema:140 - Schema for table artists: [(0, 'ArtistId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(120)', 0, None, 0)]
2025-05-27 23:11:11 | DEBUG    | __main__:log_database_schema:140 - Schema for table customers: [(0, 'CustomerId', 'INTEGER', 1, None, 1), (1, 'FirstName', 'NVARCHAR(40)', 1, None, 0), (2, 'LastName', 'NVARCHAR(20)', 1, None, 0), (3, 'Company', 'NVARCHAR(80)', 0, None, 0), (4, 'Address', 'NVARCHAR(70)', 0, None, 0), (5, 'City', 'NVARCHAR(40)', 0, None, 0), (6, 'State', 'NVARCHAR(40)', 0, None, 0), (7, 'Country', 'NVARCHAR(40)', 0, None, 0), (8, 'PostalCode', 'NVARCHAR(10)', 0, None, 0), (9, 'Phone', 'NVARCHAR(24)', 0, None, 0), (10, 'Fax', 'NVARCHAR(24)', 0, None, 0), (11, 'Email', 'NVARCHAR(60)', 1, None, 0), (12, 'SupportRepId', 'INTEGER', 0, None, 0)]
2025-05-27 23:11:11 | DEBUG    | __main__:log_database_schema:140 - Schema for table employees: [(0, 'EmployeeId', 'INTEGER', 1, None, 1), (1, 'LastName', 'NVARCHAR(20)', 1, None, 0), (2, 'FirstName', 'NVARCHAR(20)', 1, None, 0), (3, 'Title', 'NVARCHAR(30)', 0, None, 0), (4, 'ReportsTo', 'INTEGER', 0, None, 0), (5, 'BirthDate', 'DATETIME', 0, None, 0), (6, 'HireDate', 'DATETIME', 0, None, 0), (7, 'Address', 'NVARCHAR(70)', 0, None, 0), (8, 'City', 'NVARCHAR(40)', 0, None, 0), (9, 'State', 'NVARCHAR(40)', 0, None, 0), (10, 'Country', 'NVARCHAR(40)', 0, None, 0), (11, 'PostalCode', 'NVARCHAR(10)', 0, None, 0), (12, 'Phone', 'NVARCHAR(24)', 0, None, 0), (13, 'Fax', 'NVARCHAR(24)', 0, None, 0), (14, 'Email', 'NVARCHAR(60)', 0, None, 0)]
2025-05-27 23:11:11 | DEBUG    | __main__:log_database_schema:140 - Schema for table genres: [(0, 'GenreId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(120)', 0, None, 0)]
2025-05-27 23:11:11 | DEBUG    | __main__:log_database_schema:140 - Schema for table invoices: [(0, 'InvoiceId', 'INTEGER', 1, None, 1), (1, 'CustomerId', 'INTEGER', 1, None, 0), (2, 'InvoiceDate', 'DATETIME', 1, None, 0), (3, 'BillingAddress', 'NVARCHAR(70)', 0, None, 0), (4, 'BillingCity', 'NVARCHAR(40)', 0, None, 0), (5, 'BillingState', 'NVARCHAR(40)', 0, None, 0), (6, 'BillingCountry', 'NVARCHAR(40)', 0, None, 0), (7, 'BillingPostalCode', 'NVARCHAR(10)', 0, None, 0), (8, 'Total', 'NUMERIC(10,2)', 1, None, 0)]
2025-05-27 23:11:11 | DEBUG    | __main__:log_database_schema:140 - Schema for table invoice_items: [(0, 'InvoiceLineId', 'INTEGER', 1, None, 1), (1, 'InvoiceId', 'INTEGER', 1, None, 0), (2, 'TrackId', 'INTEGER', 1, None, 0), (3, 'UnitPrice', 'NUMERIC(10,2)', 1, None, 0), (4, 'Quantity', 'INTEGER', 1, None, 0)]
2025-05-27 23:11:11 | DEBUG    | __main__:log_database_schema:140 - Schema for table media_types: [(0, 'MediaTypeId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(120)', 0, None, 0)]
2025-05-27 23:11:11 | DEBUG    | __main__:log_database_schema:140 - Schema for table playlists: [(0, 'PlaylistId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(120)', 0, None, 0)]
2025-05-27 23:11:11 | DEBUG    | __main__:log_database_schema:140 - Schema for table playlist_track: [(0, 'PlaylistId', 'INTEGER', 1, None, 1), (1, 'TrackId', 'INTEGER', 1, None, 2)]
2025-05-27 23:11:11 | DEBUG    | __main__:log_database_schema:140 - Schema for table tracks: [(0, 'TrackId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(200)', 1, None, 0), (2, 'AlbumId', 'INTEGER', 0, None, 0), (3, 'MediaTypeId', 'INTEGER', 1, None, 0), (4, 'GenreId', 'INTEGER', 0, None, 0), (5, 'Composer', 'NVARCHAR(220)', 0, None, 0), (6, 'Milliseconds', 'INTEGER', 1, None, 0), (7, 'Bytes', 'INTEGER', 0, None, 0), (8, 'UnitPrice', 'NUMERIC(10,2)', 1, None, 0)]
2025-05-27 23:11:11 | DEBUG    | __main__:log_database_schema:140 - Schema for table sqlite_stat1: [(0, 'tbl', '', 0, None, 0), (1, 'idx', '', 0, None, 0), (2, 'stat', '', 0, None, 0)]
2025-05-27 23:11:11 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.log_database_schema | duration=0.017s
2025-05-27 23:11:11 | SUCCESS  | __main__:initialize_database:119 - Database initialization completed
2025-05-27 23:11:11 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.initialize_database | duration=0.262s
2025-05-27 23:11:11 | INFO     | decorators:wrapper:37 - PERFORMANCE: __main__.TextToSQLApp.initialize_database took 0.262s
2025-05-27 23:11:11 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.initialize_llm | args=(<__main__.TextToSQLApp object at 0x000002A94B8D1290>,) | kwargs={}
2025-05-27 23:11:11 | INFO     | __main__:initialize_llm:151 - Initializing Groq LLM
2025-05-27 23:11:11 | DEBUG    | __main__:initialize_llm:161 - Using Groq API key: gsk_sBCV***Lnql
2025-05-27 23:11:12 | INFO     | __main__:initialize_llm:177 - LLM initialization successful in 1.371s
2025-05-27 23:11:12 | DEBUG    | __main__:initialize_llm:178 - LLM test response: content='OK' additional_kwargs={} response_metadata={'token_usage': {'completion_tokens': 2, 'prompt_tokens': 42, 'total_tokens': 44, 'completion_time': 0.009502114, 'prompt_time': 0.002269092, 'queue_time': 0.056004758, 'total_time': 0.011771206}, 'model_name': 'llama-3.3-70b-versatile', 'system_fingerprint': 'fp_6507bcfb6f', 'finish_reason': 'stop', 'logprobs': None} id='run--c5ee68f4-3583-459d-8523-4f39e3cc1143-0' usage_metadata={'input_tokens': 42, 'output_tokens': 2, 'total_tokens': 44}
2025-05-27 23:11:12 | INFO     | __main__:initialize_llm:179 - Using model: llama-3.3-70b-versatile
2025-05-27 23:11:12 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.initialize_llm | duration=1.372s
2025-05-27 23:11:12 | INFO     | decorators:wrapper:37 - PERFORMANCE: __main__.TextToSQLApp.initialize_llm took 1.372s
2025-05-27 23:11:12 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.setup_sql_agent | args=(<__main__.TextToSQLApp object at 0x000002A94B8D1290>,) | kwargs={}
2025-05-27 23:11:12 | INFO     | __main__:setup_sql_agent:190 - Setting up SQL agent
2025-05-27 23:11:12 | DEBUG    | __main__:setup_sql_agent:194 - SQL toolkit created successfully
2025-05-27 23:11:12 | DEBUG    | __main__:setup_sql_agent:227 - Creating SQL agent with custom prompt
2025-05-27 23:11:12 | ERROR    | decorators:wrapper:59 - SQL agent setup failed: "'tools', 'tool_names', 'agent_scratchpad'"
2025-05-27 23:11:12 | ERROR    | decorators:wrapper:43 - ERROR: __main__.TextToSQLApp.setup_sql_agent failed after 0.009s | error="'tools', 'tool_names', 'agent_scratchpad'"
2025-05-27 23:11:12 | CRITICAL | __main__:__init__:69 - Application initialization failed: "'tools', 'tool_names', 'agent_scratchpad'"
2025-05-27 23:11:12 | CRITICAL | __main__:<module>:810 - Application failed to start: "'tools', 'tool_names', 'agent_scratchpad'"
2025-05-27 23:11:12 | INFO     | __main__:<module>:815 - Application shutdown
2025-05-27 23:12:58 | INFO     | logger_config:setup_logger:65 - Logger initialized successfully
2025-05-27 23:12:58 | INFO     | __main__:<module>:798 - ==================================================
2025-05-27 23:12:58 | INFO     | __main__:<module>:799 - Starting Text-to-SQL Application
2025-05-27 23:12:58 | INFO     | __main__:<module>:800 - Start time: 2025-05-27T23:12:58.245624
2025-05-27 23:12:58 | INFO     | __main__:<module>:801 - ==================================================
2025-05-27 23:12:58 | INFO     | __main__:__init__:58 - Initializing Text-to-SQL Application
2025-05-27 23:12:58 | INFO     | __main__:__init__:60 - Session ID: 20250527_231258
2025-05-27 23:12:58 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.setup_page_config | args=(<__main__.TextToSQLApp object at 0x000002A94E1D89D0>,) | kwargs={}
2025-05-27 23:12:58 | DEBUG    | __main__:setup_page_config:75 - Setting up Streamlit page configuration
2025-05-27 23:12:58 | INFO     | __main__:setup_page_config:88 - Page configuration set: {'page_title': 'Text-to-SQL Assistant', 'page_icon': 'üîç'}
2025-05-27 23:12:58 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.setup_page_config | duration=0.002s
2025-05-27 23:12:58 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.initialize_database | args=(<__main__.TextToSQLApp object at 0x000002A94E1D89D0>,) | kwargs={}
2025-05-27 23:12:58 | INFO     | __main__:initialize_database:94 - Initializing database connection
2025-05-27 23:12:58 | DEBUG    | __main__:initialize_database:97 - Database path: chinook.db
2025-05-27 23:12:58 | INFO     | __main__:initialize_database:105 - Database file size: 884736 bytes
2025-05-27 23:12:58 | INFO     | __main__:initialize_database:113 - Database connection test successful. Tables found: [(13,)]
2025-05-27 23:12:58 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.log_database_schema | args=(<__main__.TextToSQLApp object at 0x000002A94E1D89D0>,) | kwargs={}
2025-05-27 23:12:58 | INFO     | __main__:log_database_schema:132 - Database tables: [('albums',), ('sqlite_sequence',), ('artists',), ('customers',), ('employees',), ('genres',), ('invoices',), ('invoice_items',), ('media_types',), ('playlists',), ('playlist_track',), ('tracks',), ('sqlite_stat1',)]
2025-05-27 23:12:58 | DEBUG    | __main__:log_database_schema:140 - Schema for table albums: [(0, 'AlbumId', 'INTEGER', 1, None, 1), (1, 'Title', 'NVARCHAR(160)', 1, None, 0), (2, 'ArtistId', 'INTEGER', 1, None, 0)]
2025-05-27 23:12:58 | DEBUG    | __main__:log_database_schema:140 - Schema for table sqlite_sequence: [(0, 'name', '', 0, None, 0), (1, 'seq', '', 0, None, 0)]
2025-05-27 23:12:58 | DEBUG    | __main__:log_database_schema:140 - Schema for table artists: [(0, 'ArtistId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(120)', 0, None, 0)]
2025-05-27 23:12:58 | DEBUG    | __main__:log_database_schema:140 - Schema for table customers: [(0, 'CustomerId', 'INTEGER', 1, None, 1), (1, 'FirstName', 'NVARCHAR(40)', 1, None, 0), (2, 'LastName', 'NVARCHAR(20)', 1, None, 0), (3, 'Company', 'NVARCHAR(80)', 0, None, 0), (4, 'Address', 'NVARCHAR(70)', 0, None, 0), (5, 'City', 'NVARCHAR(40)', 0, None, 0), (6, 'State', 'NVARCHAR(40)', 0, None, 0), (7, 'Country', 'NVARCHAR(40)', 0, None, 0), (8, 'PostalCode', 'NVARCHAR(10)', 0, None, 0), (9, 'Phone', 'NVARCHAR(24)', 0, None, 0), (10, 'Fax', 'NVARCHAR(24)', 0, None, 0), (11, 'Email', 'NVARCHAR(60)', 1, None, 0), (12, 'SupportRepId', 'INTEGER', 0, None, 0)]
2025-05-27 23:12:58 | DEBUG    | __main__:log_database_schema:140 - Schema for table employees: [(0, 'EmployeeId', 'INTEGER', 1, None, 1), (1, 'LastName', 'NVARCHAR(20)', 1, None, 0), (2, 'FirstName', 'NVARCHAR(20)', 1, None, 0), (3, 'Title', 'NVARCHAR(30)', 0, None, 0), (4, 'ReportsTo', 'INTEGER', 0, None, 0), (5, 'BirthDate', 'DATETIME', 0, None, 0), (6, 'HireDate', 'DATETIME', 0, None, 0), (7, 'Address', 'NVARCHAR(70)', 0, None, 0), (8, 'City', 'NVARCHAR(40)', 0, None, 0), (9, 'State', 'NVARCHAR(40)', 0, None, 0), (10, 'Country', 'NVARCHAR(40)', 0, None, 0), (11, 'PostalCode', 'NVARCHAR(10)', 0, None, 0), (12, 'Phone', 'NVARCHAR(24)', 0, None, 0), (13, 'Fax', 'NVARCHAR(24)', 0, None, 0), (14, 'Email', 'NVARCHAR(60)', 0, None, 0)]
2025-05-27 23:12:58 | DEBUG    | __main__:log_database_schema:140 - Schema for table genres: [(0, 'GenreId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(120)', 0, None, 0)]
2025-05-27 23:12:58 | DEBUG    | __main__:log_database_schema:140 - Schema for table invoices: [(0, 'InvoiceId', 'INTEGER', 1, None, 1), (1, 'CustomerId', 'INTEGER', 1, None, 0), (2, 'InvoiceDate', 'DATETIME', 1, None, 0), (3, 'BillingAddress', 'NVARCHAR(70)', 0, None, 0), (4, 'BillingCity', 'NVARCHAR(40)', 0, None, 0), (5, 'BillingState', 'NVARCHAR(40)', 0, None, 0), (6, 'BillingCountry', 'NVARCHAR(40)', 0, None, 0), (7, 'BillingPostalCode', 'NVARCHAR(10)', 0, None, 0), (8, 'Total', 'NUMERIC(10,2)', 1, None, 0)]
2025-05-27 23:12:58 | DEBUG    | __main__:log_database_schema:140 - Schema for table invoice_items: [(0, 'InvoiceLineId', 'INTEGER', 1, None, 1), (1, 'InvoiceId', 'INTEGER', 1, None, 0), (2, 'TrackId', 'INTEGER', 1, None, 0), (3, 'UnitPrice', 'NUMERIC(10,2)', 1, None, 0), (4, 'Quantity', 'INTEGER', 1, None, 0)]
2025-05-27 23:12:58 | DEBUG    | __main__:log_database_schema:140 - Schema for table media_types: [(0, 'MediaTypeId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(120)', 0, None, 0)]
2025-05-27 23:12:58 | DEBUG    | __main__:log_database_schema:140 - Schema for table playlists: [(0, 'PlaylistId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(120)', 0, None, 0)]
2025-05-27 23:12:58 | DEBUG    | __main__:log_database_schema:140 - Schema for table playlist_track: [(0, 'PlaylistId', 'INTEGER', 1, None, 1), (1, 'TrackId', 'INTEGER', 1, None, 2)]
2025-05-27 23:12:58 | DEBUG    | __main__:log_database_schema:140 - Schema for table tracks: [(0, 'TrackId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(200)', 1, None, 0), (2, 'AlbumId', 'INTEGER', 0, None, 0), (3, 'MediaTypeId', 'INTEGER', 1, None, 0), (4, 'GenreId', 'INTEGER', 0, None, 0), (5, 'Composer', 'NVARCHAR(220)', 0, None, 0), (6, 'Milliseconds', 'INTEGER', 1, None, 0), (7, 'Bytes', 'INTEGER', 0, None, 0), (8, 'UnitPrice', 'NUMERIC(10,2)', 1, None, 0)]
2025-05-27 23:12:58 | DEBUG    | __main__:log_database_schema:140 - Schema for table sqlite_stat1: [(0, 'tbl', '', 0, None, 0), (1, 'idx', '', 0, None, 0), (2, 'stat', '', 0, None, 0)]
2025-05-27 23:12:58 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.log_database_schema | duration=0.017s
2025-05-27 23:12:58 | SUCCESS  | __main__:initialize_database:119 - Database initialization completed
2025-05-27 23:12:58 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.initialize_database | duration=0.094s
2025-05-27 23:12:58 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.initialize_llm | args=(<__main__.TextToSQLApp object at 0x000002A94E1D89D0>,) | kwargs={}
2025-05-27 23:12:58 | INFO     | __main__:initialize_llm:151 - Initializing Groq LLM
2025-05-27 23:12:58 | DEBUG    | __main__:initialize_llm:161 - Using Groq API key: gsk_sBCV***Lnql
2025-05-27 23:12:59 | INFO     | __main__:initialize_llm:177 - LLM initialization successful in 1.650s
2025-05-27 23:13:00 | DEBUG    | __main__:initialize_llm:178 - LLM test response: content='OK' additional_kwargs={} response_metadata={'token_usage': {'completion_tokens': 2, 'prompt_tokens': 42, 'total_tokens': 44, 'completion_time': 0.00968214, 'prompt_time': 0.001981749, 'queue_time': 0.053526071, 'total_time': 0.011663889}, 'model_name': 'llama-3.3-70b-versatile', 'system_fingerprint': 'fp_2ddfbb0da0', 'finish_reason': 'stop', 'logprobs': None} id='run--06720dbd-a861-40d8-a0bd-72c7bd2ee52b-0' usage_metadata={'input_tokens': 42, 'output_tokens': 2, 'total_tokens': 44}
2025-05-27 23:13:00 | INFO     | __main__:initialize_llm:179 - Using model: llama-3.3-70b-versatile
2025-05-27 23:13:00 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.initialize_llm | duration=1.654s
2025-05-27 23:13:00 | INFO     | decorators:wrapper:37 - PERFORMANCE: __main__.TextToSQLApp.initialize_llm took 1.654s
2025-05-27 23:13:00 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.setup_sql_agent | args=(<__main__.TextToSQLApp object at 0x000002A94E1D89D0>,) | kwargs={}
2025-05-27 23:13:00 | INFO     | __main__:setup_sql_agent:190 - Setting up SQL agent
2025-05-27 23:13:00 | DEBUG    | __main__:setup_sql_agent:194 - SQL toolkit created successfully
2025-05-27 23:13:00 | DEBUG    | __main__:setup_sql_agent:227 - Creating SQL agent with custom prompt
2025-05-27 23:13:00 | SUCCESS  | __main__:setup_sql_agent:235 - SQL agent setup completed successfully
2025-05-27 23:13:00 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.setup_sql_agent | duration=0.005s
2025-05-27 23:13:00 | SUCCESS  | __main__:__init__:67 - Application initialized successfully
2025-05-27 23:13:00 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.run | args=(<__main__.TextToSQLApp object at 0x000002A94E1D89D0>,) | kwargs={}
2025-05-27 23:13:00 | INFO     | __main__:run:610 - Starting main application runner
2025-05-27 23:13:00 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.display_sample_queries | args=(<__main__.TextToSQLApp object at 0x000002A94E1D89D0>,) | kwargs={}
2025-05-27 23:13:00 | DEBUG    | __main__:display_sample_queries:557 - Displaying sample queries in sidebar
2025-05-27 23:13:00 | DEBUG    | __main__:display_sample_queries:574 - Displaying 10 sample queries
2025-05-27 23:13:00 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.display_sample_queries | duration=0.015s
2025-05-27 23:13:00 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.display_logs_sidebar | args=(<__main__.TextToSQLApp object at 0x000002A94E1D89D0>,) | kwargs={}
2025-05-27 23:13:00 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.display_logs_sidebar | duration=0.002s
2025-05-27 23:13:00 | INFO     | __main__:run:725 - Main application runner completed successfully
2025-05-27 23:13:00 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.run | duration=0.033s
2025-05-27 23:13:00 | INFO     | __main__:<module>:806 - Application session completed successfully
2025-05-27 23:13:00 | INFO     | __main__:<module>:814 - Application shutdown
2025-05-27 23:15:45 | INFO     | logger_config:setup_logger:65 - Logger initialized successfully
2025-05-27 23:15:45 | INFO     | __main__:<module>:799 - ==================================================
2025-05-27 23:15:45 | INFO     | __main__:<module>:800 - Starting Text-to-SQL Application
2025-05-27 23:15:45 | INFO     | __main__:<module>:801 - Start time: 2025-05-27T23:15:45.842188
2025-05-27 23:15:45 | INFO     | __main__:<module>:802 - ==================================================
2025-05-27 23:15:45 | INFO     | __main__:__init__:58 - Initializing Text-to-SQL Application
2025-05-27 23:15:45 | INFO     | __main__:__init__:60 - Session ID: 20250527_231545
2025-05-27 23:15:45 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.setup_page_config | args=(<__main__.TextToSQLApp object at 0x000002A94C300AD0>,) | kwargs={}
2025-05-27 23:15:45 | DEBUG    | __main__:setup_page_config:75 - Setting up Streamlit page configuration
2025-05-27 23:15:45 | INFO     | __main__:setup_page_config:88 - Page configuration set: {'page_title': 'Text-to-SQL Assistant', 'page_icon': 'üîç'}
2025-05-27 23:15:45 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.setup_page_config | duration=0.004s
2025-05-27 23:15:45 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.initialize_database | args=(<__main__.TextToSQLApp object at 0x000002A94C300AD0>,) | kwargs={}
2025-05-27 23:15:45 | INFO     | __main__:initialize_database:94 - Initializing database connection
2025-05-27 23:15:45 | DEBUG    | __main__:initialize_database:97 - Database path: chinook.db
2025-05-27 23:15:45 | INFO     | __main__:initialize_database:105 - Database file size: 884736 bytes
2025-05-27 23:15:45 | INFO     | __main__:initialize_database:113 - Database connection test successful. Tables found: [(13,)]
2025-05-27 23:15:46 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.log_database_schema | args=(<__main__.TextToSQLApp object at 0x000002A94C300AD0>,) | kwargs={}
2025-05-27 23:15:46 | INFO     | __main__:log_database_schema:132 - Database tables: [('albums',), ('sqlite_sequence',), ('artists',), ('customers',), ('employees',), ('genres',), ('invoices',), ('invoice_items',), ('media_types',), ('playlists',), ('playlist_track',), ('tracks',), ('sqlite_stat1',)]
2025-05-27 23:15:46 | DEBUG    | __main__:log_database_schema:140 - Schema for table albums: [(0, 'AlbumId', 'INTEGER', 1, None, 1), (1, 'Title', 'NVARCHAR(160)', 1, None, 0), (2, 'ArtistId', 'INTEGER', 1, None, 0)]
2025-05-27 23:15:46 | DEBUG    | __main__:log_database_schema:140 - Schema for table sqlite_sequence: [(0, 'name', '', 0, None, 0), (1, 'seq', '', 0, None, 0)]
2025-05-27 23:15:46 | DEBUG    | __main__:log_database_schema:140 - Schema for table artists: [(0, 'ArtistId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(120)', 0, None, 0)]
2025-05-27 23:15:46 | DEBUG    | __main__:log_database_schema:140 - Schema for table customers: [(0, 'CustomerId', 'INTEGER', 1, None, 1), (1, 'FirstName', 'NVARCHAR(40)', 1, None, 0), (2, 'LastName', 'NVARCHAR(20)', 1, None, 0), (3, 'Company', 'NVARCHAR(80)', 0, None, 0), (4, 'Address', 'NVARCHAR(70)', 0, None, 0), (5, 'City', 'NVARCHAR(40)', 0, None, 0), (6, 'State', 'NVARCHAR(40)', 0, None, 0), (7, 'Country', 'NVARCHAR(40)', 0, None, 0), (8, 'PostalCode', 'NVARCHAR(10)', 0, None, 0), (9, 'Phone', 'NVARCHAR(24)', 0, None, 0), (10, 'Fax', 'NVARCHAR(24)', 0, None, 0), (11, 'Email', 'NVARCHAR(60)', 1, None, 0), (12, 'SupportRepId', 'INTEGER', 0, None, 0)]
2025-05-27 23:15:46 | DEBUG    | __main__:log_database_schema:140 - Schema for table employees: [(0, 'EmployeeId', 'INTEGER', 1, None, 1), (1, 'LastName', 'NVARCHAR(20)', 1, None, 0), (2, 'FirstName', 'NVARCHAR(20)', 1, None, 0), (3, 'Title', 'NVARCHAR(30)', 0, None, 0), (4, 'ReportsTo', 'INTEGER', 0, None, 0), (5, 'BirthDate', 'DATETIME', 0, None, 0), (6, 'HireDate', 'DATETIME', 0, None, 0), (7, 'Address', 'NVARCHAR(70)', 0, None, 0), (8, 'City', 'NVARCHAR(40)', 0, None, 0), (9, 'State', 'NVARCHAR(40)', 0, None, 0), (10, 'Country', 'NVARCHAR(40)', 0, None, 0), (11, 'PostalCode', 'NVARCHAR(10)', 0, None, 0), (12, 'Phone', 'NVARCHAR(24)', 0, None, 0), (13, 'Fax', 'NVARCHAR(24)', 0, None, 0), (14, 'Email', 'NVARCHAR(60)', 0, None, 0)]
2025-05-27 23:15:46 | DEBUG    | __main__:log_database_schema:140 - Schema for table genres: [(0, 'GenreId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(120)', 0, None, 0)]
2025-05-27 23:15:46 | DEBUG    | __main__:log_database_schema:140 - Schema for table invoices: [(0, 'InvoiceId', 'INTEGER', 1, None, 1), (1, 'CustomerId', 'INTEGER', 1, None, 0), (2, 'InvoiceDate', 'DATETIME', 1, None, 0), (3, 'BillingAddress', 'NVARCHAR(70)', 0, None, 0), (4, 'BillingCity', 'NVARCHAR(40)', 0, None, 0), (5, 'BillingState', 'NVARCHAR(40)', 0, None, 0), (6, 'BillingCountry', 'NVARCHAR(40)', 0, None, 0), (7, 'BillingPostalCode', 'NVARCHAR(10)', 0, None, 0), (8, 'Total', 'NUMERIC(10,2)', 1, None, 0)]
2025-05-27 23:15:46 | DEBUG    | __main__:log_database_schema:140 - Schema for table invoice_items: [(0, 'InvoiceLineId', 'INTEGER', 1, None, 1), (1, 'InvoiceId', 'INTEGER', 1, None, 0), (2, 'TrackId', 'INTEGER', 1, None, 0), (3, 'UnitPrice', 'NUMERIC(10,2)', 1, None, 0), (4, 'Quantity', 'INTEGER', 1, None, 0)]
2025-05-27 23:15:46 | DEBUG    | __main__:log_database_schema:140 - Schema for table media_types: [(0, 'MediaTypeId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(120)', 0, None, 0)]
2025-05-27 23:15:46 | DEBUG    | __main__:log_database_schema:140 - Schema for table playlists: [(0, 'PlaylistId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(120)', 0, None, 0)]
2025-05-27 23:15:46 | DEBUG    | __main__:log_database_schema:140 - Schema for table playlist_track: [(0, 'PlaylistId', 'INTEGER', 1, None, 1), (1, 'TrackId', 'INTEGER', 1, None, 2)]
2025-05-27 23:15:46 | DEBUG    | __main__:log_database_schema:140 - Schema for table tracks: [(0, 'TrackId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(200)', 1, None, 0), (2, 'AlbumId', 'INTEGER', 0, None, 0), (3, 'MediaTypeId', 'INTEGER', 1, None, 0), (4, 'GenreId', 'INTEGER', 0, None, 0), (5, 'Composer', 'NVARCHAR(220)', 0, None, 0), (6, 'Milliseconds', 'INTEGER', 1, None, 0), (7, 'Bytes', 'INTEGER', 0, None, 0), (8, 'UnitPrice', 'NUMERIC(10,2)', 1, None, 0)]
2025-05-27 23:15:46 | DEBUG    | __main__:log_database_schema:140 - Schema for table sqlite_stat1: [(0, 'tbl', '', 0, None, 0), (1, 'idx', '', 0, None, 0), (2, 'stat', '', 0, None, 0)]
2025-05-27 23:15:46 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.log_database_schema | duration=0.030s
2025-05-27 23:15:46 | SUCCESS  | __main__:initialize_database:119 - Database initialization completed
2025-05-27 23:15:46 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.initialize_database | duration=0.192s
2025-05-27 23:15:46 | INFO     | decorators:wrapper:37 - PERFORMANCE: __main__.TextToSQLApp.initialize_database took 0.192s
2025-05-27 23:15:46 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.initialize_llm | args=(<__main__.TextToSQLApp object at 0x000002A94C300AD0>,) | kwargs={}
2025-05-27 23:15:46 | INFO     | __main__:initialize_llm:151 - Initializing Groq LLM
2025-05-27 23:15:46 | DEBUG    | __main__:initialize_llm:161 - Using Groq API key: gsk_sBCV***Lnql
2025-05-27 23:15:48 | INFO     | __main__:initialize_llm:177 - LLM initialization successful in 1.970s
2025-05-27 23:15:48 | DEBUG    | __main__:initialize_llm:178 - LLM test response: content='OK' additional_kwargs={} response_metadata={'token_usage': {'completion_tokens': 2, 'prompt_tokens': 42, 'total_tokens': 44, 'completion_time': 0.008918633, 'prompt_time': 0.0027219, 'queue_time': 0.05706477, 'total_time': 0.011640533}, 'model_name': 'llama-3.3-70b-versatile', 'system_fingerprint': 'fp_3f3b593e33', 'finish_reason': 'stop', 'logprobs': None} id='run--5528f6bf-3b6e-4369-bddd-4dcad736833d-0' usage_metadata={'input_tokens': 42, 'output_tokens': 2, 'total_tokens': 44}
2025-05-27 23:15:48 | INFO     | __main__:initialize_llm:179 - Using model: llama-3.3-70b-versatile
2025-05-27 23:15:48 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.initialize_llm | duration=1.981s
2025-05-27 23:15:48 | INFO     | decorators:wrapper:37 - PERFORMANCE: __main__.TextToSQLApp.initialize_llm took 1.981s
2025-05-27 23:15:48 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.setup_sql_agent | args=(<__main__.TextToSQLApp object at 0x000002A94C300AD0>,) | kwargs={}
2025-05-27 23:15:48 | INFO     | __main__:setup_sql_agent:190 - Setting up SQL agent
2025-05-27 23:15:48 | DEBUG    | __main__:setup_sql_agent:194 - SQL toolkit created successfully
2025-05-27 23:15:48 | DEBUG    | __main__:setup_sql_agent:227 - Creating SQL agent with custom prompt
2025-05-27 23:15:48 | SUCCESS  | __main__:setup_sql_agent:236 - SQL agent setup completed successfully
2025-05-27 23:15:48 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.setup_sql_agent | duration=0.000s
2025-05-27 23:15:48 | SUCCESS  | __main__:__init__:67 - Application initialized successfully
2025-05-27 23:15:48 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.run | args=(<__main__.TextToSQLApp object at 0x000002A94C300AD0>,) | kwargs={}
2025-05-27 23:15:48 | INFO     | __main__:run:611 - Starting main application runner
2025-05-27 23:15:48 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.display_sample_queries | args=(<__main__.TextToSQLApp object at 0x000002A94C300AD0>,) | kwargs={}
2025-05-27 23:15:48 | DEBUG    | __main__:display_sample_queries:558 - Displaying sample queries in sidebar
2025-05-27 23:15:48 | DEBUG    | __main__:display_sample_queries:575 - Displaying 10 sample queries
2025-05-27 23:15:48 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.display_sample_queries | duration=0.014s
2025-05-27 23:15:48 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.display_logs_sidebar | args=(<__main__.TextToSQLApp object at 0x000002A94C300AD0>,) | kwargs={}
2025-05-27 23:15:48 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.display_logs_sidebar | duration=0.000s
2025-05-27 23:15:48 | INFO     | __main__:run:726 - Main application runner completed successfully
2025-05-27 23:15:48 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.run | duration=0.028s
2025-05-27 23:15:48 | INFO     | __main__:<module>:807 - Application session completed successfully
2025-05-27 23:15:48 | INFO     | __main__:<module>:815 - Application shutdown
2025-05-27 23:15:54 | INFO     | __main__:<module>:799 - ==================================================
2025-05-27 23:15:54 | INFO     | __main__:<module>:800 - Starting Text-to-SQL Application
2025-05-27 23:15:54 | INFO     | __main__:<module>:801 - Start time: 2025-05-27T23:15:54.108334
2025-05-27 23:15:54 | INFO     | __main__:<module>:802 - ==================================================
2025-05-27 23:15:54 | INFO     | __main__:__init__:58 - Initializing Text-to-SQL Application
2025-05-27 23:15:54 | INFO     | __main__:__init__:60 - Session ID: 20250527_231554
2025-05-27 23:15:54 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.setup_page_config | args=(<__main__.TextToSQLApp object at 0x000002A94F934090>,) | kwargs={}
2025-05-27 23:15:54 | DEBUG    | __main__:setup_page_config:75 - Setting up Streamlit page configuration
2025-05-27 23:15:54 | INFO     | __main__:setup_page_config:88 - Page configuration set: {'page_title': 'Text-to-SQL Assistant', 'page_icon': 'üîç'}
2025-05-27 23:15:54 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.setup_page_config | duration=0.003s
2025-05-27 23:15:54 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.initialize_database | args=(<__main__.TextToSQLApp object at 0x000002A94F934090>,) | kwargs={}
2025-05-27 23:15:54 | INFO     | __main__:initialize_database:94 - Initializing database connection
2025-05-27 23:15:54 | DEBUG    | __main__:initialize_database:97 - Database path: chinook.db
2025-05-27 23:15:54 | INFO     | __main__:initialize_database:105 - Database file size: 884736 bytes
2025-05-27 23:15:54 | INFO     | __main__:initialize_database:113 - Database connection test successful. Tables found: [(13,)]
2025-05-27 23:15:54 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.log_database_schema | args=(<__main__.TextToSQLApp object at 0x000002A94F934090>,) | kwargs={}
2025-05-27 23:15:54 | INFO     | __main__:log_database_schema:132 - Database tables: [('albums',), ('sqlite_sequence',), ('artists',), ('customers',), ('employees',), ('genres',), ('invoices',), ('invoice_items',), ('media_types',), ('playlists',), ('playlist_track',), ('tracks',), ('sqlite_stat1',)]
2025-05-27 23:15:54 | DEBUG    | __main__:log_database_schema:140 - Schema for table albums: [(0, 'AlbumId', 'INTEGER', 1, None, 1), (1, 'Title', 'NVARCHAR(160)', 1, None, 0), (2, 'ArtistId', 'INTEGER', 1, None, 0)]
2025-05-27 23:15:54 | DEBUG    | __main__:log_database_schema:140 - Schema for table sqlite_sequence: [(0, 'name', '', 0, None, 0), (1, 'seq', '', 0, None, 0)]
2025-05-27 23:15:54 | DEBUG    | __main__:log_database_schema:140 - Schema for table artists: [(0, 'ArtistId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(120)', 0, None, 0)]
2025-05-27 23:15:54 | DEBUG    | __main__:log_database_schema:140 - Schema for table customers: [(0, 'CustomerId', 'INTEGER', 1, None, 1), (1, 'FirstName', 'NVARCHAR(40)', 1, None, 0), (2, 'LastName', 'NVARCHAR(20)', 1, None, 0), (3, 'Company', 'NVARCHAR(80)', 0, None, 0), (4, 'Address', 'NVARCHAR(70)', 0, None, 0), (5, 'City', 'NVARCHAR(40)', 0, None, 0), (6, 'State', 'NVARCHAR(40)', 0, None, 0), (7, 'Country', 'NVARCHAR(40)', 0, None, 0), (8, 'PostalCode', 'NVARCHAR(10)', 0, None, 0), (9, 'Phone', 'NVARCHAR(24)', 0, None, 0), (10, 'Fax', 'NVARCHAR(24)', 0, None, 0), (11, 'Email', 'NVARCHAR(60)', 1, None, 0), (12, 'SupportRepId', 'INTEGER', 0, None, 0)]
2025-05-27 23:15:54 | DEBUG    | __main__:log_database_schema:140 - Schema for table employees: [(0, 'EmployeeId', 'INTEGER', 1, None, 1), (1, 'LastName', 'NVARCHAR(20)', 1, None, 0), (2, 'FirstName', 'NVARCHAR(20)', 1, None, 0), (3, 'Title', 'NVARCHAR(30)', 0, None, 0), (4, 'ReportsTo', 'INTEGER', 0, None, 0), (5, 'BirthDate', 'DATETIME', 0, None, 0), (6, 'HireDate', 'DATETIME', 0, None, 0), (7, 'Address', 'NVARCHAR(70)', 0, None, 0), (8, 'City', 'NVARCHAR(40)', 0, None, 0), (9, 'State', 'NVARCHAR(40)', 0, None, 0), (10, 'Country', 'NVARCHAR(40)', 0, None, 0), (11, 'PostalCode', 'NVARCHAR(10)', 0, None, 0), (12, 'Phone', 'NVARCHAR(24)', 0, None, 0), (13, 'Fax', 'NVARCHAR(24)', 0, None, 0), (14, 'Email', 'NVARCHAR(60)', 0, None, 0)]
2025-05-27 23:15:54 | DEBUG    | __main__:log_database_schema:140 - Schema for table genres: [(0, 'GenreId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(120)', 0, None, 0)]
2025-05-27 23:15:54 | DEBUG    | __main__:log_database_schema:140 - Schema for table invoices: [(0, 'InvoiceId', 'INTEGER', 1, None, 1), (1, 'CustomerId', 'INTEGER', 1, None, 0), (2, 'InvoiceDate', 'DATETIME', 1, None, 0), (3, 'BillingAddress', 'NVARCHAR(70)', 0, None, 0), (4, 'BillingCity', 'NVARCHAR(40)', 0, None, 0), (5, 'BillingState', 'NVARCHAR(40)', 0, None, 0), (6, 'BillingCountry', 'NVARCHAR(40)', 0, None, 0), (7, 'BillingPostalCode', 'NVARCHAR(10)', 0, None, 0), (8, 'Total', 'NUMERIC(10,2)', 1, None, 0)]
2025-05-27 23:15:54 | DEBUG    | __main__:log_database_schema:140 - Schema for table invoice_items: [(0, 'InvoiceLineId', 'INTEGER', 1, None, 1), (1, 'InvoiceId', 'INTEGER', 1, None, 0), (2, 'TrackId', 'INTEGER', 1, None, 0), (3, 'UnitPrice', 'NUMERIC(10,2)', 1, None, 0), (4, 'Quantity', 'INTEGER', 1, None, 0)]
2025-05-27 23:15:54 | DEBUG    | __main__:log_database_schema:140 - Schema for table media_types: [(0, 'MediaTypeId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(120)', 0, None, 0)]
2025-05-27 23:15:54 | DEBUG    | __main__:log_database_schema:140 - Schema for table playlists: [(0, 'PlaylistId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(120)', 0, None, 0)]
2025-05-27 23:15:54 | DEBUG    | __main__:log_database_schema:140 - Schema for table playlist_track: [(0, 'PlaylistId', 'INTEGER', 1, None, 1), (1, 'TrackId', 'INTEGER', 1, None, 2)]
2025-05-27 23:15:54 | DEBUG    | __main__:log_database_schema:140 - Schema for table tracks: [(0, 'TrackId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(200)', 1, None, 0), (2, 'AlbumId', 'INTEGER', 0, None, 0), (3, 'MediaTypeId', 'INTEGER', 1, None, 0), (4, 'GenreId', 'INTEGER', 0, None, 0), (5, 'Composer', 'NVARCHAR(220)', 0, None, 0), (6, 'Milliseconds', 'INTEGER', 1, None, 0), (7, 'Bytes', 'INTEGER', 0, None, 0), (8, 'UnitPrice', 'NUMERIC(10,2)', 1, None, 0)]
2025-05-27 23:15:54 | DEBUG    | __main__:log_database_schema:140 - Schema for table sqlite_stat1: [(0, 'tbl', '', 0, None, 0), (1, 'idx', '', 0, None, 0), (2, 'stat', '', 0, None, 0)]
2025-05-27 23:15:54 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.log_database_schema | duration=0.022s
2025-05-27 23:15:54 | SUCCESS  | __main__:initialize_database:119 - Database initialization completed
2025-05-27 23:15:54 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.initialize_database | duration=0.078s
2025-05-27 23:15:54 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.initialize_llm | args=(<__main__.TextToSQLApp object at 0x000002A94F934090>,) | kwargs={}
2025-05-27 23:15:54 | INFO     | __main__:initialize_llm:151 - Initializing Groq LLM
2025-05-27 23:15:54 | DEBUG    | __main__:initialize_llm:161 - Using Groq API key: gsk_sBCV***Lnql
2025-05-27 23:15:55 | INFO     | __main__:initialize_llm:177 - LLM initialization successful in 1.077s
2025-05-27 23:15:55 | DEBUG    | __main__:initialize_llm:178 - LLM test response: content='OK' additional_kwargs={} response_metadata={'token_usage': {'completion_tokens': 2, 'prompt_tokens': 42, 'total_tokens': 44, 'completion_time': 0.009514472, 'prompt_time': 0.002312154, 'queue_time': 0.053252476, 'total_time': 0.011826626}, 'model_name': 'llama-3.3-70b-versatile', 'system_fingerprint': 'fp_2ddfbb0da0', 'finish_reason': 'stop', 'logprobs': None} id='run--75448080-2183-4b79-bf52-26edacf6e6bc-0' usage_metadata={'input_tokens': 42, 'output_tokens': 2, 'total_tokens': 44}
2025-05-27 23:15:55 | INFO     | __main__:initialize_llm:179 - Using model: llama-3.3-70b-versatile
2025-05-27 23:15:55 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.initialize_llm | duration=1.078s
2025-05-27 23:15:55 | INFO     | decorators:wrapper:37 - PERFORMANCE: __main__.TextToSQLApp.initialize_llm took 1.078s
2025-05-27 23:15:55 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.setup_sql_agent | args=(<__main__.TextToSQLApp object at 0x000002A94F934090>,) | kwargs={}
2025-05-27 23:15:55 | INFO     | __main__:setup_sql_agent:190 - Setting up SQL agent
2025-05-27 23:15:55 | DEBUG    | __main__:setup_sql_agent:194 - SQL toolkit created successfully
2025-05-27 23:15:55 | DEBUG    | __main__:setup_sql_agent:227 - Creating SQL agent with custom prompt
2025-05-27 23:15:55 | SUCCESS  | __main__:setup_sql_agent:236 - SQL agent setup completed successfully
2025-05-27 23:15:55 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.setup_sql_agent | duration=0.014s
2025-05-27 23:15:55 | SUCCESS  | __main__:__init__:67 - Application initialized successfully
2025-05-27 23:15:55 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.run | args=(<__main__.TextToSQLApp object at 0x000002A94F934090>,) | kwargs={}
2025-05-27 23:15:55 | INFO     | __main__:run:611 - Starting main application runner
2025-05-27 23:15:55 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.display_sample_queries | args=(<__main__.TextToSQLApp object at 0x000002A94F934090>,) | kwargs={}
2025-05-27 23:15:55 | DEBUG    | __main__:display_sample_queries:558 - Displaying sample queries in sidebar
2025-05-27 23:15:55 | DEBUG    | __main__:display_sample_queries:575 - Displaying 10 sample queries
2025-05-27 23:15:55 | INFO     | __main__:display_sample_queries:579 - Sample query selected: What is the average track length by genre?
2025-05-27 23:15:55 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.display_sample_queries | duration=0.012s
2025-05-27 23:15:55 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.display_logs_sidebar | args=(<__main__.TextToSQLApp object at 0x000002A94F934090>,) | kwargs={}
2025-05-27 23:15:55 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.display_logs_sidebar | duration=0.001s
2025-05-27 23:15:55 | INFO     | __main__:run:633 - Using selected query: What is the average track length by genre?
2025-05-27 23:15:55 | INFO     | __main__:run:726 - Main application runner completed successfully
2025-05-27 23:15:55 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.run | duration=0.029s
2025-05-27 23:15:55 | INFO     | __main__:<module>:807 - Application session completed successfully
2025-05-27 23:15:55 | INFO     | __main__:<module>:815 - Application shutdown
2025-05-27 23:20:32 | INFO     | logger_config:setup_logger:65 - Logger initialized successfully
2025-05-27 23:20:32 | INFO     | __main__:<module>:799 - ==================================================
2025-05-27 23:20:32 | INFO     | __main__:<module>:800 - Starting Text-to-SQL Application
2025-05-27 23:20:32 | INFO     | __main__:<module>:801 - Start time: 2025-05-27T23:20:32.651730
2025-05-27 23:20:32 | INFO     | __main__:<module>:802 - ==================================================
2025-05-27 23:20:32 | INFO     | __main__:__init__:58 - Initializing Text-to-SQL Application
2025-05-27 23:20:32 | INFO     | __main__:__init__:60 - Session ID: 20250527_232032
2025-05-27 23:20:32 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.setup_page_config | args=(<__main__.TextToSQLApp object at 0x000002A94C300AD0>,) | kwargs={}
2025-05-27 23:20:32 | DEBUG    | __main__:setup_page_config:75 - Setting up Streamlit page configuration
2025-05-27 23:20:32 | INFO     | __main__:setup_page_config:88 - Page configuration set: {'page_title': 'Text-to-SQL Assistant', 'page_icon': 'üîç'}
2025-05-27 23:20:32 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.setup_page_config | duration=0.001s
2025-05-27 23:20:32 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.initialize_database | args=(<__main__.TextToSQLApp object at 0x000002A94C300AD0>,) | kwargs={}
2025-05-27 23:20:32 | INFO     | __main__:initialize_database:94 - Initializing database connection
2025-05-27 23:20:32 | DEBUG    | __main__:initialize_database:97 - Database path: chinook.db
2025-05-27 23:20:32 | INFO     | __main__:initialize_database:105 - Database file size: 884736 bytes
2025-05-27 23:20:32 | INFO     | __main__:initialize_database:113 - Database connection test successful. Tables found: [(13,)]
2025-05-27 23:20:32 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.log_database_schema | args=(<__main__.TextToSQLApp object at 0x000002A94C300AD0>,) | kwargs={}
2025-05-27 23:20:32 | INFO     | __main__:log_database_schema:132 - Database tables: [('albums',), ('sqlite_sequence',), ('artists',), ('customers',), ('employees',), ('genres',), ('invoices',), ('invoice_items',), ('media_types',), ('playlists',), ('playlist_track',), ('tracks',), ('sqlite_stat1',)]
2025-05-27 23:20:32 | DEBUG    | __main__:log_database_schema:140 - Schema for table albums: [(0, 'AlbumId', 'INTEGER', 1, None, 1), (1, 'Title', 'NVARCHAR(160)', 1, None, 0), (2, 'ArtistId', 'INTEGER', 1, None, 0)]
2025-05-27 23:20:32 | DEBUG    | __main__:log_database_schema:140 - Schema for table sqlite_sequence: [(0, 'name', '', 0, None, 0), (1, 'seq', '', 0, None, 0)]
2025-05-27 23:20:32 | DEBUG    | __main__:log_database_schema:140 - Schema for table artists: [(0, 'ArtistId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(120)', 0, None, 0)]
2025-05-27 23:20:32 | DEBUG    | __main__:log_database_schema:140 - Schema for table customers: [(0, 'CustomerId', 'INTEGER', 1, None, 1), (1, 'FirstName', 'NVARCHAR(40)', 1, None, 0), (2, 'LastName', 'NVARCHAR(20)', 1, None, 0), (3, 'Company', 'NVARCHAR(80)', 0, None, 0), (4, 'Address', 'NVARCHAR(70)', 0, None, 0), (5, 'City', 'NVARCHAR(40)', 0, None, 0), (6, 'State', 'NVARCHAR(40)', 0, None, 0), (7, 'Country', 'NVARCHAR(40)', 0, None, 0), (8, 'PostalCode', 'NVARCHAR(10)', 0, None, 0), (9, 'Phone', 'NVARCHAR(24)', 0, None, 0), (10, 'Fax', 'NVARCHAR(24)', 0, None, 0), (11, 'Email', 'NVARCHAR(60)', 1, None, 0), (12, 'SupportRepId', 'INTEGER', 0, None, 0)]
2025-05-27 23:20:32 | DEBUG    | __main__:log_database_schema:140 - Schema for table employees: [(0, 'EmployeeId', 'INTEGER', 1, None, 1), (1, 'LastName', 'NVARCHAR(20)', 1, None, 0), (2, 'FirstName', 'NVARCHAR(20)', 1, None, 0), (3, 'Title', 'NVARCHAR(30)', 0, None, 0), (4, 'ReportsTo', 'INTEGER', 0, None, 0), (5, 'BirthDate', 'DATETIME', 0, None, 0), (6, 'HireDate', 'DATETIME', 0, None, 0), (7, 'Address', 'NVARCHAR(70)', 0, None, 0), (8, 'City', 'NVARCHAR(40)', 0, None, 0), (9, 'State', 'NVARCHAR(40)', 0, None, 0), (10, 'Country', 'NVARCHAR(40)', 0, None, 0), (11, 'PostalCode', 'NVARCHAR(10)', 0, None, 0), (12, 'Phone', 'NVARCHAR(24)', 0, None, 0), (13, 'Fax', 'NVARCHAR(24)', 0, None, 0), (14, 'Email', 'NVARCHAR(60)', 0, None, 0)]
2025-05-27 23:20:32 | DEBUG    | __main__:log_database_schema:140 - Schema for table genres: [(0, 'GenreId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(120)', 0, None, 0)]
2025-05-27 23:20:32 | DEBUG    | __main__:log_database_schema:140 - Schema for table invoices: [(0, 'InvoiceId', 'INTEGER', 1, None, 1), (1, 'CustomerId', 'INTEGER', 1, None, 0), (2, 'InvoiceDate', 'DATETIME', 1, None, 0), (3, 'BillingAddress', 'NVARCHAR(70)', 0, None, 0), (4, 'BillingCity', 'NVARCHAR(40)', 0, None, 0), (5, 'BillingState', 'NVARCHAR(40)', 0, None, 0), (6, 'BillingCountry', 'NVARCHAR(40)', 0, None, 0), (7, 'BillingPostalCode', 'NVARCHAR(10)', 0, None, 0), (8, 'Total', 'NUMERIC(10,2)', 1, None, 0)]
2025-05-27 23:20:32 | DEBUG    | __main__:log_database_schema:140 - Schema for table invoice_items: [(0, 'InvoiceLineId', 'INTEGER', 1, None, 1), (1, 'InvoiceId', 'INTEGER', 1, None, 0), (2, 'TrackId', 'INTEGER', 1, None, 0), (3, 'UnitPrice', 'NUMERIC(10,2)', 1, None, 0), (4, 'Quantity', 'INTEGER', 1, None, 0)]
2025-05-27 23:20:32 | DEBUG    | __main__:log_database_schema:140 - Schema for table media_types: [(0, 'MediaTypeId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(120)', 0, None, 0)]
2025-05-27 23:20:32 | DEBUG    | __main__:log_database_schema:140 - Schema for table playlists: [(0, 'PlaylistId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(120)', 0, None, 0)]
2025-05-27 23:20:32 | DEBUG    | __main__:log_database_schema:140 - Schema for table playlist_track: [(0, 'PlaylistId', 'INTEGER', 1, None, 1), (1, 'TrackId', 'INTEGER', 1, None, 2)]
2025-05-27 23:20:32 | DEBUG    | __main__:log_database_schema:140 - Schema for table tracks: [(0, 'TrackId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(200)', 1, None, 0), (2, 'AlbumId', 'INTEGER', 0, None, 0), (3, 'MediaTypeId', 'INTEGER', 1, None, 0), (4, 'GenreId', 'INTEGER', 0, None, 0), (5, 'Composer', 'NVARCHAR(220)', 0, None, 0), (6, 'Milliseconds', 'INTEGER', 1, None, 0), (7, 'Bytes', 'INTEGER', 0, None, 0), (8, 'UnitPrice', 'NUMERIC(10,2)', 1, None, 0)]
2025-05-27 23:20:32 | DEBUG    | __main__:log_database_schema:140 - Schema for table sqlite_stat1: [(0, 'tbl', '', 0, None, 0), (1, 'idx', '', 0, None, 0), (2, 'stat', '', 0, None, 0)]
2025-05-27 23:20:32 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.log_database_schema | duration=0.002s
2025-05-27 23:20:32 | SUCCESS  | __main__:initialize_database:119 - Database initialization completed
2025-05-27 23:20:32 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.initialize_database | duration=0.046s
2025-05-27 23:20:32 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.initialize_llm | args=(<__main__.TextToSQLApp object at 0x000002A94C300AD0>,) | kwargs={}
2025-05-27 23:20:32 | INFO     | __main__:initialize_llm:151 - Initializing Groq LLM
2025-05-27 23:20:32 | DEBUG    | __main__:initialize_llm:161 - Using Groq API key: gsk_sBCV***Lnql
2025-05-27 23:20:33 | INFO     | __main__:initialize_llm:177 - LLM initialization successful in 1.165s
2025-05-27 23:20:33 | DEBUG    | __main__:initialize_llm:178 - LLM test response: content='OK' additional_kwargs={} response_metadata={'token_usage': {'completion_tokens': 2, 'prompt_tokens': 42, 'total_tokens': 44, 'completion_time': 0.009744607, 'prompt_time': 0.001966241, 'queue_time': 0.055848179, 'total_time': 0.011710848}, 'model_name': 'llama-3.3-70b-versatile', 'system_fingerprint': 'fp_3f3b593e33', 'finish_reason': 'stop', 'logprobs': None} id='run--83ea9605-30e8-4a0b-a75e-9b712b7be6f5-0' usage_metadata={'input_tokens': 42, 'output_tokens': 2, 'total_tokens': 44}
2025-05-27 23:20:33 | INFO     | __main__:initialize_llm:179 - Using model: llama-3.3-70b-versatile
2025-05-27 23:20:33 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.initialize_llm | duration=1.179s
2025-05-27 23:20:33 | INFO     | decorators:wrapper:37 - PERFORMANCE: __main__.TextToSQLApp.initialize_llm took 1.179s
2025-05-27 23:20:33 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.setup_sql_agent | args=(<__main__.TextToSQLApp object at 0x000002A94C300AD0>,) | kwargs={}
2025-05-27 23:20:33 | INFO     | __main__:setup_sql_agent:190 - Setting up SQL agent
2025-05-27 23:20:33 | DEBUG    | __main__:setup_sql_agent:194 - SQL toolkit created successfully
2025-05-27 23:20:33 | DEBUG    | __main__:setup_sql_agent:227 - Creating SQL agent with custom prompt
2025-05-27 23:20:33 | SUCCESS  | __main__:setup_sql_agent:236 - SQL agent setup completed successfully
2025-05-27 23:20:33 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.setup_sql_agent | duration=0.005s
2025-05-27 23:20:33 | SUCCESS  | __main__:__init__:67 - Application initialized successfully
2025-05-27 23:20:33 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.run | args=(<__main__.TextToSQLApp object at 0x000002A94C300AD0>,) | kwargs={}
2025-05-27 23:20:33 | INFO     | __main__:run:611 - Starting main application runner
2025-05-27 23:20:33 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.display_sample_queries | args=(<__main__.TextToSQLApp object at 0x000002A94C300AD0>,) | kwargs={}
2025-05-27 23:20:33 | DEBUG    | __main__:display_sample_queries:558 - Displaying sample queries in sidebar
2025-05-27 23:20:33 | DEBUG    | __main__:display_sample_queries:575 - Displaying 10 sample queries
2025-05-27 23:20:33 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.display_sample_queries | duration=0.015s
2025-05-27 23:20:33 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.display_logs_sidebar | args=(<__main__.TextToSQLApp object at 0x000002A94C300AD0>,) | kwargs={}
2025-05-27 23:20:33 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.display_logs_sidebar | duration=0.001s
2025-05-27 23:20:33 | WARNING  | __main__:run:702 - Process button clicked but no query provided
2025-05-27 23:20:33 | INFO     | __main__:run:726 - Main application runner completed successfully
2025-05-27 23:20:34 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.run | duration=0.130s
2025-05-27 23:20:34 | INFO     | decorators:wrapper:37 - PERFORMANCE: __main__.TextToSQLApp.run took 0.130s
2025-05-27 23:20:34 | INFO     | __main__:<module>:807 - Application session completed successfully
2025-05-27 23:20:34 | INFO     | __main__:<module>:815 - Application shutdown
2025-05-27 23:23:58 | INFO     | __main__:<module>:799 - ==================================================
2025-05-27 23:23:58 | INFO     | __main__:<module>:800 - Starting Text-to-SQL Application
2025-05-27 23:23:58 | INFO     | __main__:<module>:801 - Start time: 2025-05-27T23:23:58.399897
2025-05-27 23:23:58 | INFO     | __main__:<module>:802 - ==================================================
2025-05-27 23:23:58 | INFO     | __main__:__init__:58 - Initializing Text-to-SQL Application
2025-05-27 23:23:58 | INFO     | __main__:__init__:60 - Session ID: 20250527_232358
2025-05-27 23:23:58 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.setup_page_config | args=(<__main__.TextToSQLApp object at 0x000002A94DE4A650>,) | kwargs={}
2025-05-27 23:23:58 | DEBUG    | __main__:setup_page_config:75 - Setting up Streamlit page configuration
2025-05-27 23:23:58 | INFO     | __main__:setup_page_config:88 - Page configuration set: {'page_title': 'Text-to-SQL Assistant', 'page_icon': 'üîç'}
2025-05-27 23:23:58 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.setup_page_config | duration=0.003s
2025-05-27 23:23:58 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.initialize_database | args=(<__main__.TextToSQLApp object at 0x000002A94DE4A650>,) | kwargs={}
2025-05-27 23:23:58 | INFO     | __main__:initialize_database:94 - Initializing database connection
2025-05-27 23:23:58 | DEBUG    | __main__:initialize_database:97 - Database path: chinook.db
2025-05-27 23:23:58 | INFO     | __main__:initialize_database:105 - Database file size: 884736 bytes
2025-05-27 23:23:58 | INFO     | __main__:initialize_database:113 - Database connection test successful. Tables found: [(13,)]
2025-05-27 23:23:58 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.log_database_schema | args=(<__main__.TextToSQLApp object at 0x000002A94DE4A650>,) | kwargs={}
2025-05-27 23:23:58 | INFO     | __main__:log_database_schema:132 - Database tables: [('albums',), ('sqlite_sequence',), ('artists',), ('customers',), ('employees',), ('genres',), ('invoices',), ('invoice_items',), ('media_types',), ('playlists',), ('playlist_track',), ('tracks',), ('sqlite_stat1',)]
2025-05-27 23:23:58 | DEBUG    | __main__:log_database_schema:140 - Schema for table albums: [(0, 'AlbumId', 'INTEGER', 1, None, 1), (1, 'Title', 'NVARCHAR(160)', 1, None, 0), (2, 'ArtistId', 'INTEGER', 1, None, 0)]
2025-05-27 23:23:58 | DEBUG    | __main__:log_database_schema:140 - Schema for table sqlite_sequence: [(0, 'name', '', 0, None, 0), (1, 'seq', '', 0, None, 0)]
2025-05-27 23:23:58 | DEBUG    | __main__:log_database_schema:140 - Schema for table artists: [(0, 'ArtistId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(120)', 0, None, 0)]
2025-05-27 23:23:58 | DEBUG    | __main__:log_database_schema:140 - Schema for table customers: [(0, 'CustomerId', 'INTEGER', 1, None, 1), (1, 'FirstName', 'NVARCHAR(40)', 1, None, 0), (2, 'LastName', 'NVARCHAR(20)', 1, None, 0), (3, 'Company', 'NVARCHAR(80)', 0, None, 0), (4, 'Address', 'NVARCHAR(70)', 0, None, 0), (5, 'City', 'NVARCHAR(40)', 0, None, 0), (6, 'State', 'NVARCHAR(40)', 0, None, 0), (7, 'Country', 'NVARCHAR(40)', 0, None, 0), (8, 'PostalCode', 'NVARCHAR(10)', 0, None, 0), (9, 'Phone', 'NVARCHAR(24)', 0, None, 0), (10, 'Fax', 'NVARCHAR(24)', 0, None, 0), (11, 'Email', 'NVARCHAR(60)', 1, None, 0), (12, 'SupportRepId', 'INTEGER', 0, None, 0)]
2025-05-27 23:23:58 | DEBUG    | __main__:log_database_schema:140 - Schema for table employees: [(0, 'EmployeeId', 'INTEGER', 1, None, 1), (1, 'LastName', 'NVARCHAR(20)', 1, None, 0), (2, 'FirstName', 'NVARCHAR(20)', 1, None, 0), (3, 'Title', 'NVARCHAR(30)', 0, None, 0), (4, 'ReportsTo', 'INTEGER', 0, None, 0), (5, 'BirthDate', 'DATETIME', 0, None, 0), (6, 'HireDate', 'DATETIME', 0, None, 0), (7, 'Address', 'NVARCHAR(70)', 0, None, 0), (8, 'City', 'NVARCHAR(40)', 0, None, 0), (9, 'State', 'NVARCHAR(40)', 0, None, 0), (10, 'Country', 'NVARCHAR(40)', 0, None, 0), (11, 'PostalCode', 'NVARCHAR(10)', 0, None, 0), (12, 'Phone', 'NVARCHAR(24)', 0, None, 0), (13, 'Fax', 'NVARCHAR(24)', 0, None, 0), (14, 'Email', 'NVARCHAR(60)', 0, None, 0)]
2025-05-27 23:23:58 | DEBUG    | __main__:log_database_schema:140 - Schema for table genres: [(0, 'GenreId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(120)', 0, None, 0)]
2025-05-27 23:23:58 | DEBUG    | __main__:log_database_schema:140 - Schema for table invoices: [(0, 'InvoiceId', 'INTEGER', 1, None, 1), (1, 'CustomerId', 'INTEGER', 1, None, 0), (2, 'InvoiceDate', 'DATETIME', 1, None, 0), (3, 'BillingAddress', 'NVARCHAR(70)', 0, None, 0), (4, 'BillingCity', 'NVARCHAR(40)', 0, None, 0), (5, 'BillingState', 'NVARCHAR(40)', 0, None, 0), (6, 'BillingCountry', 'NVARCHAR(40)', 0, None, 0), (7, 'BillingPostalCode', 'NVARCHAR(10)', 0, None, 0), (8, 'Total', 'NUMERIC(10,2)', 1, None, 0)]
2025-05-27 23:23:58 | DEBUG    | __main__:log_database_schema:140 - Schema for table invoice_items: [(0, 'InvoiceLineId', 'INTEGER', 1, None, 1), (1, 'InvoiceId', 'INTEGER', 1, None, 0), (2, 'TrackId', 'INTEGER', 1, None, 0), (3, 'UnitPrice', 'NUMERIC(10,2)', 1, None, 0), (4, 'Quantity', 'INTEGER', 1, None, 0)]
2025-05-27 23:23:58 | DEBUG    | __main__:log_database_schema:140 - Schema for table media_types: [(0, 'MediaTypeId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(120)', 0, None, 0)]
2025-05-27 23:23:58 | DEBUG    | __main__:log_database_schema:140 - Schema for table playlists: [(0, 'PlaylistId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(120)', 0, None, 0)]
2025-05-27 23:23:58 | DEBUG    | __main__:log_database_schema:140 - Schema for table playlist_track: [(0, 'PlaylistId', 'INTEGER', 1, None, 1), (1, 'TrackId', 'INTEGER', 1, None, 2)]
2025-05-27 23:23:58 | DEBUG    | __main__:log_database_schema:140 - Schema for table tracks: [(0, 'TrackId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(200)', 1, None, 0), (2, 'AlbumId', 'INTEGER', 0, None, 0), (3, 'MediaTypeId', 'INTEGER', 1, None, 0), (4, 'GenreId', 'INTEGER', 0, None, 0), (5, 'Composer', 'NVARCHAR(220)', 0, None, 0), (6, 'Milliseconds', 'INTEGER', 1, None, 0), (7, 'Bytes', 'INTEGER', 0, None, 0), (8, 'UnitPrice', 'NUMERIC(10,2)', 1, None, 0)]
2025-05-27 23:23:58 | DEBUG    | __main__:log_database_schema:140 - Schema for table sqlite_stat1: [(0, 'tbl', '', 0, None, 0), (1, 'idx', '', 0, None, 0), (2, 'stat', '', 0, None, 0)]
2025-05-27 23:23:58 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.log_database_schema | duration=0.015s
2025-05-27 23:23:58 | SUCCESS  | __main__:initialize_database:119 - Database initialization completed
2025-05-27 23:23:58 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.initialize_database | duration=0.100s
2025-05-27 23:23:58 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.initialize_llm | args=(<__main__.TextToSQLApp object at 0x000002A94DE4A650>,) | kwargs={}
2025-05-27 23:23:58 | INFO     | __main__:initialize_llm:151 - Initializing Groq LLM
2025-05-27 23:23:58 | DEBUG    | __main__:initialize_llm:161 - Using Groq API key: gsk_sBCV***Lnql
2025-05-27 23:23:59 | INFO     | __main__:initialize_llm:177 - LLM initialization successful in 1.402s
2025-05-27 23:23:59 | DEBUG    | __main__:initialize_llm:178 - LLM test response: content='OK' additional_kwargs={} response_metadata={'token_usage': {'completion_tokens': 2, 'prompt_tokens': 42, 'total_tokens': 44, 'completion_time': 0.008807655, 'prompt_time': 0.002986894, 'queue_time': 0.056535815, 'total_time': 0.011794549}, 'model_name': 'llama-3.3-70b-versatile', 'system_fingerprint': 'fp_6507bcfb6f', 'finish_reason': 'stop', 'logprobs': None} id='run--f0d17bc8-4519-4a39-8f3b-20957123a5b1-0' usage_metadata={'input_tokens': 42, 'output_tokens': 2, 'total_tokens': 44}
2025-05-27 23:23:59 | INFO     | __main__:initialize_llm:179 - Using model: llama-3.3-70b-versatile
2025-05-27 23:23:59 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.initialize_llm | duration=1.403s
2025-05-27 23:23:59 | INFO     | decorators:wrapper:37 - PERFORMANCE: __main__.TextToSQLApp.initialize_llm took 1.403s
2025-05-27 23:23:59 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.setup_sql_agent | args=(<__main__.TextToSQLApp object at 0x000002A94DE4A650>,) | kwargs={}
2025-05-27 23:23:59 | INFO     | __main__:setup_sql_agent:190 - Setting up SQL agent
2025-05-27 23:23:59 | DEBUG    | __main__:setup_sql_agent:194 - SQL toolkit created successfully
2025-05-27 23:23:59 | DEBUG    | __main__:setup_sql_agent:227 - Creating SQL agent with custom prompt
2025-05-27 23:23:59 | SUCCESS  | __main__:setup_sql_agent:236 - SQL agent setup completed successfully
2025-05-27 23:23:59 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.setup_sql_agent | duration=0.014s
2025-05-27 23:23:59 | SUCCESS  | __main__:__init__:67 - Application initialized successfully
2025-05-27 23:23:59 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.run | args=(<__main__.TextToSQLApp object at 0x000002A94DE4A650>,) | kwargs={}
2025-05-27 23:23:59 | INFO     | __main__:run:611 - Starting main application runner
2025-05-27 23:23:59 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.display_sample_queries | args=(<__main__.TextToSQLApp object at 0x000002A94DE4A650>,) | kwargs={}
2025-05-27 23:23:59 | DEBUG    | __main__:display_sample_queries:558 - Displaying sample queries in sidebar
2025-05-27 23:23:59 | DEBUG    | __main__:display_sample_queries:575 - Displaying 10 sample queries
2025-05-27 23:23:59 | INFO     | __main__:display_sample_queries:579 - Sample query selected: Show me the top 10 best-selling tracks
2025-05-27 23:23:59 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.display_sample_queries | duration=0.015s
2025-05-27 23:23:59 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.display_logs_sidebar | args=(<__main__.TextToSQLApp object at 0x000002A94DE4A650>,) | kwargs={}
2025-05-27 23:23:59 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.display_logs_sidebar | duration=0.001s
2025-05-27 23:23:59 | INFO     | __main__:run:633 - Using selected query: Show me the top 10 best-selling tracks
2025-05-27 23:23:59 | INFO     | __main__:run:726 - Main application runner completed successfully
2025-05-27 23:23:59 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.run | duration=0.031s
2025-05-27 23:23:59 | INFO     | __main__:<module>:807 - Application session completed successfully
2025-05-27 23:23:59 | INFO     | __main__:<module>:815 - Application shutdown
2025-05-27 23:24:04 | INFO     | __main__:<module>:799 - ==================================================
2025-05-27 23:24:04 | INFO     | __main__:<module>:800 - Starting Text-to-SQL Application
2025-05-27 23:24:04 | INFO     | __main__:<module>:801 - Start time: 2025-05-27T23:24:04.210511
2025-05-27 23:24:04 | INFO     | __main__:<module>:802 - ==================================================
2025-05-27 23:24:04 | INFO     | __main__:__init__:58 - Initializing Text-to-SQL Application
2025-05-27 23:24:04 | INFO     | __main__:__init__:60 - Session ID: 20250527_232404
2025-05-27 23:24:04 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.setup_page_config | args=(<__main__.TextToSQLApp object at 0x000002A94BA5F250>,) | kwargs={}
2025-05-27 23:24:04 | DEBUG    | __main__:setup_page_config:75 - Setting up Streamlit page configuration
2025-05-27 23:24:04 | INFO     | __main__:setup_page_config:88 - Page configuration set: {'page_title': 'Text-to-SQL Assistant', 'page_icon': 'üîç'}
2025-05-27 23:24:04 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.setup_page_config | duration=0.002s
2025-05-27 23:24:04 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.initialize_database | args=(<__main__.TextToSQLApp object at 0x000002A94BA5F250>,) | kwargs={}
2025-05-27 23:24:04 | INFO     | __main__:initialize_database:94 - Initializing database connection
2025-05-27 23:24:04 | DEBUG    | __main__:initialize_database:97 - Database path: chinook.db
2025-05-27 23:24:04 | INFO     | __main__:initialize_database:105 - Database file size: 884736 bytes
2025-05-27 23:24:04 | INFO     | __main__:initialize_database:113 - Database connection test successful. Tables found: [(13,)]
2025-05-27 23:24:04 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.log_database_schema | args=(<__main__.TextToSQLApp object at 0x000002A94BA5F250>,) | kwargs={}
2025-05-27 23:24:04 | INFO     | __main__:log_database_schema:132 - Database tables: [('albums',), ('sqlite_sequence',), ('artists',), ('customers',), ('employees',), ('genres',), ('invoices',), ('invoice_items',), ('media_types',), ('playlists',), ('playlist_track',), ('tracks',), ('sqlite_stat1',)]
2025-05-27 23:24:04 | DEBUG    | __main__:log_database_schema:140 - Schema for table albums: [(0, 'AlbumId', 'INTEGER', 1, None, 1), (1, 'Title', 'NVARCHAR(160)', 1, None, 0), (2, 'ArtistId', 'INTEGER', 1, None, 0)]
2025-05-27 23:24:04 | DEBUG    | __main__:log_database_schema:140 - Schema for table sqlite_sequence: [(0, 'name', '', 0, None, 0), (1, 'seq', '', 0, None, 0)]
2025-05-27 23:24:04 | DEBUG    | __main__:log_database_schema:140 - Schema for table artists: [(0, 'ArtistId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(120)', 0, None, 0)]
2025-05-27 23:24:04 | DEBUG    | __main__:log_database_schema:140 - Schema for table customers: [(0, 'CustomerId', 'INTEGER', 1, None, 1), (1, 'FirstName', 'NVARCHAR(40)', 1, None, 0), (2, 'LastName', 'NVARCHAR(20)', 1, None, 0), (3, 'Company', 'NVARCHAR(80)', 0, None, 0), (4, 'Address', 'NVARCHAR(70)', 0, None, 0), (5, 'City', 'NVARCHAR(40)', 0, None, 0), (6, 'State', 'NVARCHAR(40)', 0, None, 0), (7, 'Country', 'NVARCHAR(40)', 0, None, 0), (8, 'PostalCode', 'NVARCHAR(10)', 0, None, 0), (9, 'Phone', 'NVARCHAR(24)', 0, None, 0), (10, 'Fax', 'NVARCHAR(24)', 0, None, 0), (11, 'Email', 'NVARCHAR(60)', 1, None, 0), (12, 'SupportRepId', 'INTEGER', 0, None, 0)]
2025-05-27 23:24:04 | DEBUG    | __main__:log_database_schema:140 - Schema for table employees: [(0, 'EmployeeId', 'INTEGER', 1, None, 1), (1, 'LastName', 'NVARCHAR(20)', 1, None, 0), (2, 'FirstName', 'NVARCHAR(20)', 1, None, 0), (3, 'Title', 'NVARCHAR(30)', 0, None, 0), (4, 'ReportsTo', 'INTEGER', 0, None, 0), (5, 'BirthDate', 'DATETIME', 0, None, 0), (6, 'HireDate', 'DATETIME', 0, None, 0), (7, 'Address', 'NVARCHAR(70)', 0, None, 0), (8, 'City', 'NVARCHAR(40)', 0, None, 0), (9, 'State', 'NVARCHAR(40)', 0, None, 0), (10, 'Country', 'NVARCHAR(40)', 0, None, 0), (11, 'PostalCode', 'NVARCHAR(10)', 0, None, 0), (12, 'Phone', 'NVARCHAR(24)', 0, None, 0), (13, 'Fax', 'NVARCHAR(24)', 0, None, 0), (14, 'Email', 'NVARCHAR(60)', 0, None, 0)]
2025-05-27 23:24:04 | DEBUG    | __main__:log_database_schema:140 - Schema for table genres: [(0, 'GenreId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(120)', 0, None, 0)]
2025-05-27 23:24:04 | DEBUG    | __main__:log_database_schema:140 - Schema for table invoices: [(0, 'InvoiceId', 'INTEGER', 1, None, 1), (1, 'CustomerId', 'INTEGER', 1, None, 0), (2, 'InvoiceDate', 'DATETIME', 1, None, 0), (3, 'BillingAddress', 'NVARCHAR(70)', 0, None, 0), (4, 'BillingCity', 'NVARCHAR(40)', 0, None, 0), (5, 'BillingState', 'NVARCHAR(40)', 0, None, 0), (6, 'BillingCountry', 'NVARCHAR(40)', 0, None, 0), (7, 'BillingPostalCode', 'NVARCHAR(10)', 0, None, 0), (8, 'Total', 'NUMERIC(10,2)', 1, None, 0)]
2025-05-27 23:24:04 | DEBUG    | __main__:log_database_schema:140 - Schema for table invoice_items: [(0, 'InvoiceLineId', 'INTEGER', 1, None, 1), (1, 'InvoiceId', 'INTEGER', 1, None, 0), (2, 'TrackId', 'INTEGER', 1, None, 0), (3, 'UnitPrice', 'NUMERIC(10,2)', 1, None, 0), (4, 'Quantity', 'INTEGER', 1, None, 0)]
2025-05-27 23:24:04 | DEBUG    | __main__:log_database_schema:140 - Schema for table media_types: [(0, 'MediaTypeId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(120)', 0, None, 0)]
2025-05-27 23:24:04 | DEBUG    | __main__:log_database_schema:140 - Schema for table playlists: [(0, 'PlaylistId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(120)', 0, None, 0)]
2025-05-27 23:24:04 | DEBUG    | __main__:log_database_schema:140 - Schema for table playlist_track: [(0, 'PlaylistId', 'INTEGER', 1, None, 1), (1, 'TrackId', 'INTEGER', 1, None, 2)]
2025-05-27 23:24:04 | DEBUG    | __main__:log_database_schema:140 - Schema for table tracks: [(0, 'TrackId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(200)', 1, None, 0), (2, 'AlbumId', 'INTEGER', 0, None, 0), (3, 'MediaTypeId', 'INTEGER', 1, None, 0), (4, 'GenreId', 'INTEGER', 0, None, 0), (5, 'Composer', 'NVARCHAR(220)', 0, None, 0), (6, 'Milliseconds', 'INTEGER', 1, None, 0), (7, 'Bytes', 'INTEGER', 0, None, 0), (8, 'UnitPrice', 'NUMERIC(10,2)', 1, None, 0)]
2025-05-27 23:24:04 | DEBUG    | __main__:log_database_schema:140 - Schema for table sqlite_stat1: [(0, 'tbl', '', 0, None, 0), (1, 'idx', '', 0, None, 0), (2, 'stat', '', 0, None, 0)]
2025-05-27 23:24:04 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.log_database_schema | duration=0.022s
2025-05-27 23:24:04 | SUCCESS  | __main__:initialize_database:119 - Database initialization completed
2025-05-27 23:24:04 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.initialize_database | duration=0.067s
2025-05-27 23:24:04 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.initialize_llm | args=(<__main__.TextToSQLApp object at 0x000002A94BA5F250>,) | kwargs={}
2025-05-27 23:24:04 | INFO     | __main__:initialize_llm:151 - Initializing Groq LLM
2025-05-27 23:24:04 | DEBUG    | __main__:initialize_llm:161 - Using Groq API key: gsk_sBCV***Lnql
2025-05-27 23:24:04 | INFO     | __main__:<module>:799 - ==================================================
2025-05-27 23:24:04 | INFO     | __main__:<module>:800 - Starting Text-to-SQL Application
2025-05-27 23:24:04 | INFO     | __main__:<module>:801 - Start time: 2025-05-27T23:24:04.431685
2025-05-27 23:24:04 | INFO     | __main__:<module>:802 - ==================================================
2025-05-27 23:24:04 | INFO     | __main__:__init__:58 - Initializing Text-to-SQL Application
2025-05-27 23:24:04 | INFO     | __main__:__init__:60 - Session ID: 20250527_232404
2025-05-27 23:24:04 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.setup_page_config | args=(<__main__.TextToSQLApp object at 0x000002A94E476E90>,) | kwargs={}
2025-05-27 23:24:04 | DEBUG    | __main__:setup_page_config:75 - Setting up Streamlit page configuration
2025-05-27 23:24:04 | INFO     | __main__:setup_page_config:88 - Page configuration set: {'page_title': 'Text-to-SQL Assistant', 'page_icon': 'üîç'}
2025-05-27 23:24:04 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.setup_page_config | duration=0.003s
2025-05-27 23:24:04 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.initialize_database | args=(<__main__.TextToSQLApp object at 0x000002A94E476E90>,) | kwargs={}
2025-05-27 23:24:04 | INFO     | __main__:initialize_database:94 - Initializing database connection
2025-05-27 23:24:04 | DEBUG    | __main__:initialize_database:97 - Database path: chinook.db
2025-05-27 23:24:04 | INFO     | __main__:initialize_database:105 - Database file size: 884736 bytes
2025-05-27 23:24:04 | INFO     | __main__:initialize_database:113 - Database connection test successful. Tables found: [(13,)]
2025-05-27 23:24:04 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.log_database_schema | args=(<__main__.TextToSQLApp object at 0x000002A94E476E90>,) | kwargs={}
2025-05-27 23:24:04 | INFO     | __main__:log_database_schema:132 - Database tables: [('albums',), ('sqlite_sequence',), ('artists',), ('customers',), ('employees',), ('genres',), ('invoices',), ('invoice_items',), ('media_types',), ('playlists',), ('playlist_track',), ('tracks',), ('sqlite_stat1',)]
2025-05-27 23:24:04 | DEBUG    | __main__:log_database_schema:140 - Schema for table albums: [(0, 'AlbumId', 'INTEGER', 1, None, 1), (1, 'Title', 'NVARCHAR(160)', 1, None, 0), (2, 'ArtistId', 'INTEGER', 1, None, 0)]
2025-05-27 23:24:04 | DEBUG    | __main__:log_database_schema:140 - Schema for table sqlite_sequence: [(0, 'name', '', 0, None, 0), (1, 'seq', '', 0, None, 0)]
2025-05-27 23:24:04 | DEBUG    | __main__:log_database_schema:140 - Schema for table artists: [(0, 'ArtistId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(120)', 0, None, 0)]
2025-05-27 23:24:04 | DEBUG    | __main__:log_database_schema:140 - Schema for table customers: [(0, 'CustomerId', 'INTEGER', 1, None, 1), (1, 'FirstName', 'NVARCHAR(40)', 1, None, 0), (2, 'LastName', 'NVARCHAR(20)', 1, None, 0), (3, 'Company', 'NVARCHAR(80)', 0, None, 0), (4, 'Address', 'NVARCHAR(70)', 0, None, 0), (5, 'City', 'NVARCHAR(40)', 0, None, 0), (6, 'State', 'NVARCHAR(40)', 0, None, 0), (7, 'Country', 'NVARCHAR(40)', 0, None, 0), (8, 'PostalCode', 'NVARCHAR(10)', 0, None, 0), (9, 'Phone', 'NVARCHAR(24)', 0, None, 0), (10, 'Fax', 'NVARCHAR(24)', 0, None, 0), (11, 'Email', 'NVARCHAR(60)', 1, None, 0), (12, 'SupportRepId', 'INTEGER', 0, None, 0)]
2025-05-27 23:24:04 | DEBUG    | __main__:log_database_schema:140 - Schema for table employees: [(0, 'EmployeeId', 'INTEGER', 1, None, 1), (1, 'LastName', 'NVARCHAR(20)', 1, None, 0), (2, 'FirstName', 'NVARCHAR(20)', 1, None, 0), (3, 'Title', 'NVARCHAR(30)', 0, None, 0), (4, 'ReportsTo', 'INTEGER', 0, None, 0), (5, 'BirthDate', 'DATETIME', 0, None, 0), (6, 'HireDate', 'DATETIME', 0, None, 0), (7, 'Address', 'NVARCHAR(70)', 0, None, 0), (8, 'City', 'NVARCHAR(40)', 0, None, 0), (9, 'State', 'NVARCHAR(40)', 0, None, 0), (10, 'Country', 'NVARCHAR(40)', 0, None, 0), (11, 'PostalCode', 'NVARCHAR(10)', 0, None, 0), (12, 'Phone', 'NVARCHAR(24)', 0, None, 0), (13, 'Fax', 'NVARCHAR(24)', 0, None, 0), (14, 'Email', 'NVARCHAR(60)', 0, None, 0)]
2025-05-27 23:24:04 | DEBUG    | __main__:log_database_schema:140 - Schema for table genres: [(0, 'GenreId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(120)', 0, None, 0)]
2025-05-27 23:24:04 | DEBUG    | __main__:log_database_schema:140 - Schema for table invoices: [(0, 'InvoiceId', 'INTEGER', 1, None, 1), (1, 'CustomerId', 'INTEGER', 1, None, 0), (2, 'InvoiceDate', 'DATETIME', 1, None, 0), (3, 'BillingAddress', 'NVARCHAR(70)', 0, None, 0), (4, 'BillingCity', 'NVARCHAR(40)', 0, None, 0), (5, 'BillingState', 'NVARCHAR(40)', 0, None, 0), (6, 'BillingCountry', 'NVARCHAR(40)', 0, None, 0), (7, 'BillingPostalCode', 'NVARCHAR(10)', 0, None, 0), (8, 'Total', 'NUMERIC(10,2)', 1, None, 0)]
2025-05-27 23:24:04 | DEBUG    | __main__:log_database_schema:140 - Schema for table invoice_items: [(0, 'InvoiceLineId', 'INTEGER', 1, None, 1), (1, 'InvoiceId', 'INTEGER', 1, None, 0), (2, 'TrackId', 'INTEGER', 1, None, 0), (3, 'UnitPrice', 'NUMERIC(10,2)', 1, None, 0), (4, 'Quantity', 'INTEGER', 1, None, 0)]
2025-05-27 23:24:04 | DEBUG    | __main__:log_database_schema:140 - Schema for table media_types: [(0, 'MediaTypeId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(120)', 0, None, 0)]
2025-05-27 23:24:04 | DEBUG    | __main__:log_database_schema:140 - Schema for table playlists: [(0, 'PlaylistId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(120)', 0, None, 0)]
2025-05-27 23:24:04 | DEBUG    | __main__:log_database_schema:140 - Schema for table playlist_track: [(0, 'PlaylistId', 'INTEGER', 1, None, 1), (1, 'TrackId', 'INTEGER', 1, None, 2)]
2025-05-27 23:24:04 | DEBUG    | __main__:log_database_schema:140 - Schema for table tracks: [(0, 'TrackId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(200)', 1, None, 0), (2, 'AlbumId', 'INTEGER', 0, None, 0), (3, 'MediaTypeId', 'INTEGER', 1, None, 0), (4, 'GenreId', 'INTEGER', 0, None, 0), (5, 'Composer', 'NVARCHAR(220)', 0, None, 0), (6, 'Milliseconds', 'INTEGER', 1, None, 0), (7, 'Bytes', 'INTEGER', 0, None, 0), (8, 'UnitPrice', 'NUMERIC(10,2)', 1, None, 0)]
2025-05-27 23:24:04 | DEBUG    | __main__:log_database_schema:140 - Schema for table sqlite_stat1: [(0, 'tbl', '', 0, None, 0), (1, 'idx', '', 0, None, 0), (2, 'stat', '', 0, None, 0)]
2025-05-27 23:24:04 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.log_database_schema | duration=0.012s
2025-05-27 23:24:04 | SUCCESS  | __main__:initialize_database:119 - Database initialization completed
2025-05-27 23:24:04 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.initialize_database | duration=0.070s
2025-05-27 23:24:04 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.initialize_llm | args=(<__main__.TextToSQLApp object at 0x000002A94E476E90>,) | kwargs={}
2025-05-27 23:24:04 | INFO     | __main__:initialize_llm:151 - Initializing Groq LLM
2025-05-27 23:24:04 | DEBUG    | __main__:initialize_llm:161 - Using Groq API key: gsk_sBCV***Lnql
2025-05-27 23:24:05 | INFO     | __main__:initialize_llm:177 - LLM initialization successful in 1.213s
2025-05-27 23:24:05 | DEBUG    | __main__:initialize_llm:178 - LLM test response: content='OK' additional_kwargs={} response_metadata={'token_usage': {'completion_tokens': 2, 'prompt_tokens': 42, 'total_tokens': 44, 'completion_time': 0.009663533, 'prompt_time': 0.002243872, 'queue_time': 0.054699258, 'total_time': 0.011907405}, 'model_name': 'llama-3.3-70b-versatile', 'system_fingerprint': 'fp_2ddfbb0da0', 'finish_reason': 'stop', 'logprobs': None} id='run--a0267f1d-cffd-44f7-8452-b06ac087da89-0' usage_metadata={'input_tokens': 42, 'output_tokens': 2, 'total_tokens': 44}
2025-05-27 23:24:05 | INFO     | __main__:initialize_llm:179 - Using model: llama-3.3-70b-versatile
2025-05-27 23:24:05 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.initialize_llm | duration=1.216s
2025-05-27 23:24:05 | INFO     | decorators:wrapper:37 - PERFORMANCE: __main__.TextToSQLApp.initialize_llm took 1.216s
2025-05-27 23:24:05 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.setup_sql_agent | args=(<__main__.TextToSQLApp object at 0x000002A94E476E90>,) | kwargs={}
2025-05-27 23:24:05 | INFO     | __main__:setup_sql_agent:190 - Setting up SQL agent
2025-05-27 23:24:05 | DEBUG    | __main__:setup_sql_agent:194 - SQL toolkit created successfully
2025-05-27 23:24:05 | DEBUG    | __main__:setup_sql_agent:227 - Creating SQL agent with custom prompt
2025-05-27 23:24:05 | SUCCESS  | __main__:setup_sql_agent:236 - SQL agent setup completed successfully
2025-05-27 23:24:05 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.setup_sql_agent | duration=0.000s
2025-05-27 23:24:05 | SUCCESS  | __main__:__init__:67 - Application initialized successfully
2025-05-27 23:24:05 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.run | args=(<__main__.TextToSQLApp object at 0x000002A94E476E90>,) | kwargs={}
2025-05-27 23:24:05 | INFO     | __main__:run:611 - Starting main application runner
2025-05-27 23:24:05 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.display_sample_queries | args=(<__main__.TextToSQLApp object at 0x000002A94E476E90>,) | kwargs={}
2025-05-27 23:24:05 | DEBUG    | __main__:display_sample_queries:558 - Displaying sample queries in sidebar
2025-05-27 23:24:05 | DEBUG    | __main__:display_sample_queries:575 - Displaying 10 sample queries
2025-05-27 23:24:05 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.display_sample_queries | duration=0.099s
2025-05-27 23:24:05 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.display_logs_sidebar | args=(<__main__.TextToSQLApp object at 0x000002A94E476E90>,) | kwargs={}
2025-05-27 23:24:05 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.display_logs_sidebar | duration=0.000s
2025-05-27 23:24:05 | WARNING  | __main__:run:702 - Process button clicked but no query provided
2025-05-27 23:24:05 | INFO     | __main__:run:726 - Main application runner completed successfully
2025-05-27 23:24:05 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.run | duration=0.113s
2025-05-27 23:24:05 | INFO     | decorators:wrapper:37 - PERFORMANCE: __main__.TextToSQLApp.run took 0.113s
2025-05-27 23:24:05 | INFO     | __main__:<module>:807 - Application session completed successfully
2025-05-27 23:24:05 | INFO     | __main__:<module>:815 - Application shutdown
2025-05-27 23:24:05 | INFO     | __main__:initialize_llm:177 - LLM initialization successful in 1.691s
2025-05-27 23:24:05 | DEBUG    | __main__:initialize_llm:178 - LLM test response: content='OK' additional_kwargs={} response_metadata={'token_usage': {'completion_tokens': 2, 'prompt_tokens': 42, 'total_tokens': 44, 'completion_time': 0.008495156, 'prompt_time': 0.003260201, 'queue_time': 0.057479069, 'total_time': 0.011755357}, 'model_name': 'llama-3.3-70b-versatile', 'system_fingerprint': 'fp_2ddfbb0da0', 'finish_reason': 'stop', 'logprobs': None} id='run--9ec17d98-8c36-4b47-930d-b4ac628e8ff5-0' usage_metadata={'input_tokens': 42, 'output_tokens': 2, 'total_tokens': 44}
2025-05-27 23:24:05 | INFO     | __main__:initialize_llm:179 - Using model: llama-3.3-70b-versatile
2025-05-27 23:24:05 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.initialize_llm | duration=1.713s
2025-05-27 23:24:05 | INFO     | decorators:wrapper:37 - PERFORMANCE: __main__.TextToSQLApp.initialize_llm took 1.713s
2025-05-27 23:24:06 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.setup_sql_agent | args=(<__main__.TextToSQLApp object at 0x000002A94BA5F250>,) | kwargs={}
2025-05-27 23:24:06 | INFO     | __main__:setup_sql_agent:190 - Setting up SQL agent
2025-05-27 23:24:06 | DEBUG    | __main__:setup_sql_agent:194 - SQL toolkit created successfully
2025-05-27 23:24:06 | DEBUG    | __main__:setup_sql_agent:227 - Creating SQL agent with custom prompt
2025-05-27 23:24:06 | SUCCESS  | __main__:setup_sql_agent:236 - SQL agent setup completed successfully
2025-05-27 23:24:06 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.setup_sql_agent | duration=0.003s
2025-05-27 23:24:06 | SUCCESS  | __main__:__init__:67 - Application initialized successfully
2025-05-27 23:24:06 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.run | args=(<__main__.TextToSQLApp object at 0x000002A94BA5F250>,) | kwargs={}
2025-05-27 23:24:06 | INFO     | __main__:run:611 - Starting main application runner
2025-05-27 23:24:06 | INFO     | __main__:<module>:815 - Application shutdown
2025-05-27 23:24:10 | INFO     | __main__:<module>:799 - ==================================================
2025-05-27 23:24:10 | INFO     | __main__:<module>:800 - Starting Text-to-SQL Application
2025-05-27 23:24:10 | INFO     | __main__:<module>:801 - Start time: 2025-05-27T23:24:10.842211
2025-05-27 23:24:10 | INFO     | __main__:<module>:802 - ==================================================
2025-05-27 23:24:10 | INFO     | __main__:__init__:58 - Initializing Text-to-SQL Application
2025-05-27 23:24:10 | INFO     | __main__:__init__:60 - Session ID: 20250527_232410
2025-05-27 23:24:10 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.setup_page_config | args=(<__main__.TextToSQLApp object at 0x000002A9398DB110>,) | kwargs={}
2025-05-27 23:24:10 | DEBUG    | __main__:setup_page_config:75 - Setting up Streamlit page configuration
2025-05-27 23:24:10 | INFO     | __main__:setup_page_config:88 - Page configuration set: {'page_title': 'Text-to-SQL Assistant', 'page_icon': 'üîç'}
2025-05-27 23:24:10 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.setup_page_config | duration=0.002s
2025-05-27 23:24:10 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.initialize_database | args=(<__main__.TextToSQLApp object at 0x000002A9398DB110>,) | kwargs={}
2025-05-27 23:24:10 | INFO     | __main__:initialize_database:94 - Initializing database connection
2025-05-27 23:24:10 | DEBUG    | __main__:initialize_database:97 - Database path: chinook.db
2025-05-27 23:24:10 | INFO     | __main__:initialize_database:105 - Database file size: 884736 bytes
2025-05-27 23:24:10 | INFO     | __main__:initialize_database:113 - Database connection test successful. Tables found: [(13,)]
2025-05-27 23:24:10 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.log_database_schema | args=(<__main__.TextToSQLApp object at 0x000002A9398DB110>,) | kwargs={}
2025-05-27 23:24:10 | INFO     | __main__:log_database_schema:132 - Database tables: [('albums',), ('sqlite_sequence',), ('artists',), ('customers',), ('employees',), ('genres',), ('invoices',), ('invoice_items',), ('media_types',), ('playlists',), ('playlist_track',), ('tracks',), ('sqlite_stat1',)]
2025-05-27 23:24:10 | DEBUG    | __main__:log_database_schema:140 - Schema for table albums: [(0, 'AlbumId', 'INTEGER', 1, None, 1), (1, 'Title', 'NVARCHAR(160)', 1, None, 0), (2, 'ArtistId', 'INTEGER', 1, None, 0)]
2025-05-27 23:24:10 | DEBUG    | __main__:log_database_schema:140 - Schema for table sqlite_sequence: [(0, 'name', '', 0, None, 0), (1, 'seq', '', 0, None, 0)]
2025-05-27 23:24:10 | DEBUG    | __main__:log_database_schema:140 - Schema for table artists: [(0, 'ArtistId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(120)', 0, None, 0)]
2025-05-27 23:24:10 | DEBUG    | __main__:log_database_schema:140 - Schema for table customers: [(0, 'CustomerId', 'INTEGER', 1, None, 1), (1, 'FirstName', 'NVARCHAR(40)', 1, None, 0), (2, 'LastName', 'NVARCHAR(20)', 1, None, 0), (3, 'Company', 'NVARCHAR(80)', 0, None, 0), (4, 'Address', 'NVARCHAR(70)', 0, None, 0), (5, 'City', 'NVARCHAR(40)', 0, None, 0), (6, 'State', 'NVARCHAR(40)', 0, None, 0), (7, 'Country', 'NVARCHAR(40)', 0, None, 0), (8, 'PostalCode', 'NVARCHAR(10)', 0, None, 0), (9, 'Phone', 'NVARCHAR(24)', 0, None, 0), (10, 'Fax', 'NVARCHAR(24)', 0, None, 0), (11, 'Email', 'NVARCHAR(60)', 1, None, 0), (12, 'SupportRepId', 'INTEGER', 0, None, 0)]
2025-05-27 23:24:10 | DEBUG    | __main__:log_database_schema:140 - Schema for table employees: [(0, 'EmployeeId', 'INTEGER', 1, None, 1), (1, 'LastName', 'NVARCHAR(20)', 1, None, 0), (2, 'FirstName', 'NVARCHAR(20)', 1, None, 0), (3, 'Title', 'NVARCHAR(30)', 0, None, 0), (4, 'ReportsTo', 'INTEGER', 0, None, 0), (5, 'BirthDate', 'DATETIME', 0, None, 0), (6, 'HireDate', 'DATETIME', 0, None, 0), (7, 'Address', 'NVARCHAR(70)', 0, None, 0), (8, 'City', 'NVARCHAR(40)', 0, None, 0), (9, 'State', 'NVARCHAR(40)', 0, None, 0), (10, 'Country', 'NVARCHAR(40)', 0, None, 0), (11, 'PostalCode', 'NVARCHAR(10)', 0, None, 0), (12, 'Phone', 'NVARCHAR(24)', 0, None, 0), (13, 'Fax', 'NVARCHAR(24)', 0, None, 0), (14, 'Email', 'NVARCHAR(60)', 0, None, 0)]
2025-05-27 23:24:10 | DEBUG    | __main__:log_database_schema:140 - Schema for table genres: [(0, 'GenreId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(120)', 0, None, 0)]
2025-05-27 23:24:10 | DEBUG    | __main__:log_database_schema:140 - Schema for table invoices: [(0, 'InvoiceId', 'INTEGER', 1, None, 1), (1, 'CustomerId', 'INTEGER', 1, None, 0), (2, 'InvoiceDate', 'DATETIME', 1, None, 0), (3, 'BillingAddress', 'NVARCHAR(70)', 0, None, 0), (4, 'BillingCity', 'NVARCHAR(40)', 0, None, 0), (5, 'BillingState', 'NVARCHAR(40)', 0, None, 0), (6, 'BillingCountry', 'NVARCHAR(40)', 0, None, 0), (7, 'BillingPostalCode', 'NVARCHAR(10)', 0, None, 0), (8, 'Total', 'NUMERIC(10,2)', 1, None, 0)]
2025-05-27 23:24:10 | DEBUG    | __main__:log_database_schema:140 - Schema for table invoice_items: [(0, 'InvoiceLineId', 'INTEGER', 1, None, 1), (1, 'InvoiceId', 'INTEGER', 1, None, 0), (2, 'TrackId', 'INTEGER', 1, None, 0), (3, 'UnitPrice', 'NUMERIC(10,2)', 1, None, 0), (4, 'Quantity', 'INTEGER', 1, None, 0)]
2025-05-27 23:24:10 | DEBUG    | __main__:log_database_schema:140 - Schema for table media_types: [(0, 'MediaTypeId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(120)', 0, None, 0)]
2025-05-27 23:24:10 | DEBUG    | __main__:log_database_schema:140 - Schema for table playlists: [(0, 'PlaylistId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(120)', 0, None, 0)]
2025-05-27 23:24:10 | DEBUG    | __main__:log_database_schema:140 - Schema for table playlist_track: [(0, 'PlaylistId', 'INTEGER', 1, None, 1), (1, 'TrackId', 'INTEGER', 1, None, 2)]
2025-05-27 23:24:10 | DEBUG    | __main__:log_database_schema:140 - Schema for table tracks: [(0, 'TrackId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(200)', 1, None, 0), (2, 'AlbumId', 'INTEGER', 0, None, 0), (3, 'MediaTypeId', 'INTEGER', 1, None, 0), (4, 'GenreId', 'INTEGER', 0, None, 0), (5, 'Composer', 'NVARCHAR(220)', 0, None, 0), (6, 'Milliseconds', 'INTEGER', 1, None, 0), (7, 'Bytes', 'INTEGER', 0, None, 0), (8, 'UnitPrice', 'NUMERIC(10,2)', 1, None, 0)]
2025-05-27 23:24:10 | DEBUG    | __main__:log_database_schema:140 - Schema for table sqlite_stat1: [(0, 'tbl', '', 0, None, 0), (1, 'idx', '', 0, None, 0), (2, 'stat', '', 0, None, 0)]
2025-05-27 23:24:10 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.log_database_schema | duration=0.013s
2025-05-27 23:24:10 | SUCCESS  | __main__:initialize_database:119 - Database initialization completed
2025-05-27 23:24:10 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.initialize_database | duration=0.066s
2025-05-27 23:24:10 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.initialize_llm | args=(<__main__.TextToSQLApp object at 0x000002A9398DB110>,) | kwargs={}
2025-05-27 23:24:10 | INFO     | __main__:initialize_llm:151 - Initializing Groq LLM
2025-05-27 23:24:10 | DEBUG    | __main__:initialize_llm:161 - Using Groq API key: gsk_sBCV***Lnql
2025-05-27 23:24:11 | INFO     | __main__:initialize_llm:177 - LLM initialization successful in 1.010s
2025-05-27 23:24:11 | DEBUG    | __main__:initialize_llm:178 - LLM test response: content='OK' additional_kwargs={} response_metadata={'token_usage': {'completion_tokens': 2, 'prompt_tokens': 42, 'total_tokens': 44, 'completion_time': 0.009677253, 'prompt_time': 0.001998405, 'queue_time': 0.054817144, 'total_time': 0.011675658}, 'model_name': 'llama-3.3-70b-versatile', 'system_fingerprint': 'fp_2ddfbb0da0', 'finish_reason': 'stop', 'logprobs': None} id='run--c0e837ad-3717-48b6-99cc-b2b439333d63-0' usage_metadata={'input_tokens': 42, 'output_tokens': 2, 'total_tokens': 44}
2025-05-27 23:24:11 | INFO     | __main__:initialize_llm:179 - Using model: llama-3.3-70b-versatile
2025-05-27 23:24:11 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.initialize_llm | duration=1.016s
2025-05-27 23:24:11 | INFO     | decorators:wrapper:37 - PERFORMANCE: __main__.TextToSQLApp.initialize_llm took 1.016s
2025-05-27 23:24:11 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.setup_sql_agent | args=(<__main__.TextToSQLApp object at 0x000002A9398DB110>,) | kwargs={}
2025-05-27 23:24:11 | INFO     | __main__:setup_sql_agent:190 - Setting up SQL agent
2025-05-27 23:24:11 | DEBUG    | __main__:setup_sql_agent:194 - SQL toolkit created successfully
2025-05-27 23:24:11 | DEBUG    | __main__:setup_sql_agent:227 - Creating SQL agent with custom prompt
2025-05-27 23:24:11 | SUCCESS  | __main__:setup_sql_agent:236 - SQL agent setup completed successfully
2025-05-27 23:24:11 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.setup_sql_agent | duration=0.000s
2025-05-27 23:24:11 | SUCCESS  | __main__:__init__:67 - Application initialized successfully
2025-05-27 23:24:11 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.run | args=(<__main__.TextToSQLApp object at 0x000002A9398DB110>,) | kwargs={}
2025-05-27 23:24:11 | INFO     | __main__:run:611 - Starting main application runner
2025-05-27 23:24:11 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.display_sample_queries | args=(<__main__.TextToSQLApp object at 0x000002A9398DB110>,) | kwargs={}
2025-05-27 23:24:11 | DEBUG    | __main__:display_sample_queries:558 - Displaying sample queries in sidebar
2025-05-27 23:24:11 | DEBUG    | __main__:display_sample_queries:575 - Displaying 10 sample queries
2025-05-27 23:24:11 | INFO     | __main__:display_sample_queries:579 - Sample query selected: Show me the top 10 best-selling tracks
2025-05-27 23:24:11 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.display_sample_queries | duration=0.011s
2025-05-27 23:24:11 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.display_logs_sidebar | args=(<__main__.TextToSQLApp object at 0x000002A9398DB110>,) | kwargs={}
2025-05-27 23:24:11 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.display_logs_sidebar | duration=0.001s
2025-05-27 23:24:11 | INFO     | __main__:run:633 - Using selected query: Show me the top 10 best-selling tracks
2025-05-27 23:24:11 | INFO     | __main__:run:726 - Main application runner completed successfully
2025-05-27 23:24:11 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.run | duration=0.035s
2025-05-27 23:24:11 | INFO     | __main__:<module>:807 - Application session completed successfully
2025-05-27 23:24:11 | INFO     | __main__:<module>:815 - Application shutdown
2025-05-27 23:24:23 | INFO     | __main__:<module>:799 - ==================================================
2025-05-27 23:24:23 | INFO     | __main__:<module>:800 - Starting Text-to-SQL Application
2025-05-27 23:24:23 | INFO     | __main__:<module>:801 - Start time: 2025-05-27T23:24:23.798681
2025-05-27 23:24:23 | INFO     | __main__:<module>:802 - ==================================================
2025-05-27 23:24:23 | INFO     | __main__:__init__:58 - Initializing Text-to-SQL Application
2025-05-27 23:24:23 | INFO     | __main__:__init__:60 - Session ID: 20250527_232423
2025-05-27 23:24:23 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.setup_page_config | args=(<__main__.TextToSQLApp object at 0x000002A94F83ACD0>,) | kwargs={}
2025-05-27 23:24:23 | DEBUG    | __main__:setup_page_config:75 - Setting up Streamlit page configuration
2025-05-27 23:24:23 | INFO     | __main__:setup_page_config:88 - Page configuration set: {'page_title': 'Text-to-SQL Assistant', 'page_icon': 'üîç'}
2025-05-27 23:24:23 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.setup_page_config | duration=0.003s
2025-05-27 23:24:23 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.initialize_database | args=(<__main__.TextToSQLApp object at 0x000002A94F83ACD0>,) | kwargs={}
2025-05-27 23:24:23 | INFO     | __main__:initialize_database:94 - Initializing database connection
2025-05-27 23:24:23 | DEBUG    | __main__:initialize_database:97 - Database path: chinook.db
2025-05-27 23:24:23 | INFO     | __main__:initialize_database:105 - Database file size: 884736 bytes
2025-05-27 23:24:23 | INFO     | __main__:initialize_database:113 - Database connection test successful. Tables found: [(13,)]
2025-05-27 23:24:23 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.log_database_schema | args=(<__main__.TextToSQLApp object at 0x000002A94F83ACD0>,) | kwargs={}
2025-05-27 23:24:23 | INFO     | __main__:log_database_schema:132 - Database tables: [('albums',), ('sqlite_sequence',), ('artists',), ('customers',), ('employees',), ('genres',), ('invoices',), ('invoice_items',), ('media_types',), ('playlists',), ('playlist_track',), ('tracks',), ('sqlite_stat1',)]
2025-05-27 23:24:23 | DEBUG    | __main__:log_database_schema:140 - Schema for table albums: [(0, 'AlbumId', 'INTEGER', 1, None, 1), (1, 'Title', 'NVARCHAR(160)', 1, None, 0), (2, 'ArtistId', 'INTEGER', 1, None, 0)]
2025-05-27 23:24:23 | DEBUG    | __main__:log_database_schema:140 - Schema for table sqlite_sequence: [(0, 'name', '', 0, None, 0), (1, 'seq', '', 0, None, 0)]
2025-05-27 23:24:23 | DEBUG    | __main__:log_database_schema:140 - Schema for table artists: [(0, 'ArtistId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(120)', 0, None, 0)]
2025-05-27 23:24:23 | DEBUG    | __main__:log_database_schema:140 - Schema for table customers: [(0, 'CustomerId', 'INTEGER', 1, None, 1), (1, 'FirstName', 'NVARCHAR(40)', 1, None, 0), (2, 'LastName', 'NVARCHAR(20)', 1, None, 0), (3, 'Company', 'NVARCHAR(80)', 0, None, 0), (4, 'Address', 'NVARCHAR(70)', 0, None, 0), (5, 'City', 'NVARCHAR(40)', 0, None, 0), (6, 'State', 'NVARCHAR(40)', 0, None, 0), (7, 'Country', 'NVARCHAR(40)', 0, None, 0), (8, 'PostalCode', 'NVARCHAR(10)', 0, None, 0), (9, 'Phone', 'NVARCHAR(24)', 0, None, 0), (10, 'Fax', 'NVARCHAR(24)', 0, None, 0), (11, 'Email', 'NVARCHAR(60)', 1, None, 0), (12, 'SupportRepId', 'INTEGER', 0, None, 0)]
2025-05-27 23:24:23 | DEBUG    | __main__:log_database_schema:140 - Schema for table employees: [(0, 'EmployeeId', 'INTEGER', 1, None, 1), (1, 'LastName', 'NVARCHAR(20)', 1, None, 0), (2, 'FirstName', 'NVARCHAR(20)', 1, None, 0), (3, 'Title', 'NVARCHAR(30)', 0, None, 0), (4, 'ReportsTo', 'INTEGER', 0, None, 0), (5, 'BirthDate', 'DATETIME', 0, None, 0), (6, 'HireDate', 'DATETIME', 0, None, 0), (7, 'Address', 'NVARCHAR(70)', 0, None, 0), (8, 'City', 'NVARCHAR(40)', 0, None, 0), (9, 'State', 'NVARCHAR(40)', 0, None, 0), (10, 'Country', 'NVARCHAR(40)', 0, None, 0), (11, 'PostalCode', 'NVARCHAR(10)', 0, None, 0), (12, 'Phone', 'NVARCHAR(24)', 0, None, 0), (13, 'Fax', 'NVARCHAR(24)', 0, None, 0), (14, 'Email', 'NVARCHAR(60)', 0, None, 0)]
2025-05-27 23:24:23 | DEBUG    | __main__:log_database_schema:140 - Schema for table genres: [(0, 'GenreId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(120)', 0, None, 0)]
2025-05-27 23:24:23 | DEBUG    | __main__:log_database_schema:140 - Schema for table invoices: [(0, 'InvoiceId', 'INTEGER', 1, None, 1), (1, 'CustomerId', 'INTEGER', 1, None, 0), (2, 'InvoiceDate', 'DATETIME', 1, None, 0), (3, 'BillingAddress', 'NVARCHAR(70)', 0, None, 0), (4, 'BillingCity', 'NVARCHAR(40)', 0, None, 0), (5, 'BillingState', 'NVARCHAR(40)', 0, None, 0), (6, 'BillingCountry', 'NVARCHAR(40)', 0, None, 0), (7, 'BillingPostalCode', 'NVARCHAR(10)', 0, None, 0), (8, 'Total', 'NUMERIC(10,2)', 1, None, 0)]
2025-05-27 23:24:23 | DEBUG    | __main__:log_database_schema:140 - Schema for table invoice_items: [(0, 'InvoiceLineId', 'INTEGER', 1, None, 1), (1, 'InvoiceId', 'INTEGER', 1, None, 0), (2, 'TrackId', 'INTEGER', 1, None, 0), (3, 'UnitPrice', 'NUMERIC(10,2)', 1, None, 0), (4, 'Quantity', 'INTEGER', 1, None, 0)]
2025-05-27 23:24:23 | DEBUG    | __main__:log_database_schema:140 - Schema for table media_types: [(0, 'MediaTypeId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(120)', 0, None, 0)]
2025-05-27 23:24:23 | DEBUG    | __main__:log_database_schema:140 - Schema for table playlists: [(0, 'PlaylistId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(120)', 0, None, 0)]
2025-05-27 23:24:23 | DEBUG    | __main__:log_database_schema:140 - Schema for table playlist_track: [(0, 'PlaylistId', 'INTEGER', 1, None, 1), (1, 'TrackId', 'INTEGER', 1, None, 2)]
2025-05-27 23:24:23 | DEBUG    | __main__:log_database_schema:140 - Schema for table tracks: [(0, 'TrackId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(200)', 1, None, 0), (2, 'AlbumId', 'INTEGER', 0, None, 0), (3, 'MediaTypeId', 'INTEGER', 1, None, 0), (4, 'GenreId', 'INTEGER', 0, None, 0), (5, 'Composer', 'NVARCHAR(220)', 0, None, 0), (6, 'Milliseconds', 'INTEGER', 1, None, 0), (7, 'Bytes', 'INTEGER', 0, None, 0), (8, 'UnitPrice', 'NUMERIC(10,2)', 1, None, 0)]
2025-05-27 23:24:23 | DEBUG    | __main__:log_database_schema:140 - Schema for table sqlite_stat1: [(0, 'tbl', '', 0, None, 0), (1, 'idx', '', 0, None, 0), (2, 'stat', '', 0, None, 0)]
2025-05-27 23:24:23 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.log_database_schema | duration=0.020s
2025-05-27 23:24:23 | SUCCESS  | __main__:initialize_database:119 - Database initialization completed
2025-05-27 23:24:23 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.initialize_database | duration=0.070s
2025-05-27 23:24:23 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.initialize_llm | args=(<__main__.TextToSQLApp object at 0x000002A94F83ACD0>,) | kwargs={}
2025-05-27 23:24:23 | INFO     | __main__:initialize_llm:151 - Initializing Groq LLM
2025-05-27 23:24:23 | DEBUG    | __main__:initialize_llm:161 - Using Groq API key: gsk_sBCV***Lnql
2025-05-27 23:24:24 | INFO     | __main__:<module>:799 - ==================================================
2025-05-27 23:24:24 | INFO     | __main__:<module>:800 - Starting Text-to-SQL Application
2025-05-27 23:24:24 | INFO     | __main__:<module>:801 - Start time: 2025-05-27T23:24:24.014537
2025-05-27 23:24:24 | INFO     | __main__:<module>:802 - ==================================================
2025-05-27 23:24:24 | INFO     | __main__:__init__:58 - Initializing Text-to-SQL Application
2025-05-27 23:24:24 | INFO     | __main__:__init__:60 - Session ID: 20250527_232424
2025-05-27 23:24:24 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.setup_page_config | args=(<__main__.TextToSQLApp object at 0x000002A94E2339D0>,) | kwargs={}
2025-05-27 23:24:24 | DEBUG    | __main__:setup_page_config:75 - Setting up Streamlit page configuration
2025-05-27 23:24:24 | INFO     | __main__:setup_page_config:88 - Page configuration set: {'page_title': 'Text-to-SQL Assistant', 'page_icon': 'üîç'}
2025-05-27 23:24:24 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.setup_page_config | duration=0.004s
2025-05-27 23:24:24 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.initialize_database | args=(<__main__.TextToSQLApp object at 0x000002A94E2339D0>,) | kwargs={}
2025-05-27 23:24:24 | INFO     | __main__:initialize_database:94 - Initializing database connection
2025-05-27 23:24:24 | DEBUG    | __main__:initialize_database:97 - Database path: chinook.db
2025-05-27 23:24:24 | INFO     | __main__:initialize_database:105 - Database file size: 884736 bytes
2025-05-27 23:24:24 | INFO     | __main__:initialize_database:113 - Database connection test successful. Tables found: [(13,)]
2025-05-27 23:24:24 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.log_database_schema | args=(<__main__.TextToSQLApp object at 0x000002A94E2339D0>,) | kwargs={}
2025-05-27 23:24:24 | INFO     | __main__:log_database_schema:132 - Database tables: [('albums',), ('sqlite_sequence',), ('artists',), ('customers',), ('employees',), ('genres',), ('invoices',), ('invoice_items',), ('media_types',), ('playlists',), ('playlist_track',), ('tracks',), ('sqlite_stat1',)]
2025-05-27 23:24:24 | DEBUG    | __main__:log_database_schema:140 - Schema for table albums: [(0, 'AlbumId', 'INTEGER', 1, None, 1), (1, 'Title', 'NVARCHAR(160)', 1, None, 0), (2, 'ArtistId', 'INTEGER', 1, None, 0)]
2025-05-27 23:24:24 | DEBUG    | __main__:log_database_schema:140 - Schema for table sqlite_sequence: [(0, 'name', '', 0, None, 0), (1, 'seq', '', 0, None, 0)]
2025-05-27 23:24:24 | DEBUG    | __main__:log_database_schema:140 - Schema for table artists: [(0, 'ArtistId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(120)', 0, None, 0)]
2025-05-27 23:24:24 | DEBUG    | __main__:log_database_schema:140 - Schema for table customers: [(0, 'CustomerId', 'INTEGER', 1, None, 1), (1, 'FirstName', 'NVARCHAR(40)', 1, None, 0), (2, 'LastName', 'NVARCHAR(20)', 1, None, 0), (3, 'Company', 'NVARCHAR(80)', 0, None, 0), (4, 'Address', 'NVARCHAR(70)', 0, None, 0), (5, 'City', 'NVARCHAR(40)', 0, None, 0), (6, 'State', 'NVARCHAR(40)', 0, None, 0), (7, 'Country', 'NVARCHAR(40)', 0, None, 0), (8, 'PostalCode', 'NVARCHAR(10)', 0, None, 0), (9, 'Phone', 'NVARCHAR(24)', 0, None, 0), (10, 'Fax', 'NVARCHAR(24)', 0, None, 0), (11, 'Email', 'NVARCHAR(60)', 1, None, 0), (12, 'SupportRepId', 'INTEGER', 0, None, 0)]
2025-05-27 23:24:24 | DEBUG    | __main__:log_database_schema:140 - Schema for table employees: [(0, 'EmployeeId', 'INTEGER', 1, None, 1), (1, 'LastName', 'NVARCHAR(20)', 1, None, 0), (2, 'FirstName', 'NVARCHAR(20)', 1, None, 0), (3, 'Title', 'NVARCHAR(30)', 0, None, 0), (4, 'ReportsTo', 'INTEGER', 0, None, 0), (5, 'BirthDate', 'DATETIME', 0, None, 0), (6, 'HireDate', 'DATETIME', 0, None, 0), (7, 'Address', 'NVARCHAR(70)', 0, None, 0), (8, 'City', 'NVARCHAR(40)', 0, None, 0), (9, 'State', 'NVARCHAR(40)', 0, None, 0), (10, 'Country', 'NVARCHAR(40)', 0, None, 0), (11, 'PostalCode', 'NVARCHAR(10)', 0, None, 0), (12, 'Phone', 'NVARCHAR(24)', 0, None, 0), (13, 'Fax', 'NVARCHAR(24)', 0, None, 0), (14, 'Email', 'NVARCHAR(60)', 0, None, 0)]
2025-05-27 23:24:24 | DEBUG    | __main__:log_database_schema:140 - Schema for table genres: [(0, 'GenreId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(120)', 0, None, 0)]
2025-05-27 23:24:24 | DEBUG    | __main__:log_database_schema:140 - Schema for table invoices: [(0, 'InvoiceId', 'INTEGER', 1, None, 1), (1, 'CustomerId', 'INTEGER', 1, None, 0), (2, 'InvoiceDate', 'DATETIME', 1, None, 0), (3, 'BillingAddress', 'NVARCHAR(70)', 0, None, 0), (4, 'BillingCity', 'NVARCHAR(40)', 0, None, 0), (5, 'BillingState', 'NVARCHAR(40)', 0, None, 0), (6, 'BillingCountry', 'NVARCHAR(40)', 0, None, 0), (7, 'BillingPostalCode', 'NVARCHAR(10)', 0, None, 0), (8, 'Total', 'NUMERIC(10,2)', 1, None, 0)]
2025-05-27 23:24:24 | DEBUG    | __main__:log_database_schema:140 - Schema for table invoice_items: [(0, 'InvoiceLineId', 'INTEGER', 1, None, 1), (1, 'InvoiceId', 'INTEGER', 1, None, 0), (2, 'TrackId', 'INTEGER', 1, None, 0), (3, 'UnitPrice', 'NUMERIC(10,2)', 1, None, 0), (4, 'Quantity', 'INTEGER', 1, None, 0)]
2025-05-27 23:24:24 | DEBUG    | __main__:log_database_schema:140 - Schema for table media_types: [(0, 'MediaTypeId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(120)', 0, None, 0)]
2025-05-27 23:24:24 | DEBUG    | __main__:log_database_schema:140 - Schema for table playlists: [(0, 'PlaylistId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(120)', 0, None, 0)]
2025-05-27 23:24:24 | DEBUG    | __main__:log_database_schema:140 - Schema for table playlist_track: [(0, 'PlaylistId', 'INTEGER', 1, None, 1), (1, 'TrackId', 'INTEGER', 1, None, 2)]
2025-05-27 23:24:24 | DEBUG    | __main__:log_database_schema:140 - Schema for table tracks: [(0, 'TrackId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(200)', 1, None, 0), (2, 'AlbumId', 'INTEGER', 0, None, 0), (3, 'MediaTypeId', 'INTEGER', 1, None, 0), (4, 'GenreId', 'INTEGER', 0, None, 0), (5, 'Composer', 'NVARCHAR(220)', 0, None, 0), (6, 'Milliseconds', 'INTEGER', 1, None, 0), (7, 'Bytes', 'INTEGER', 0, None, 0), (8, 'UnitPrice', 'NUMERIC(10,2)', 1, None, 0)]
2025-05-27 23:24:24 | DEBUG    | __main__:log_database_schema:140 - Schema for table sqlite_stat1: [(0, 'tbl', '', 0, None, 0), (1, 'idx', '', 0, None, 0), (2, 'stat', '', 0, None, 0)]
2025-05-27 23:24:24 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.log_database_schema | duration=0.012s
2025-05-27 23:24:24 | SUCCESS  | __main__:initialize_database:119 - Database initialization completed
2025-05-27 23:24:24 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.initialize_database | duration=0.087s
2025-05-27 23:24:24 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.initialize_llm | args=(<__main__.TextToSQLApp object at 0x000002A94E2339D0>,) | kwargs={}
2025-05-27 23:24:24 | INFO     | __main__:initialize_llm:151 - Initializing Groq LLM
2025-05-27 23:24:24 | DEBUG    | __main__:initialize_llm:161 - Using Groq API key: gsk_sBCV***Lnql
2025-05-27 23:24:25 | INFO     | __main__:initialize_llm:177 - LLM initialization successful in 1.185s
2025-05-27 23:24:25 | DEBUG    | __main__:initialize_llm:178 - LLM test response: content='OK' additional_kwargs={} response_metadata={'token_usage': {'completion_tokens': 2, 'prompt_tokens': 42, 'total_tokens': 44, 'completion_time': 0.009681482, 'prompt_time': 0.001974346, 'queue_time': 0.056957073999999996, 'total_time': 0.011655828}, 'model_name': 'llama-3.3-70b-versatile', 'system_fingerprint': 'fp_2ddfbb0da0', 'finish_reason': 'stop', 'logprobs': None} id='run--f4bba891-4e39-4200-9329-2298305fa6ca-0' usage_metadata={'input_tokens': 42, 'output_tokens': 2, 'total_tokens': 44}
2025-05-27 23:24:25 | INFO     | __main__:initialize_llm:179 - Using model: llama-3.3-70b-versatile
2025-05-27 23:24:25 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.initialize_llm | duration=1.186s
2025-05-27 23:24:25 | INFO     | decorators:wrapper:37 - PERFORMANCE: __main__.TextToSQLApp.initialize_llm took 1.186s
2025-05-27 23:24:25 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.setup_sql_agent | args=(<__main__.TextToSQLApp object at 0x000002A94F83ACD0>,) | kwargs={}
2025-05-27 23:24:25 | INFO     | __main__:setup_sql_agent:190 - Setting up SQL agent
2025-05-27 23:24:25 | DEBUG    | __main__:setup_sql_agent:194 - SQL toolkit created successfully
2025-05-27 23:24:25 | DEBUG    | __main__:setup_sql_agent:227 - Creating SQL agent with custom prompt
2025-05-27 23:24:25 | SUCCESS  | __main__:setup_sql_agent:236 - SQL agent setup completed successfully
2025-05-27 23:24:25 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.setup_sql_agent | duration=0.000s
2025-05-27 23:24:25 | SUCCESS  | __main__:__init__:67 - Application initialized successfully
2025-05-27 23:24:25 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.run | args=(<__main__.TextToSQLApp object at 0x000002A94F83ACD0>,) | kwargs={}
2025-05-27 23:24:25 | INFO     | __main__:run:611 - Starting main application runner
2025-05-27 23:24:25 | INFO     | __main__:<module>:815 - Application shutdown
2025-05-27 23:24:25 | INFO     | __main__:initialize_llm:177 - LLM initialization successful in 1.119s
2025-05-27 23:24:25 | DEBUG    | __main__:initialize_llm:178 - LLM test response: content='OK' additional_kwargs={} response_metadata={'token_usage': {'completion_tokens': 2, 'prompt_tokens': 42, 'total_tokens': 44, 'completion_time': 0.007907904, 'prompt_time': 0.010016337, 'queue_time': 0.055998782999999996, 'total_time': 0.017924241}, 'model_name': 'llama-3.3-70b-versatile', 'system_fingerprint': 'fp_2ddfbb0da0', 'finish_reason': 'stop', 'logprobs': None} id='run--95003c66-7798-4461-a1f0-e1307ea0cdaf-0' usage_metadata={'input_tokens': 42, 'output_tokens': 2, 'total_tokens': 44}
2025-05-27 23:24:25 | INFO     | __main__:initialize_llm:179 - Using model: llama-3.3-70b-versatile
2025-05-27 23:24:25 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.initialize_llm | duration=1.120s
2025-05-27 23:24:25 | INFO     | decorators:wrapper:37 - PERFORMANCE: __main__.TextToSQLApp.initialize_llm took 1.120s
2025-05-27 23:24:25 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.setup_sql_agent | args=(<__main__.TextToSQLApp object at 0x000002A94E2339D0>,) | kwargs={}
2025-05-27 23:24:25 | INFO     | __main__:setup_sql_agent:190 - Setting up SQL agent
2025-05-27 23:24:25 | DEBUG    | __main__:setup_sql_agent:194 - SQL toolkit created successfully
2025-05-27 23:24:25 | DEBUG    | __main__:setup_sql_agent:227 - Creating SQL agent with custom prompt
2025-05-27 23:24:25 | SUCCESS  | __main__:setup_sql_agent:236 - SQL agent setup completed successfully
2025-05-27 23:24:25 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.setup_sql_agent | duration=0.009s
2025-05-27 23:24:25 | SUCCESS  | __main__:__init__:67 - Application initialized successfully
2025-05-27 23:24:25 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.run | args=(<__main__.TextToSQLApp object at 0x000002A94E2339D0>,) | kwargs={}
2025-05-27 23:24:25 | INFO     | __main__:run:611 - Starting main application runner
2025-05-27 23:24:25 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.display_sample_queries | args=(<__main__.TextToSQLApp object at 0x000002A94E2339D0>,) | kwargs={}
2025-05-27 23:24:25 | DEBUG    | __main__:display_sample_queries:558 - Displaying sample queries in sidebar
2025-05-27 23:24:25 | DEBUG    | __main__:display_sample_queries:575 - Displaying 10 sample queries
2025-05-27 23:24:25 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.display_sample_queries | duration=0.009s
2025-05-27 23:24:25 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.display_logs_sidebar | args=(<__main__.TextToSQLApp object at 0x000002A94E2339D0>,) | kwargs={}
2025-05-27 23:24:25 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.display_logs_sidebar | duration=0.001s
2025-05-27 23:24:25 | WARNING  | __main__:run:702 - Process button clicked but no query provided
2025-05-27 23:24:25 | INFO     | __main__:run:726 - Main application runner completed successfully
2025-05-27 23:24:25 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.run | duration=0.025s
2025-05-27 23:24:25 | INFO     | __main__:<module>:807 - Application session completed successfully
2025-05-27 23:24:25 | INFO     | __main__:<module>:815 - Application shutdown
2025-05-27 23:47:05 | INFO     | logger_config:setup_logger:65 - Logger initialized successfully
2025-05-27 23:47:05 | INFO     | logger_config:setup_logger:65 - Logger initialized successfully
2025-05-27 23:47:05 | INFO     | __main__:<module>:971 - ==================================================
2025-05-27 23:47:05 | INFO     | __main__:<module>:972 - Starting Text-to-SQL Application
2025-05-27 23:47:05 | INFO     | __main__:<module>:973 - Start time: 2025-05-27T23:47:05.710559
2025-05-27 23:47:05 | INFO     | __main__:<module>:974 - ==================================================
2025-05-27 23:47:05 | INFO     | __main__:__init__:58 - Initializing Text-to-SQL Application
2025-05-27 23:47:05 | INFO     | __main__:__init__:60 - Session ID: 20250527_234705
2025-05-27 23:47:05 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.setup_page_config | args=(<__main__.TextToSQLApp object at 0x000002A94E3C9E10>,) | kwargs={}
2025-05-27 23:47:05 | DEBUG    | __main__:setup_page_config:75 - Setting up Streamlit page configuration
2025-05-27 23:47:05 | INFO     | __main__:setup_page_config:88 - Page configuration set: {'page_title': 'Text-to-SQL Assistant', 'page_icon': 'üîç'}
2025-05-27 23:47:05 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.setup_page_config | duration=0.001s
2025-05-27 23:47:05 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.initialize_database | args=(<__main__.TextToSQLApp object at 0x000002A94E3C9E10>,) | kwargs={}
2025-05-27 23:47:05 | INFO     | __main__:initialize_database:94 - Initializing database connection
2025-05-27 23:47:05 | DEBUG    | __main__:initialize_database:97 - Database path: chinook.db
2025-05-27 23:47:05 | INFO     | __main__:initialize_database:105 - Database file size: 884736 bytes
2025-05-27 23:47:05 | INFO     | __main__:initialize_database:113 - Database connection test successful. Tables found: [(13,)]
2025-05-27 23:47:05 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.log_database_schema | args=(<__main__.TextToSQLApp object at 0x000002A94E3C9E10>,) | kwargs={}
2025-05-27 23:47:05 | INFO     | __main__:log_database_schema:132 - Database tables: [('albums',), ('sqlite_sequence',), ('artists',), ('customers',), ('employees',), ('genres',), ('invoices',), ('invoice_items',), ('media_types',), ('playlists',), ('playlist_track',), ('tracks',), ('sqlite_stat1',)]
2025-05-27 23:47:05 | DEBUG    | __main__:log_database_schema:140 - Schema for table albums: [(0, 'AlbumId', 'INTEGER', 1, None, 1), (1, 'Title', 'NVARCHAR(160)', 1, None, 0), (2, 'ArtistId', 'INTEGER', 1, None, 0)]
2025-05-27 23:47:05 | DEBUG    | __main__:log_database_schema:140 - Schema for table sqlite_sequence: [(0, 'name', '', 0, None, 0), (1, 'seq', '', 0, None, 0)]
2025-05-27 23:47:05 | DEBUG    | __main__:log_database_schema:140 - Schema for table artists: [(0, 'ArtistId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(120)', 0, None, 0)]
2025-05-27 23:47:05 | DEBUG    | __main__:log_database_schema:140 - Schema for table customers: [(0, 'CustomerId', 'INTEGER', 1, None, 1), (1, 'FirstName', 'NVARCHAR(40)', 1, None, 0), (2, 'LastName', 'NVARCHAR(20)', 1, None, 0), (3, 'Company', 'NVARCHAR(80)', 0, None, 0), (4, 'Address', 'NVARCHAR(70)', 0, None, 0), (5, 'City', 'NVARCHAR(40)', 0, None, 0), (6, 'State', 'NVARCHAR(40)', 0, None, 0), (7, 'Country', 'NVARCHAR(40)', 0, None, 0), (8, 'PostalCode', 'NVARCHAR(10)', 0, None, 0), (9, 'Phone', 'NVARCHAR(24)', 0, None, 0), (10, 'Fax', 'NVARCHAR(24)', 0, None, 0), (11, 'Email', 'NVARCHAR(60)', 1, None, 0), (12, 'SupportRepId', 'INTEGER', 0, None, 0)]
2025-05-27 23:47:05 | DEBUG    | __main__:log_database_schema:140 - Schema for table employees: [(0, 'EmployeeId', 'INTEGER', 1, None, 1), (1, 'LastName', 'NVARCHAR(20)', 1, None, 0), (2, 'FirstName', 'NVARCHAR(20)', 1, None, 0), (3, 'Title', 'NVARCHAR(30)', 0, None, 0), (4, 'ReportsTo', 'INTEGER', 0, None, 0), (5, 'BirthDate', 'DATETIME', 0, None, 0), (6, 'HireDate', 'DATETIME', 0, None, 0), (7, 'Address', 'NVARCHAR(70)', 0, None, 0), (8, 'City', 'NVARCHAR(40)', 0, None, 0), (9, 'State', 'NVARCHAR(40)', 0, None, 0), (10, 'Country', 'NVARCHAR(40)', 0, None, 0), (11, 'PostalCode', 'NVARCHAR(10)', 0, None, 0), (12, 'Phone', 'NVARCHAR(24)', 0, None, 0), (13, 'Fax', 'NVARCHAR(24)', 0, None, 0), (14, 'Email', 'NVARCHAR(60)', 0, None, 0)]
2025-05-27 23:47:05 | DEBUG    | __main__:log_database_schema:140 - Schema for table genres: [(0, 'GenreId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(120)', 0, None, 0)]
2025-05-27 23:47:05 | DEBUG    | __main__:log_database_schema:140 - Schema for table invoices: [(0, 'InvoiceId', 'INTEGER', 1, None, 1), (1, 'CustomerId', 'INTEGER', 1, None, 0), (2, 'InvoiceDate', 'DATETIME', 1, None, 0), (3, 'BillingAddress', 'NVARCHAR(70)', 0, None, 0), (4, 'BillingCity', 'NVARCHAR(40)', 0, None, 0), (5, 'BillingState', 'NVARCHAR(40)', 0, None, 0), (6, 'BillingCountry', 'NVARCHAR(40)', 0, None, 0), (7, 'BillingPostalCode', 'NVARCHAR(10)', 0, None, 0), (8, 'Total', 'NUMERIC(10,2)', 1, None, 0)]
2025-05-27 23:47:05 | DEBUG    | __main__:log_database_schema:140 - Schema for table invoice_items: [(0, 'InvoiceLineId', 'INTEGER', 1, None, 1), (1, 'InvoiceId', 'INTEGER', 1, None, 0), (2, 'TrackId', 'INTEGER', 1, None, 0), (3, 'UnitPrice', 'NUMERIC(10,2)', 1, None, 0), (4, 'Quantity', 'INTEGER', 1, None, 0)]
2025-05-27 23:47:05 | DEBUG    | __main__:log_database_schema:140 - Schema for table media_types: [(0, 'MediaTypeId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(120)', 0, None, 0)]
2025-05-27 23:47:05 | DEBUG    | __main__:log_database_schema:140 - Schema for table playlists: [(0, 'PlaylistId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(120)', 0, None, 0)]
2025-05-27 23:47:05 | DEBUG    | __main__:log_database_schema:140 - Schema for table playlist_track: [(0, 'PlaylistId', 'INTEGER', 1, None, 1), (1, 'TrackId', 'INTEGER', 1, None, 2)]
2025-05-27 23:47:05 | DEBUG    | __main__:log_database_schema:140 - Schema for table tracks: [(0, 'TrackId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(200)', 1, None, 0), (2, 'AlbumId', 'INTEGER', 0, None, 0), (3, 'MediaTypeId', 'INTEGER', 1, None, 0), (4, 'GenreId', 'INTEGER', 0, None, 0), (5, 'Composer', 'NVARCHAR(220)', 0, None, 0), (6, 'Milliseconds', 'INTEGER', 1, None, 0), (7, 'Bytes', 'INTEGER', 0, None, 0), (8, 'UnitPrice', 'NUMERIC(10,2)', 1, None, 0)]
2025-05-27 23:47:05 | DEBUG    | __main__:log_database_schema:140 - Schema for table sqlite_stat1: [(0, 'tbl', '', 0, None, 0), (1, 'idx', '', 0, None, 0), (2, 'stat', '', 0, None, 0)]
2025-05-27 23:47:05 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.log_database_schema | duration=0.018s
2025-05-27 23:47:05 | SUCCESS  | __main__:initialize_database:119 - Database initialization completed
2025-05-27 23:47:05 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.initialize_database | duration=0.087s
2025-05-27 23:47:05 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.initialize_llm | args=(<__main__.TextToSQLApp object at 0x000002A94E3C9E10>,) | kwargs={}
2025-05-27 23:47:05 | INFO     | __main__:initialize_llm:151 - Initializing Groq LLM
2025-05-27 23:47:05 | DEBUG    | __main__:initialize_llm:161 - Using Groq API key: gsk_sBCV***Lnql
2025-05-27 23:47:07 | INFO     | __main__:initialize_llm:177 - LLM initialization successful in 1.373s
2025-05-27 23:47:07 | DEBUG    | __main__:initialize_llm:178 - LLM test response: content='OK' additional_kwargs={} response_metadata={'token_usage': {'completion_tokens': 2, 'prompt_tokens': 42, 'total_tokens': 44, 'completion_time': 0.008990626, 'prompt_time': 0.002867318, 'queue_time': 0.053342661, 'total_time': 0.011857944}, 'model_name': 'llama-3.3-70b-versatile', 'system_fingerprint': 'fp_2ddfbb0da0', 'finish_reason': 'stop', 'logprobs': None} id='run--8c6bc691-aaa4-47ab-9042-62d3110c638c-0' usage_metadata={'input_tokens': 42, 'output_tokens': 2, 'total_tokens': 44}
2025-05-27 23:47:07 | INFO     | __main__:initialize_llm:179 - Using model: llama-3.3-70b-versatile
2025-05-27 23:47:07 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.initialize_llm | duration=1.374s
2025-05-27 23:47:07 | INFO     | decorators:wrapper:37 - PERFORMANCE: __main__.TextToSQLApp.initialize_llm took 1.374s
2025-05-27 23:47:07 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.setup_sql_agent | args=(<__main__.TextToSQLApp object at 0x000002A94E3C9E10>,) | kwargs={}
2025-05-27 23:47:07 | INFO     | __main__:setup_sql_agent:190 - Setting up SQL agent
2025-05-27 23:47:07 | DEBUG    | __main__:setup_sql_agent:194 - SQL toolkit created successfully
2025-05-27 23:47:07 | DEBUG    | __main__:setup_sql_agent:227 - Creating SQL agent with custom prompt
2025-05-27 23:47:07 | SUCCESS  | __main__:setup_sql_agent:236 - SQL agent setup completed successfully
2025-05-27 23:47:07 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.setup_sql_agent | duration=0.000s
2025-05-27 23:47:07 | SUCCESS  | __main__:__init__:67 - Application initialized successfully
2025-05-27 23:47:07 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.run | args=(<__main__.TextToSQLApp object at 0x000002A94E3C9E10>,) | kwargs={}
2025-05-27 23:47:07 | INFO     | __main__:run:627 - Starting main application runner
2025-05-27 23:47:07 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.display_logs_sidebar | args=(<__main__.TextToSQLApp object at 0x000002A94E3C9E10>,) | kwargs={}
2025-05-27 23:47:07 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.display_logs_sidebar | duration=0.000s
2025-05-27 23:47:07 | INFO     | __main__:run:770 - Main application runner completed successfully
2025-05-27 23:47:07 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.run | duration=0.020s
2025-05-27 23:47:07 | INFO     | __main__:<module>:979 - Application session completed successfully
2025-05-27 23:47:07 | INFO     | __main__:<module>:987 - Application shutdown
2025-05-27 23:47:11 | INFO     | logger_config:setup_logger:65 - Logger initialized successfully
2025-05-27 23:47:11 | INFO     | __main__:<module>:971 - ==================================================
2025-05-27 23:47:11 | INFO     | __main__:<module>:972 - Starting Text-to-SQL Application
2025-05-27 23:47:11 | INFO     | __main__:<module>:973 - Start time: 2025-05-27T23:47:11.861542
2025-05-27 23:47:11 | INFO     | __main__:<module>:974 - ==================================================
2025-05-27 23:47:11 | INFO     | __main__:__init__:58 - Initializing Text-to-SQL Application
2025-05-27 23:47:11 | INFO     | __main__:__init__:60 - Session ID: 20250527_234711
2025-05-27 23:47:11 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.setup_page_config | args=(<__main__.TextToSQLApp object at 0x000002A94E418C50>,) | kwargs={}
2025-05-27 23:47:11 | DEBUG    | __main__:setup_page_config:75 - Setting up Streamlit page configuration
2025-05-27 23:47:11 | INFO     | __main__:setup_page_config:88 - Page configuration set: {'page_title': 'Text-to-SQL Assistant', 'page_icon': 'üîç'}
2025-05-27 23:47:11 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.setup_page_config | duration=0.001s
2025-05-27 23:47:11 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.initialize_database | args=(<__main__.TextToSQLApp object at 0x000002A94E418C50>,) | kwargs={}
2025-05-27 23:47:11 | INFO     | __main__:initialize_database:94 - Initializing database connection
2025-05-27 23:47:11 | DEBUG    | __main__:initialize_database:97 - Database path: chinook.db
2025-05-27 23:47:11 | INFO     | __main__:initialize_database:105 - Database file size: 884736 bytes
2025-05-27 23:47:11 | INFO     | __main__:initialize_database:113 - Database connection test successful. Tables found: [(13,)]
2025-05-27 23:47:11 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.log_database_schema | args=(<__main__.TextToSQLApp object at 0x000002A94E418C50>,) | kwargs={}
2025-05-27 23:47:11 | INFO     | __main__:log_database_schema:132 - Database tables: [('albums',), ('sqlite_sequence',), ('artists',), ('customers',), ('employees',), ('genres',), ('invoices',), ('invoice_items',), ('media_types',), ('playlists',), ('playlist_track',), ('tracks',), ('sqlite_stat1',)]
2025-05-27 23:47:11 | DEBUG    | __main__:log_database_schema:140 - Schema for table albums: [(0, 'AlbumId', 'INTEGER', 1, None, 1), (1, 'Title', 'NVARCHAR(160)', 1, None, 0), (2, 'ArtistId', 'INTEGER', 1, None, 0)]
2025-05-27 23:47:11 | DEBUG    | __main__:log_database_schema:140 - Schema for table sqlite_sequence: [(0, 'name', '', 0, None, 0), (1, 'seq', '', 0, None, 0)]
2025-05-27 23:47:11 | DEBUG    | __main__:log_database_schema:140 - Schema for table artists: [(0, 'ArtistId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(120)', 0, None, 0)]
2025-05-27 23:47:11 | DEBUG    | __main__:log_database_schema:140 - Schema for table customers: [(0, 'CustomerId', 'INTEGER', 1, None, 1), (1, 'FirstName', 'NVARCHAR(40)', 1, None, 0), (2, 'LastName', 'NVARCHAR(20)', 1, None, 0), (3, 'Company', 'NVARCHAR(80)', 0, None, 0), (4, 'Address', 'NVARCHAR(70)', 0, None, 0), (5, 'City', 'NVARCHAR(40)', 0, None, 0), (6, 'State', 'NVARCHAR(40)', 0, None, 0), (7, 'Country', 'NVARCHAR(40)', 0, None, 0), (8, 'PostalCode', 'NVARCHAR(10)', 0, None, 0), (9, 'Phone', 'NVARCHAR(24)', 0, None, 0), (10, 'Fax', 'NVARCHAR(24)', 0, None, 0), (11, 'Email', 'NVARCHAR(60)', 1, None, 0), (12, 'SupportRepId', 'INTEGER', 0, None, 0)]
2025-05-27 23:47:11 | DEBUG    | __main__:log_database_schema:140 - Schema for table employees: [(0, 'EmployeeId', 'INTEGER', 1, None, 1), (1, 'LastName', 'NVARCHAR(20)', 1, None, 0), (2, 'FirstName', 'NVARCHAR(20)', 1, None, 0), (3, 'Title', 'NVARCHAR(30)', 0, None, 0), (4, 'ReportsTo', 'INTEGER', 0, None, 0), (5, 'BirthDate', 'DATETIME', 0, None, 0), (6, 'HireDate', 'DATETIME', 0, None, 0), (7, 'Address', 'NVARCHAR(70)', 0, None, 0), (8, 'City', 'NVARCHAR(40)', 0, None, 0), (9, 'State', 'NVARCHAR(40)', 0, None, 0), (10, 'Country', 'NVARCHAR(40)', 0, None, 0), (11, 'PostalCode', 'NVARCHAR(10)', 0, None, 0), (12, 'Phone', 'NVARCHAR(24)', 0, None, 0), (13, 'Fax', 'NVARCHAR(24)', 0, None, 0), (14, 'Email', 'NVARCHAR(60)', 0, None, 0)]
2025-05-27 23:47:11 | DEBUG    | __main__:log_database_schema:140 - Schema for table genres: [(0, 'GenreId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(120)', 0, None, 0)]
2025-05-27 23:47:11 | DEBUG    | __main__:log_database_schema:140 - Schema for table invoices: [(0, 'InvoiceId', 'INTEGER', 1, None, 1), (1, 'CustomerId', 'INTEGER', 1, None, 0), (2, 'InvoiceDate', 'DATETIME', 1, None, 0), (3, 'BillingAddress', 'NVARCHAR(70)', 0, None, 0), (4, 'BillingCity', 'NVARCHAR(40)', 0, None, 0), (5, 'BillingState', 'NVARCHAR(40)', 0, None, 0), (6, 'BillingCountry', 'NVARCHAR(40)', 0, None, 0), (7, 'BillingPostalCode', 'NVARCHAR(10)', 0, None, 0), (8, 'Total', 'NUMERIC(10,2)', 1, None, 0)]
2025-05-27 23:47:11 | DEBUG    | __main__:log_database_schema:140 - Schema for table invoice_items: [(0, 'InvoiceLineId', 'INTEGER', 1, None, 1), (1, 'InvoiceId', 'INTEGER', 1, None, 0), (2, 'TrackId', 'INTEGER', 1, None, 0), (3, 'UnitPrice', 'NUMERIC(10,2)', 1, None, 0), (4, 'Quantity', 'INTEGER', 1, None, 0)]
2025-05-27 23:47:11 | DEBUG    | __main__:log_database_schema:140 - Schema for table media_types: [(0, 'MediaTypeId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(120)', 0, None, 0)]
2025-05-27 23:47:11 | DEBUG    | __main__:log_database_schema:140 - Schema for table playlists: [(0, 'PlaylistId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(120)', 0, None, 0)]
2025-05-27 23:47:11 | DEBUG    | __main__:log_database_schema:140 - Schema for table playlist_track: [(0, 'PlaylistId', 'INTEGER', 1, None, 1), (1, 'TrackId', 'INTEGER', 1, None, 2)]
2025-05-27 23:47:11 | DEBUG    | __main__:log_database_schema:140 - Schema for table tracks: [(0, 'TrackId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(200)', 1, None, 0), (2, 'AlbumId', 'INTEGER', 0, None, 0), (3, 'MediaTypeId', 'INTEGER', 1, None, 0), (4, 'GenreId', 'INTEGER', 0, None, 0), (5, 'Composer', 'NVARCHAR(220)', 0, None, 0), (6, 'Milliseconds', 'INTEGER', 1, None, 0), (7, 'Bytes', 'INTEGER', 0, None, 0), (8, 'UnitPrice', 'NUMERIC(10,2)', 1, None, 0)]
2025-05-27 23:47:11 | DEBUG    | __main__:log_database_schema:140 - Schema for table sqlite_stat1: [(0, 'tbl', '', 0, None, 0), (1, 'idx', '', 0, None, 0), (2, 'stat', '', 0, None, 0)]
2025-05-27 23:47:11 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.log_database_schema | duration=0.016s
2025-05-27 23:47:11 | SUCCESS  | __main__:initialize_database:119 - Database initialization completed
2025-05-27 23:47:11 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.initialize_database | duration=0.079s
2025-05-27 23:47:11 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.initialize_llm | args=(<__main__.TextToSQLApp object at 0x000002A94E418C50>,) | kwargs={}
2025-05-27 23:47:11 | INFO     | __main__:initialize_llm:151 - Initializing Groq LLM
2025-05-27 23:47:11 | DEBUG    | __main__:initialize_llm:161 - Using Groq API key: gsk_sBCV***Lnql
2025-05-27 23:47:12 | INFO     | __main__:initialize_llm:177 - LLM initialization successful in 1.035s
2025-05-27 23:47:12 | DEBUG    | __main__:initialize_llm:178 - LLM test response: content='OK' additional_kwargs={} response_metadata={'token_usage': {'completion_tokens': 2, 'prompt_tokens': 42, 'total_tokens': 44, 'completion_time': 0.00868645, 'prompt_time': 0.003207397, 'queue_time': 0.053893992, 'total_time': 0.011893847}, 'model_name': 'llama-3.3-70b-versatile', 'system_fingerprint': 'fp_3f3b593e33', 'finish_reason': 'stop', 'logprobs': None} id='run--bbf8318c-ff19-434b-8d2e-ba9956f04f63-0' usage_metadata={'input_tokens': 42, 'output_tokens': 2, 'total_tokens': 44}
2025-05-27 23:47:12 | INFO     | __main__:initialize_llm:179 - Using model: llama-3.3-70b-versatile
2025-05-27 23:47:12 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.initialize_llm | duration=1.036s
2025-05-27 23:47:12 | INFO     | decorators:wrapper:37 - PERFORMANCE: __main__.TextToSQLApp.initialize_llm took 1.036s
2025-05-27 23:47:12 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.setup_sql_agent | args=(<__main__.TextToSQLApp object at 0x000002A94E418C50>,) | kwargs={}
2025-05-27 23:47:12 | INFO     | __main__:setup_sql_agent:190 - Setting up SQL agent
2025-05-27 23:47:12 | DEBUG    | __main__:setup_sql_agent:194 - SQL toolkit created successfully
2025-05-27 23:47:12 | DEBUG    | __main__:setup_sql_agent:227 - Creating SQL agent with custom prompt
2025-05-27 23:47:12 | SUCCESS  | __main__:setup_sql_agent:236 - SQL agent setup completed successfully
2025-05-27 23:47:12 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.setup_sql_agent | duration=0.000s
2025-05-27 23:47:12 | SUCCESS  | __main__:__init__:67 - Application initialized successfully
2025-05-27 23:47:12 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.run | args=(<__main__.TextToSQLApp object at 0x000002A94E418C50>,) | kwargs={}
2025-05-27 23:47:12 | INFO     | __main__:run:627 - Starting main application runner
2025-05-27 23:47:12 | INFO     | __main__:run:660 - Sample query selected: Show me the top 10 best-selling tracks
2025-05-27 23:47:13 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.display_logs_sidebar | args=(<__main__.TextToSQLApp object at 0x000002A94E418C50>,) | kwargs={}
2025-05-27 23:47:13 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.display_logs_sidebar | duration=0.001s
2025-05-27 23:47:13 | INFO     | __main__:run:770 - Main application runner completed successfully
2025-05-27 23:47:13 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.run | duration=0.032s
2025-05-27 23:47:13 | INFO     | __main__:<module>:979 - Application session completed successfully
2025-05-27 23:47:13 | INFO     | __main__:<module>:987 - Application shutdown
2025-05-27 23:47:15 | INFO     | logger_config:setup_logger:65 - Logger initialized successfully
2025-05-27 23:47:15 | INFO     | __main__:<module>:971 - ==================================================
2025-05-27 23:47:15 | INFO     | __main__:<module>:972 - Starting Text-to-SQL Application
2025-05-27 23:47:15 | INFO     | __main__:<module>:973 - Start time: 2025-05-27T23:47:15.271844
2025-05-27 23:47:15 | INFO     | __main__:<module>:974 - ==================================================
2025-05-27 23:47:15 | INFO     | __main__:__init__:58 - Initializing Text-to-SQL Application
2025-05-27 23:47:15 | INFO     | __main__:__init__:60 - Session ID: 20250527_234715
2025-05-27 23:47:15 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.setup_page_config | args=(<__main__.TextToSQLApp object at 0x000002A94E47F710>,) | kwargs={}
2025-05-27 23:47:15 | DEBUG    | __main__:setup_page_config:75 - Setting up Streamlit page configuration
2025-05-27 23:47:15 | INFO     | __main__:setup_page_config:88 - Page configuration set: {'page_title': 'Text-to-SQL Assistant', 'page_icon': 'üîç'}
2025-05-27 23:47:15 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.setup_page_config | duration=0.001s
2025-05-27 23:47:15 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.initialize_database | args=(<__main__.TextToSQLApp object at 0x000002A94E47F710>,) | kwargs={}
2025-05-27 23:47:15 | INFO     | __main__:initialize_database:94 - Initializing database connection
2025-05-27 23:47:15 | DEBUG    | __main__:initialize_database:97 - Database path: chinook.db
2025-05-27 23:47:15 | INFO     | __main__:initialize_database:105 - Database file size: 884736 bytes
2025-05-27 23:47:15 | INFO     | __main__:initialize_database:113 - Database connection test successful. Tables found: [(13,)]
2025-05-27 23:47:15 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.log_database_schema | args=(<__main__.TextToSQLApp object at 0x000002A94E47F710>,) | kwargs={}
2025-05-27 23:47:15 | INFO     | __main__:log_database_schema:132 - Database tables: [('albums',), ('sqlite_sequence',), ('artists',), ('customers',), ('employees',), ('genres',), ('invoices',), ('invoice_items',), ('media_types',), ('playlists',), ('playlist_track',), ('tracks',), ('sqlite_stat1',)]
2025-05-27 23:47:15 | DEBUG    | __main__:log_database_schema:140 - Schema for table albums: [(0, 'AlbumId', 'INTEGER', 1, None, 1), (1, 'Title', 'NVARCHAR(160)', 1, None, 0), (2, 'ArtistId', 'INTEGER', 1, None, 0)]
2025-05-27 23:47:15 | DEBUG    | __main__:log_database_schema:140 - Schema for table sqlite_sequence: [(0, 'name', '', 0, None, 0), (1, 'seq', '', 0, None, 0)]
2025-05-27 23:47:15 | DEBUG    | __main__:log_database_schema:140 - Schema for table artists: [(0, 'ArtistId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(120)', 0, None, 0)]
2025-05-27 23:47:15 | DEBUG    | __main__:log_database_schema:140 - Schema for table customers: [(0, 'CustomerId', 'INTEGER', 1, None, 1), (1, 'FirstName', 'NVARCHAR(40)', 1, None, 0), (2, 'LastName', 'NVARCHAR(20)', 1, None, 0), (3, 'Company', 'NVARCHAR(80)', 0, None, 0), (4, 'Address', 'NVARCHAR(70)', 0, None, 0), (5, 'City', 'NVARCHAR(40)', 0, None, 0), (6, 'State', 'NVARCHAR(40)', 0, None, 0), (7, 'Country', 'NVARCHAR(40)', 0, None, 0), (8, 'PostalCode', 'NVARCHAR(10)', 0, None, 0), (9, 'Phone', 'NVARCHAR(24)', 0, None, 0), (10, 'Fax', 'NVARCHAR(24)', 0, None, 0), (11, 'Email', 'NVARCHAR(60)', 1, None, 0), (12, 'SupportRepId', 'INTEGER', 0, None, 0)]
2025-05-27 23:47:15 | DEBUG    | __main__:log_database_schema:140 - Schema for table employees: [(0, 'EmployeeId', 'INTEGER', 1, None, 1), (1, 'LastName', 'NVARCHAR(20)', 1, None, 0), (2, 'FirstName', 'NVARCHAR(20)', 1, None, 0), (3, 'Title', 'NVARCHAR(30)', 0, None, 0), (4, 'ReportsTo', 'INTEGER', 0, None, 0), (5, 'BirthDate', 'DATETIME', 0, None, 0), (6, 'HireDate', 'DATETIME', 0, None, 0), (7, 'Address', 'NVARCHAR(70)', 0, None, 0), (8, 'City', 'NVARCHAR(40)', 0, None, 0), (9, 'State', 'NVARCHAR(40)', 0, None, 0), (10, 'Country', 'NVARCHAR(40)', 0, None, 0), (11, 'PostalCode', 'NVARCHAR(10)', 0, None, 0), (12, 'Phone', 'NVARCHAR(24)', 0, None, 0), (13, 'Fax', 'NVARCHAR(24)', 0, None, 0), (14, 'Email', 'NVARCHAR(60)', 0, None, 0)]
2025-05-27 23:47:15 | DEBUG    | __main__:log_database_schema:140 - Schema for table genres: [(0, 'GenreId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(120)', 0, None, 0)]
2025-05-27 23:47:15 | DEBUG    | __main__:log_database_schema:140 - Schema for table invoices: [(0, 'InvoiceId', 'INTEGER', 1, None, 1), (1, 'CustomerId', 'INTEGER', 1, None, 0), (2, 'InvoiceDate', 'DATETIME', 1, None, 0), (3, 'BillingAddress', 'NVARCHAR(70)', 0, None, 0), (4, 'BillingCity', 'NVARCHAR(40)', 0, None, 0), (5, 'BillingState', 'NVARCHAR(40)', 0, None, 0), (6, 'BillingCountry', 'NVARCHAR(40)', 0, None, 0), (7, 'BillingPostalCode', 'NVARCHAR(10)', 0, None, 0), (8, 'Total', 'NUMERIC(10,2)', 1, None, 0)]
2025-05-27 23:47:15 | DEBUG    | __main__:log_database_schema:140 - Schema for table invoice_items: [(0, 'InvoiceLineId', 'INTEGER', 1, None, 1), (1, 'InvoiceId', 'INTEGER', 1, None, 0), (2, 'TrackId', 'INTEGER', 1, None, 0), (3, 'UnitPrice', 'NUMERIC(10,2)', 1, None, 0), (4, 'Quantity', 'INTEGER', 1, None, 0)]
2025-05-27 23:47:15 | DEBUG    | __main__:log_database_schema:140 - Schema for table media_types: [(0, 'MediaTypeId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(120)', 0, None, 0)]
2025-05-27 23:47:15 | DEBUG    | __main__:log_database_schema:140 - Schema for table playlists: [(0, 'PlaylistId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(120)', 0, None, 0)]
2025-05-27 23:47:15 | DEBUG    | __main__:log_database_schema:140 - Schema for table playlist_track: [(0, 'PlaylistId', 'INTEGER', 1, None, 1), (1, 'TrackId', 'INTEGER', 1, None, 2)]
2025-05-27 23:47:15 | DEBUG    | __main__:log_database_schema:140 - Schema for table tracks: [(0, 'TrackId', 'INTEGER', 1, None, 1), (1, 'Name', 'NVARCHAR(200)', 1, None, 0), (2, 'AlbumId', 'INTEGER', 0, None, 0), (3, 'MediaTypeId', 'INTEGER', 1, None, 0), (4, 'GenreId', 'INTEGER', 0, None, 0), (5, 'Composer', 'NVARCHAR(220)', 0, None, 0), (6, 'Milliseconds', 'INTEGER', 1, None, 0), (7, 'Bytes', 'INTEGER', 0, None, 0), (8, 'UnitPrice', 'NUMERIC(10,2)', 1, None, 0)]
2025-05-27 23:47:15 | DEBUG    | __main__:log_database_schema:140 - Schema for table sqlite_stat1: [(0, 'tbl', '', 0, None, 0), (1, 'idx', '', 0, None, 0), (2, 'stat', '', 0, None, 0)]
2025-05-27 23:47:15 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.log_database_schema | duration=0.010s
2025-05-27 23:47:15 | SUCCESS  | __main__:initialize_database:119 - Database initialization completed
2025-05-27 23:47:15 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.initialize_database | duration=0.066s
2025-05-27 23:47:15 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.initialize_llm | args=(<__main__.TextToSQLApp object at 0x000002A94E47F710>,) | kwargs={}
2025-05-27 23:47:15 | INFO     | __main__:initialize_llm:151 - Initializing Groq LLM
2025-05-27 23:47:15 | DEBUG    | __main__:initialize_llm:161 - Using Groq API key: gsk_sBCV***Lnql
2025-05-27 23:47:16 | INFO     | __main__:initialize_llm:177 - LLM initialization successful in 1.122s
2025-05-27 23:47:16 | DEBUG    | __main__:initialize_llm:178 - LLM test response: content='OK' additional_kwargs={} response_metadata={'token_usage': {'completion_tokens': 2, 'prompt_tokens': 42, 'total_tokens': 44, 'completion_time': 0.00804803, 'prompt_time': 0.003652836, 'queue_time': 0.056896844, 'total_time': 0.011700866}, 'model_name': 'llama-3.3-70b-versatile', 'system_fingerprint': 'fp_2ddfbb0da0', 'finish_reason': 'stop', 'logprobs': None} id='run--fa584ef6-43bf-4384-b691-f0f18c761106-0' usage_metadata={'input_tokens': 42, 'output_tokens': 2, 'total_tokens': 44}
2025-05-27 23:47:16 | INFO     | __main__:initialize_llm:179 - Using model: llama-3.3-70b-versatile
2025-05-27 23:47:16 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.initialize_llm | duration=1.137s
2025-05-27 23:47:16 | INFO     | decorators:wrapper:37 - PERFORMANCE: __main__.TextToSQLApp.initialize_llm took 1.137s
2025-05-27 23:47:16 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.setup_sql_agent | args=(<__main__.TextToSQLApp object at 0x000002A94E47F710>,) | kwargs={}
2025-05-27 23:47:16 | INFO     | __main__:setup_sql_agent:190 - Setting up SQL agent
2025-05-27 23:47:16 | DEBUG    | __main__:setup_sql_agent:194 - SQL toolkit created successfully
2025-05-27 23:47:16 | DEBUG    | __main__:setup_sql_agent:227 - Creating SQL agent with custom prompt
2025-05-27 23:47:16 | SUCCESS  | __main__:setup_sql_agent:236 - SQL agent setup completed successfully
2025-05-27 23:47:16 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.setup_sql_agent | duration=0.000s
2025-05-27 23:47:16 | SUCCESS  | __main__:__init__:67 - Application initialized successfully
2025-05-27 23:47:16 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.run | args=(<__main__.TextToSQLApp object at 0x000002A94E47F710>,) | kwargs={}
2025-05-27 23:47:16 | INFO     | __main__:run:627 - Starting main application runner
2025-05-27 23:47:16 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.display_logs_sidebar | args=(<__main__.TextToSQLApp object at 0x000002A94E47F710>,) | kwargs={}
2025-05-27 23:47:16 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.display_logs_sidebar | duration=0.000s
2025-05-27 23:47:16 | INFO     | __main__:run:691 - Processing button clicked with query: 'Show me the top 10 best-selling tracks'
2025-05-27 23:47:16 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.process_natural_language_query | args=(<__main__.TextToSQLApp object at 0x000002A94E47F710>, 'Show me the top 10 best-selling tracks') | kwargs={}
2025-05-27 23:47:16 | INFO     | __main__:process_natural_language_query:454 - Processing natural language query: 'Show me the top 10 best-selling tracks'
2025-05-27 23:47:16 | INFO     | __main__:process_natural_language_query:475 - Query ID: query_1748369836
2025-05-27 23:47:16 | INFO     | __main__:process_natural_language_query:479 - Step 1: Converting natural language to SQL using LLM (with capture)
2025-05-27 23:47:24 | INFO     | __main__:process_natural_language_query:488 - c in 7.777s
2025-05-27 23:47:24 | INFO     | __main__:process_natural_language_query:498 - Agent output: The top 10 best-selling tracks are: 
1. The Trooper (5 times)
2. Untitled (4 times)
3. The Number Of The Beast (4 times)
4. Sure Know Something (4 times)
5. Hallowed Be Thy Name (4 times)
6. Eruption (4 times)
7. Where Eagles Dare (3 times)
8. Welcome Home (Sanitarium) (3 times)
9. Sweetest Thing (3 times)
10. Surrender (3 times)...
2025-05-27 23:47:24 | SUCCESS  | __main__:process_natural_language_query:505 - Captured SQL query: SELECT T.Name, SUM(II.Quantity) AS TotalQuantity FROM tracks T JOIN invoice_items II ON T.TrackId = II.TrackId GROUP BY T.Name ORDER BY TotalQuantity DESC LIMIT 10...
2025-05-27 23:47:24 | INFO     | __main__:process_natural_language_query:508 - Step 2: Executing SQL query
2025-05-27 23:47:24 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.execute_query | args=(<__main__.TextToSQLApp object at 0x000002A94E47F710>, 'SELECT T.Name, SUM(II.Quantity) AS TotalQuantity FROM tracks T JOIN invoice_items II ON T.TrackId = II.TrackId GROUP BY T.Name ORDER BY TotalQua... | kwargs={}
2025-05-27 23:47:24 | INFO     | __main__:execute_query:397 - Executing SQL query: SELECT T.Name, SUM(II.Quantity) AS TotalQuantity FROM tracks T JOIN invoice_items II ON T.TrackId = ...
2025-05-27 23:47:24 | DEBUG    | __main__:execute_query:404 - Query has 1 lines
2025-05-27 23:47:24 | DEBUG    | __main__:execute_query:409 - Query complexity score: 3
2025-05-27 23:47:24 | DEBUG    | __main__:execute_query:412 - Database connection established for query execution
2025-05-27 23:47:24 | SUCCESS  | __main__:execute_query:419 - Query executed successfully in 0.009s
2025-05-27 23:47:24 | INFO     | __main__:execute_query:420 - Query returned 10 rows and 2 columns
2025-05-27 23:47:24 | DEBUG    | __main__:execute_query:423 - Column names: ['Name', 'TotalQuantity']
2025-05-27 23:47:24 | DEBUG    | __main__:execute_query:424 - Data types: {'Name': dtype('O'), 'TotalQuantity': dtype('int64')}
2025-05-27 23:47:24 | DEBUG    | __main__:execute_query:429 - Sample row: {'Name': 'The Trooper', 'TotalQuantity': 5}
2025-05-27 23:47:24 | INFO     | logger_config:log_performance:93 - PERFORMANCE: {"operation": "sql_query_execution", "duration_ms": 9.25, "timestamp": "2025-05-27T23:47:24.313795", "rows_returned": 10, "columns_returned": 2, "complexity_score": 3, "query_length": 163}
2025-05-27 23:47:24 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.execute_query | duration=0.014s
2025-05-27 23:47:24 | INFO     | __main__:process_natural_language_query:519 - Step 3: Determining chart generation requirements
2025-05-27 23:47:24 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.determine_chart_type | args=(<__main__.TextToSQLApp object at 0x000002A94E47F710>, 'Show me the top 10 best-selling tracks',                         Name  TotalQuantity
0                The Trooper              5
1              ... | kwargs={}
2025-05-27 23:47:24 | INFO     | __main__:determine_chart_type:290 - Determining chart type for query: 'Show me the top 10 best-selling tracks...' with data shape: (10, 2)
2025-05-27 23:47:24 | DEBUG    | __main__:determine_chart_type:301 - Query lowercase: show me the top 10 best-selling tracks
2025-05-27 23:47:24 | DEBUG    | __main__:determine_chart_type:313 - Query analysis - temporal: False, comparison: True, distribution: False
2025-05-27 23:47:24 | DEBUG    | __main__:determine_chart_type:319 - Data analysis - numeric columns: ['TotalQuantity'], categorical columns: ['Name']
2025-05-27 23:47:24 | DEBUG    | __main__:determine_chart_type:328 - Selected columns - X: Name, Y: TotalQuantity
2025-05-27 23:47:24 | INFO     | __main__:determine_chart_type:340 - Selected bar chart due to comparison context or categorical data
2025-05-27 23:47:24 | INFO     | __main__:determine_chart_type:348 - Chart decision: type=bar, x_col=Name, y_col=TotalQuantity
2025-05-27 23:47:24 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.determine_chart_type | duration=0.004s
2025-05-27 23:47:24 | INFO     | __main__:process_natural_language_query:525 - Step 4: Creating bar chart
2025-05-27 23:47:24 | DEBUG    | decorators:wrapper:17 - ENTRY: __main__.TextToSQLApp.create_chart | args=(<__main__.TextToSQLApp object at 0x000002A94E47F710>, 'bar',                         Name  TotalQuantity
0                The Trooper              5
1                   Untitled              4
2    T... | kwargs={}
2025-05-27 23:47:24 | INFO     | __main__:create_chart:355 - Creating bar chart with x_col='Name', y_col='TotalQuantity'
2025-05-27 23:47:24 | DEBUG    | __main__:create_chart:361 - Creating bar chart
2025-05-27 23:47:24 | SUCCESS  | __main__:create_chart:377 - Bar chart created successfully in 0.058s
2025-05-27 23:47:24 | INFO     | logger_config:log_performance:93 - PERFORMANCE: {"operation": "create_bar_chart", "duration_ms": 58.19, "timestamp": "2025-05-27T23:47:24.407397", "data_rows": 10, "x_col": "Name", "y_col": "TotalQuantity"}
2025-05-27 23:47:24 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.create_chart | duration=0.060s
2025-05-27 23:47:24 | SUCCESS  | __main__:process_natural_language_query:532 - Query processing completed successfully in 7.904s
2025-05-27 23:47:24 | INFO     | __main__:process_natural_language_query:533 - Results summary - Rows: 10, Columns: 2, Chart: bar
2025-05-27 23:47:24 | INFO     | logger_config:log_performance:93 - PERFORMANCE: {"operation": "full_query_processing", "duration_ms": 7903.68, "timestamp": "2025-05-27T23:47:24.414301", "query_id": "query_1748369836", "user_query_length": 38, "sql_query_length": 163, "result_rows": 10, "result_columns": 2, "chart_type": "bar", "llm_time": 7.777221202850342}
2025-05-27 23:47:24 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.process_natural_language_query | duration=7.913s
2025-05-27 23:47:24 | INFO     | decorators:wrapper:37 - PERFORMANCE: __main__.TextToSQLApp.process_natural_language_query took 7.913s
2025-05-27 23:47:24 | INFO     | __main__:run:695 - Natural language Query processing completed: SQL query : SELECT T.Name, SUM(II.Quantity) AS TotalQuantity FROM tracks T JOIN invoice_items II ON T.TrackId = II.TrackId GROUP BY T.Name ORDER BY TotalQuantity DESC LIMIT 10, DataFrame:                         Name  TotalQuantity
0                The Trooper              5
1                   Untitled              4
2    The Number Of The Beast              4
3        Sure Know Something              4
4       Hallowed Be Thy Name              4
5                   Eruption              4
6          Where Eagles Dare              3
7  Welcome Home (Sanitarium)              3
8             Sweetest Thing              3
9                  Surrender              3, Chart info: Figure({
    'data': [{'hovertemplate': 'Name=%{x}<br>TotalQuantity=%{y}<extra></extra>',
              'legendgroup': '',
              'marker': {'color': '#000001', 'pattern': {'shape': ''}},
              'name': '',
              'orientation': 'v',
              'showlegend': False,
              'textposition': 'auto',
              'type': 'bar',
              'x': array(['The Trooper', 'Untitled', 'The Number Of The Beast',
                          'Sure Know Something', 'Hallowed Be Thy Name', 'Eruption',
                          'Where Eagles Dare', 'Welcome Home (Sanitarium)', 'Sweetest Thing',
                          'Surrender'], dtype=object),
              'xaxis': 'x',
              'y': {'bdata': 'BQQEBAQEAwMDAw==', 'dtype': 'i1'},
              'yaxis': 'y'}],
    'layout': {'barmode': 'relative',
               'height': 400,
               'legend': {'tracegroupgap': 0},
               'template': '...',
               'title': {'text': 'TotalQuantity by Name'},
               'xaxis': {'anchor': 'y', 'domain': [0.0, 1.0], 'title': {'text': 'Name'}},
               'yaxis': {'anchor': 'x', 'domain': [0.0, 1.0], 'title': {'text': 'TotalQuantity'}}}
}), Chart type: bar, Chart columns: ('Name', 'TotalQuantity')
2025-05-27 23:47:24 | INFO     | __main__:run:698 - Displaying successful results
2025-05-27 23:47:24 | DEBUG    | __main__:run:703 - SQL query displayed in UI
2025-05-27 23:47:24 | DEBUG    | __main__:run:714 - Results table displayed in UI
2025-05-27 23:47:24 | DEBUG    | __main__:run:722 - Chart displayed in UI: bar
2025-05-27 23:47:24 | INFO     | __main__:run:770 - Main application runner completed successfully
2025-05-27 23:47:24 | DEBUG    | decorators:wrapper:33 - EXIT: __main__.TextToSQLApp.run | duration=7.986s
2025-05-27 23:47:24 | INFO     | decorators:wrapper:37 - PERFORMANCE: __main__.TextToSQLApp.run took 7.986s
2025-05-27 23:47:24 | INFO     | __main__:<module>:979 - Application session completed successfully
2025-05-27 23:47:24 | INFO     | __main__:<module>:987 - Application shutdown
